{"version":3,"sources":["components/Footer.js","components/Staff_BookAppointment.js","ipaddress/ip.js","components/Navbar.js","components/HomeScreen.js","components/Login.js","components/Staff_PatientRegistration.js","components/Staff_TodaysAppointment.js","components/Staff_Dashboard.js","components/Staff_ClinicPatients.js","Apis/Profile/index.js","components/ForgotPassword.js","components/Doctor_Navbar.js","Apis/PatientInQueue/index.js","components/Dasboard_Component/Doctor/PatientInQueue.js","Apis/Dashboard/Edit_Appointment_From_PatientIn/index.js","components/Dasboard_Component/Doctor/Edit_appointment_from_patient_in.js","components/Dasboard_Component/Doctor/BookedAppointment.js","components/Doctor_Dashboard.js","Apis/Patient_Reports/index.js","Apis/Broadcast_Message/index.js","components/Broadcast_Messages/index.js","components/Doctor_Home.js","Apis/Medicines/index.js","components/Medicines/Edit_Medicine/index.js","components/Medicines/Delete_Medicine/index.js","components/Doctor_AddMedicine.js","components/Patient_Reports_Image_Comp/index.js","components/Patient_Reports_Image_Comp/DeletePatient_Report.js","components/Doctor_Reports.js","components/Doctor_AddFacilities.js","components/Doctor_UploadReports.js","Apis/Clinic_Staff/index.js","components/Doctor_AddStaff.js","Apis/Book_Appointment/index.js","components/Doctor_BookAppointment.js","Apis/Clinic_Services/index.js","components/Clinic_Services/Delete_Service/index.js","components/Doctor_AddServices.js","components/Clinic_Services/Edit_Services/index.js","components/Clinic_Services/Image_Upload/index.js","components/Doctor_ClinicServices.js","components/Doctor_PatientRegistration.js","Apis/Todays_Appointments/index.js","components/Todays_Appointments/Slots/Edit_Appointment/index.js","Apis/Dashboard/Cancel_Appointment/index.js","components/Todays_Appointments/Slots/Delete_Appointment/index.js","components/Doctor_TodaysAppointment.js","Apis/PatientInQueue/Generate_Prescription/Medicines_Table/index.js","components/SendIn_Patient_details/Cancel_Appointment/index.js","components/Doctor_PatientDetails_SendIn.js","components/Doctor_TreatPatient.js","Prescription_VinayH7B8_38 (1).pdf","components/Generate_Prescription/selected_medicines.js","components/Generate_Prescription/Payment_Mode/index.js","components/Doctor_GeneratePrescription.js","Apis/Clinic_Patients/Patient_Registration.js","Apis/Clinic_Patients/Edit_Patient.js","components/Clinic_Patients/Edit_Patient/index.js","Apis/Clinic_Patients/Delete_Patient.js","components/Clinic_Patients/Delete_Patient/index.js","components/Clinic_Patients/Add_Patient/index.js","components/Doctor_ClinicPatients.js","components/Staff_ClinicServices.js","components/Staff_PatientDetails_SendIn.js","components/Profile/Change_Password/index.js","components/Doctor_Profile.js","components/Doctor_PatientMedicalHistory.js","Apis/Home_Visitors/index.js","components/Profile/Edit_Profile/Doctor_EditProfileImage.js","components/Doctor_EditProfile.js","components/Home_Visitors/Delete_Home_Visitor/index.js","components/Home_Visitors/Edit_Details/index.js","components/Doctor_HomeVisitors.js","Apis/HomeVisitorRequest/GetHomeVisitorRequest/index.js","Apis/HomeVisitorRequest/ApprovedRequest/index.js","Apis/HomeVisitorRequest/DeleteHomeVisitorRequest/index.js","components/HomeVisitor_Request/Delete_Request/index.js","Apis/HomeVisitorRequest/AddHVRequest/index.js","components/HomeVisitor_Request/Add_HV_Request/index.js","components/Doctor_HomeVisitRequest.js","components/Doctor_AddHomeVisitors.js","components/EditStaffDetails/Editstaff/index.js","components/EditStaffDetails/Delele_Staff/index.js","components/Doctor_ClinicStaff.js","Apis/HomeVisitorRequest/AssignHomeVisitor/GetHomeVisitors/index.js","components/Doctor_AssignHomeVisitor.js","Apis/TV_Advertisements/index.js","components/TV_Slider/SliderComponent.js","components/TV_Slider/Patient_In_Queue_Component.js","components/TV_Slider/Show_Send_In_Details/index.js","components/Doctor_TV_TodaysAppointments.js","Apis/Clinic_Details/index.js","Apis/Clinicdetails/index.js","components/Doctor_EditClinicDetails.js","components/Pdf_Viewer/Modal/index.js","Apis/Home_Visitors/Home_Visitor_History/index.js","components/Doctor_HomeVisitorHistory.js","components/Doctor_PaymentDetails.js","Apis/payment_reports_apis/index.js","components/Pdf_Viewer/index.js","components/Payment_Reports/Appointment_Reports/index.js","components/Payment_Reports/Home_visitor_Reports/index.js","components/Payment_Reports/Staff_Reports/index.js","components/Payment_Reports/Finance_Reports/index.js","components/Doctor_PaymentReports.js","components/Calender/Show_Appointment_Details/Alert.js","components/Calender/Show_Appointment_Details/index.js","components/Calender/index.js","components/Todays_appointment_tabs.js","components/Admin_Navbar.js","Admin_Apis/Add_Clinic/index.js","components/Sign_Up/index.js","components/SignUp.js","components/Admin_AddClinic.js","components/Admin_Home.js","components/Admin_Dashboard.js","components/Admin_ClinicDetails.js","components/Admin_DoctorDetails.js","Admin_Apis/Clinic_Details/index.js","components/Admin_Doctor_Clinics.js","components/Staff_Screens/Staff_Navbar.js","Apis/Staff/Broadcast_Message/index.js","components/Staff_Screens/components/Broadcast_Messages/index.js","components/Staff_Screens/Staff_Home.js","Apis/PatientInQueue/Staff_Apis/index.js","components/Staff_Screens/components/Dasboard_Component/Staff/PatientInQueue.js","components/Staff_Screens/components/Dasboard_Component/Staff/Edit_appointment_from_patient_in.js","components/Staff_Screens/components/Dasboard_Component/Staff/BookedAppointment.js","components/Staff_Screens/Staff_Dashboard.js","Apis/Staff/Clinic_Patients/Patient_Registration.js","Apis/Staff/Clinic_Patients/Edit_Patient.js","components/Staff_Screens/components/Clinic_Patients/Edit_Patient/index.js","Apis/Staff/Clinic_Patients/Delete_Patient.js","components/Staff_Screens/components/Clinic_Patients/Delete_Patient/index.js","components/Staff_Screens/components/Clinic_Patients/Add_Patient/index.js","components/Staff_Screens/Staff_ClinicPatients.js","Apis/Staff/Book_Appointment/index.js","components/Staff_Screens/Staff_Book_Appointment.js","Apis/Staff/Todays_Appointments/index.js","Apis/Staff/Dashboard/Edit_Appointment_From_PatientIn/index.js","components/Staff_Screens/components/Todays_Appointments/Slots/Edit_Appointment/index.js","Apis/Staff/Dashboard/Cancel_Appointment/index.js","components/Staff_Screens/components/Todays_Appointments/Slots/Delete_Appointment/index.js","components/Staff_Screens/Staff_Todays_Appointment.js","Apis/Staff/TV_Advertisements/index.js","components/Staff_Screens/components/TV_Slider/SliderComponent.js","components/Staff_Screens/components/TV_Slider/Patient_In_Queue_Component.js","components/Staff_Screens/Staff_TV_TodaysAppointments.js","Apis/Staff/Profile/index.js","components/Staff_Screens/components/Profile/Change_Password/index.js","components/Staff_Screens/Staff_Profile.js","Apis/Staff/Home_Visitors/index.js","components/Staff_Screens/components/Profile/Edit_Profile/Doctor_EditProfileImage.js","components/Staff_Screens/Staff_EditProfile.js","Apis/Staff/Patient_Reports/index.js","components/Staff_Screens/components/Patient_Reports_Image_Comp/index.js","components/Staff_Screens/components/Patient_Reports_Image_Comp/DeletePatient_Report.js","components/Staff_Screens/Staff_Reports.js","components/Staff_Screens/Staff_UploadReports.js","Apis/Staff/HomeVisitorRequest/ApprovedRequest/index.js","Apis/Staff/HomeVisitorRequest/DeleteHomeVisitorRequest/index.js","components/Staff_Screens/components/HomeVisitor_Request/Delete_Request/index.js","Apis/Staff/HomeVisitorRequest/AddHVRequest/index.js","components/Staff_Screens/components/HomeVisitor_Request/Add_HV_Request/index.js","components/Staff_Screens/Staff_Home_Visit_Request.js","components/Staff_Screens/components/Home_Visitors/Delete_Home_Visitor/index.js","components/Staff_Screens/components/Home_Visitors/Edit_Details/index.js","components/Staff_Screens/Staff_Home_Visitors.js","components/Staff_Screens/components/SendIn_Patient_details/Cancel_Appointment/index.js","components/Staff_Screens/Staff_PatientDetails_SendIn.js","Apis/Staff/HomeVisitorRequest/AssignHomeVisitor/GetHomeVisitors/index.js","components/Staff_Screens/Staff_Assign_Home_Visitor.js","Redux/reducers/index.js","Redux/Store/index.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","position","style","fontSize","flex","textAlign","Link","href","Date","getFullYear","useStyles","makeStyles","theme","appBar","top","bottom","backgroundColor","fontFamily","fontStyle","fontWeight","root","flexGrow","title","Footer","classes","className","AppBar","drawerWidth","columns","id","label","minWidth","align","format","value","toLocaleString","createData","name","mobile","rows","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","clinicname","drname","alignSelf","overflow","textOverflow","paper","borderRadius","services","report","grid","gridShift","griditem","headings","search","shape","alpha","palette","common","white","searchIcon","paddingTop","pointerEvents","inputRoot","inputInput","paddingLeft","height","btnviewprofile","aspectRatio","tbl","formControl","margin","btnbookappointment","btnreset","headingBookAppointment","headingBookAppointmentShift","textField","BookAppointment","useTheme","React","useState","open","setOpen","auth","anchorEl","open1","Boolean","anchorElProfile","setAnchorElProfile","openprofile","navigate","useNavigate","page","setPage","rowsPerPage","setRowsPerPage","selected","setSelected","appselected","setAppSelected","timeselected","setTimeSelected","handleClose","menuItems","text","icon","DashboardIcon","onClick","GroupAddIcon","PermContactCalendarIcon","TodayIcon","PeopleIcon","ListIcon","CssBaseline","clsx","Toolbar","IconButton","edge","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","src","alt","logo","noWrap","profile","event","currentTarget","MenuItem","Drawer","direction","Divider","List","map","index","Icon","ListItem","button","ListItemIcon","ListItemText","primary","Grid","container","item","xs","sm","Paper","elevation","InputBase","input","inputProps","Button","size","TableContainer","Table","stickyHeader","TableHead","TableRow","borderTopLeftRadius","borderTopRightRadius","column","TableCell","TableBody","slice","row","hover","role","tabIndex","code","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","newPage","onRowsPerPageChange","target","borderBlockEnd","paddingBottom","borderRight","FormControl","InputLabel","htmlFor","Select","native","onChange","TextField","type","ip","Navbar","doctordata","setdoctordata","fetchDoctorProfile","a","localStorage","getItem","data","parsed","JSON","parse","userid","axios","post","DoctorId","doctorInfo","Doctor","useEffect","ClinicName","FirstName","LastName","secondary","HomeScreen","justify","minHeight","border","GreenCheckbox","withStyles","green","checked","props","Checkbox","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","avatar","main","form","marginTop","submit","Login","selectedValue","setSelectedValue","state","setState","setmobile","password","setpassword","showPassword","setshowPassword","handleChange","setWithExpiry","key","ttl","expiry","getTime","checkbox","Role","setItem","stringify","RememberUser","itemStr","console","log","handleSubmit","date","setDate","getDate","dateString","toISOString","split","MobileNo","Password","then","Json","window","success","token","catch","error","response","message","alert","responseData","md","square","noValidate","fullWidth","required","onInput","e","Math","max","parseInt","toString","setMobileNo","setPassword","InputProps","endAdornment","InputAdornment","onMouseDown","preventDefault","Radio","FormGroup","FormControlLabel","control","Box","mt","float","btnsearch","btnregister","headingPatientRegistration","headingPatientRegistrationShift","headingNewRegistration","inputFields","toFixed","uid","email","appchannel","TodaysAppointment","morningslot","Container","wrap","s","paddingRight","defaultValue","patienttable","sx","maxHeight","Dashboard","marginBottom","renderRow","borderBottom","Fragment","ClinicPatients","itemSize","itemCount","change_password","obj","patch","changepass","forgot_password","forgotpass","EditDoctordata","clinicid","Email","Address","Category","City","Pincode","State","Country","Education","DOB","MorningStartTime","MorningEndTime","EveningStartTime","EveningEndTime","Experience","Gender","body","UserId","ClinicId","editdoctorsrequest","ForgotPassword","forgotPassword","autoComplete","DoctorNavbar","setsessionRole","hvreq","sethvreq","appointcount","setappointcount","setopenmodal","setSubscriptiondata","fetchHVRequestCount","hvInfo","HVRequest","fetchAppointmentCount","doctorid","appointInfo","Appointment","fetch_Subscription_Profile","ClinicInfo","Subscription","testing","subcription","now","current","removeItem","HomeIcon","TvIcon","AssignmentTurnedInIcon","PeopleOutlineIcon","AssignmentIcon","ChatIcon","SupervisorAccountIcon","DirectionsWalkIcon","LocalHospitalIcon","SettingsIcon","ProfileImage","cursor","PatientInQueue","res","BookedAppointments","SendIn","AppointmentStatus","PatientInueue_List","setsendIn","fetchSendIn","location","reload","fetchTreatNow","details","ShortNote","paper2","AppointmentTime","paperServices","gridServices","Time","timingInfo","Slots","Note_for_Doctor","notefordoctor","NoteForDoctor","Edit_App_for_Dashboard","edit","Edit_Appointment_From_PatientIn_Queue","show","handlemodal","maxWidth","time","settime","doctorsNote","setdoctorsNote","AppointmentReason","reason","setReason","setnotefordoctor","Patient_BP","bp","setBp","Patient_Temp","temp","setTemp","Patient_Height","setHeight","Patient_Weight","weight","setWeight","Patient_Plus","plus","setPlus","Patient_SPO2","spo2","setSpo2","AppointmentDate","appDate","setappDate","appTime","setappTime","fetchtimings","fetchNotefordoctor","doctorsNoteInfo","EditAppointmentDetails","currentTime","systemTime","toTimeString","tdate","editrequest","Dialog","DialogTitle","DialogContent","DialogContentText","PatientId","v","ActualTime","DisplayTime","InputLabelProps","shrink","vitalinputs","vitaltextField","test","transparent","btnYes","btnCancle","BookedAppointment_List","patientIn","setpatientIn","openmodal","fetchPatientIn","DoctorDashboard","todaysregistration","settodaysregistration","appointments","setappointments","patientInQueue","setPatientInQueue","bookedAppointments","setbookedAppointments","fetchRegistrationData","todayregistrationInfo","setInterval","fetchDailyAppointments","appInfo","interval","fetchPatientInQueue","fetchBookedAppointments","clearInterval","handleTodaysAppointmentClick","DailyAppointment","PatientInQueueAppointments","DailyRecord","DailyReport","MonthlyAppintments","btn","Patients_Data","patientInfo","Patients","Reports","reports","PatientReports","Upload_Reports","reportsdata","addReports","getReportsByTitle","reportitle","ReportTitle","getPatientReports","DeleteReportsByTitle","reporttitle","delete","deletereports","DeleteReportsById","Add_Broadcast","broadcastmessage","BroadcastMessage","settitle","description","setdescription","addBroadcastMessage","Title","Discription","request","multiline","rowsMax","Alert","severity","fontsize","DoctorHome","setOpenmodal","Add_Medicine","addmedicine","Delete_Medicine_Details_by_id","edit_Medicine","editmedicine","Search_Medicine","MedicineName","medicineInfo","Medicine","Edit_Medicine","handleEditModal","mName","setmName","MedicineDiscription","mDescription","setmDescription","MedicineType","mType","setmType","Strength","mStrength","setmStrength","Quantity","mQuantity","setmQuantity","StartDate","mStartDate","setmStartDate","ExpiryDate","mExpiryDate","setmExpiryDate","editMedicine","sessiondata","formControlForm","textFieldForm","autoFocus","btnview","btnAdd","headingAddMedicine","Delete_Medicine","handleclose","Transition","forwardRef","ref","Slide","Delete_Api","TransitionComponent","DialogActions","field","headerName","editable","sortable","RenderCell","params","openeditmodal","setopeneditmodal","opendeletemodal","setOpenDeletemodal","DoctorAddMedicine","medicines","setmedicines","mSymptoms","searchterm","setsearchterm","fetchmedicines","addMedicine","Symptoms","add","SearchMedicine","setOpenEditmodal","handleCloseEditmodal","maxRows","placeholder","rowHeight","columnWidth","pageSize","PatientReportImages","handleClosemodal","Data","setData","FetchData","DeleteReport","overflowY","groupreports","ReportImage","onError","onerror","DeletePatientReports","handleCloseDeletemodal","DeleteReports","valueGetter","getValue","DoctorReports","patientData","setpatientData","reportsData","setreportsData","puserid","setpuserid","modalData","setmodalData","setopendeletemodal","deletemodalData","setdeletemodalData","patientsearch","setpatientsearch","fetchPatientData","handleRowClick","detail","getImageData","getDeleteModalData","searchPatient","Name","patientsInfo","btnSearch","onRowClick","newSelection","btnUpload","textDecoration","textUnderlineOffset","facilitiesInput","DoctorAddFacilities","btnDelete","connect","useLocation","reportdetails","base64","setbase64","dispatch","useDispatch","today","base64String","imageData","useSelector","addPatient_Reports","handleAddReports","floor","random","payload","handleUploadReports","requestReports","openImageInNewTab","Image","document","write","outerHTML","file","querySelector","reader","FileReader","onload","result","replace","readAsDataURL","base64image","Doctor_Category","category","DoctorsCategory","Times","times","Add_Staff","registerStaff","EditStaffdata","editstaffrequest","Delete_Staff_Details_by_id","DoctorAddStaff","borderTop","App_Channels","appchannelInfo","AppointmentChannel","App_Types","apptypeInfo","AppointmentType","Doctors","Book_Appointment","addAppointment","HVDoctors","HomeVisitors","DoctorBookAppointment","patientDetails","setpatientDetails","doctorData","setdoctorData","appChannel","setappChannel","doctor","setDoctor","appType","setappType","apptypeselected","setapptypeSelected","appchannelselected","setappchannelSelected","walkIn","setwalkIn","setmedicalHistory","setTitle","doctorNote","setdoctorNote","fetchclinicpatientsdata","clinicpatientInfo","fetchdoctorsdata","fetchappchannels","fetchapptypes","fetchmedicalhistory","medicalhistoryInfo","patientDetailedInfo","PatientDetails","handleBookAppointment","trim","BookedDate","createdBy","updatedBy","checkedA","checkedB","textDecorationThickness","itexm","opacity","disabled","Switch","right","Services","serviceInfo","Service","Add_Services","formData","headers","addService","Delete_Service_Details_by_id","Edit_Services","Userid","ClinicID","ServiceName","Cost","Discount","Description","Search_service","UploadServiceImage","formdata","add_Service","UploadClinicdetail","Delete_Service","DoctorAddServices","serviceData","setserviceData","serviceName","setserviceName","price","setprice","discount","setdiscount","setcategory","seriveImage","setserviceImage","fetchServices","AddService","FormData","append","add_service","SearchService","files","Edit_Service_Details","setServiceName","setCategory","Price","cost","setcost","setDiscount","setDescription","Edit","facilitiesTitle","Clinic_Service_Image","setfile","fetchClinicservices","enctype","textTransform","overflowWrap","DoctorClinicServices","serviceDetails","setserviceDetails","clinicservices","setclinicservices","fetchServiceData","handleCellClick","serviceDetailedInfo","DiscountPrice","ServiceImage","DoctorPatientRegistration","gender","setGender","borderLeft","GetMorningSlots","getAppInfo","GetEveningSlots","Todays_Appointment","Todays_Appointment_By_Date","startdate","enddate","EndDate","Edit_Appointment_From_TodaysApp","Cancel_Appointment_Details","Cancel_Appointment_for_Calender","Delete_Appointment","t_date","DoctorTodaysAppointment","appointmentlist","setappointmentlist","setstartdate","endDate","setendDate","morningcount","setmorningcount","eveningcount","seteveningcount","fetchAppointments","fetchMorningCount","fetchEveningCount","Appointmentbydate","Clinicid","Count","UpdateAppointmentDetails","editAppointment","fetchMedicineData","addPrescriptionDetails","prescriptiondata","addprescription","generatePrescription","generatePdf","paymentDetails","paymentdetails","getPrescription","prescription","Cancel_Appointment","navigator","btnTreat","DoctorPatientDetails_SendIn","deleteModal","setDeleteModal","setdetails","handleGoBack","Details","btnGeneratePdf","DoctorTreatPatient","prescriptionnote","setprescriptionnote","followupDate","setfollowupDate","costcode","setcostcode","Edit_Appointment","PrescriptionNote","FollowupDate","CostCode","btnPreview","btngenerate","Card","CardContent","BeforeMeal","DoseDays","DoseTime","MorningDose","AfternoonDose","NightDose","paymentmode","setpaymentmode","fees","setfees","handleGeneratePDF","handlePaymentDetails","AppointmentId","PaymentAmount","PaymentMode","counterbtn","setCounterBtn","counterbtn2","setCounterBtn2","dosestring1","setdosestring1","dosestring2","setdosestring2","dosestring3","setdosestring3","dosestring4","setdosestring4","medicineData","setmedicineData","medicineDetails","setmedicineDetails","setprescriptiondata","beforeMeal","setbeforeMeal","defaultarray","setdefaultarray","selectedMedicine","handleaddPrescriptionDetails","reducer","MedicineId","Register_Patient","registerPatient","EditPatient","Edit_Patient","firstnm","setfirstnm","lastnm","setlastnm","setemail","dob","setdob","setgender","address","setaddress","city","setcity","pincode","setpincode","setstate","country","setcountry","Height","setheight","Weight","setweight","EditDetails","cdata","object","editPatientRequest","Delete_Patient_Details","Delete_Patient","Add_Patinet","PatientRegistration","createdDate","registration","DoctorClinicPatients","textDecorationLine","Age","ClinicServices","PatientDetails_SendIn","Change_Password","showConfirmPassword","setshowConfirmPassword","currentpass","setcurrentpass","newpass","setnewpass","confirmpass","setconfirmpass","changePassword","CurrentPassword","NewPassword","ConfirmPassword","DoctorProfile","Clinicdetails","setClinicdetails","openchangepassmodal","setopenchangepassmodal","fetchClinicDetails","Logo","ClinicRegistrationNumber","ClinicGstNumber","ClinicEmail","ClinicMobileNo","ClinicAddress","ClinicCity","ClinicState","ClinicCountry","ClinicPincode","btnSubmit","treatedby","DoctorPatientMedicalHistory","medicalhistory","setmedicalhistory","fetchMedicalHistory","renderCell","PrescriptionURL","Add_HomeVisitor","registerHomeVisitor","Delete_home_visitor_Details_by_id","Edit_HomeVisitor","obje","editHomeVisitor","EditImage","setFile","fetchDoctorImage","Axios","err","DoctorEditProfile","editmodal","seteditmodal","setFirstName","setLastName","setEmail","setEducation","setDOB","setAddress","setCity","setPincode","setCountry","setMorningStartTime","setMorningEndTime","setEveningStartTime","setEveningEndTime","setExperience","setTimes","doctorCategory","setdoctorCategory","Edit_DoctorData","editDoctorRequest","fetchTimes","fetchDoctorCategory","Delete_Home_Vistor_Modal","EditHomeVisitors","firstName","setfirstName","lastName","setlastName","mobileno","setmobileno","education","seteducation","From_AvailabilityTime","setFrom_AvailabilityTime","To_AvailabilityTime","setTo_AvailabilityTime","Monday","monday","setmonday","Tuesday","tuesday","settuesday","Wednesday","wednesday","setwednesday","Thursday","thursday","setthursday","Friday","friday","setfriday","Saturday","saturday","setsaturday","Sunday","sunday","setsunday","editstate","handleAll","previousState","EditHomeVisitor","EditState","edithomevisitorrequest","left","DoctorHomeVisitors","setOpendeletemodal","homevisitorData","sethomevisitorData","homevisitorDetails","sethomevisitorDetails","startTime","setstartTime","endTime","setendTime","homevisitorsearch","sethomevisitorsearch","fetchHomeVisitorData","homevisitorInfo","searchHomeVisitor","hvDoctorInfo","HomeVisitor","Register_HomeVisitor","handleContinue","HomeVisitorRequest","ApprovedHomeVisitorRequest","hvobject","getHours","getMinutes","getSeconds","HomeVisitReason","RequesterId","HomeVisitorId","Delete_Home_Visitor_Request","deleterequest","Delete_HV_Request","AddHomeVisitorRequest","RequestStatus","PreferedTime","PreferedDate","Add_HV_Request","slots","setslots","requestfor","setrequestfor","setdate","setTime","PatientUserid","setPatientUserid","hvuserid","sethvuserid","patient","setpatient","addRequest","buttonProgress","DoctorHomeVisitRequest","requestData","setrequestData","requestorDetails","setrequestorDetails","openapprovedmodal","loading","openDeleteModal","setopenDeleteModal","homevisitorrequestsearch","sethomevisitorrequestsearch","openhvmodal","setopenhvmodal","fetchRequestData","requestInfo","searchHomeVisitorsRequest","opendatemodal","setOpenDatemodal","handleCloseDatemodal","HFName","HLName","CircularProgress","DoctorAddHomeVisitors","statemon","setStateMon","statetue","setStateTue","statewed","setStateWed","statethu","setStateThu","statefri","setStateFri","statesat","setStateSat","statesun","setStateSun","fromtime","setFromTime","totime","setToTime","Edit_staff","editfirstName","seteditfirstName","editlastName","seteditlastName","editmobile","editaddress","seteditaddress","editeducation","setediteducation","editemail","seteditemail","editgender","seteditgender","editcategory","seteditcategory","editrole","seteditrole","settimes","morningStartTime","editmorningStartTime","seteditmorningStartTime","morningEndTime","editmorningEndTime","seteditmorningEndTime","eveningStartTime","editeveningStartTime","setediteveningStartTime","eveningEndTime","editeveningEndTime","setediteveningEndTime","fetchClinicStaffData","par","getElementById","hidden","Delete_Staff_Details","DoctorClinicStaff","staffData","setstaffData","staffDetails","setstaffDetails","setmorningStartTime","setmorningEndTime","seteveningStartTime","seteveningEndTime","staffsearch","setstaffsearch","fetchStaffData","staffInfo","NewUser","searchStaff","Staff","Register_Staff","CodeValueCategory","staffDetailedInfo","GetHomeVisitorDoctors","DoctorAssignHomeVisitor","approvedRequestInfo","setapprovedRequestInfo","hvDoctorData","sethvDoctorData","hvDoctorDetails","sethvDoctorDetails","setassignHomeVisitor","fetchHV_Doctors_Data","gethvdoctorsInfo","handleAssign","handleAssignHomeVisitor","hvid","get_advertisments","getadvertisements","Advetisements","get_patientinqueue","getpatientinqueue","TV_Slider_Component","advertisement","setAdvertisement","fetchAdvertisements","getrequest","dots","autoplay","Patient_In_Queue_TV_Component","DFName","DLName","Show_Send_In_Details","fullScreen","Doctor_TV_TodaysAppointments","SendInModal","setSendInModal","setSendIn","ClinicDetails","setClinicDetails","FetchSend_In","dato","secondinterval","EditClinicdata","editclinicrequest","undefined","Files","fetchClinic","addclinicservice","URL","createObjectURL","DoctorEditClinicDetails","Location","setClinicName","setClinicMobileNo","setClinicEmail","setClinicRegistrationNumber","setClinicGstNumber","setClinicCity","setClinicState","setClinicPincode","setClinicCountry","setClinicAddress","ClinicStartTime","setClinicStartTime","ClinicEndTime","setClinicEndTime","NoOfStaff","setNoOfStaff","Latitude","setLatitude","Longitude","setLongitude","editdetails","seteditdetails","fetchclinicdetails","editClinicRequest","styles","StyleSheet","Headersection","Header","section","viewer","hdText","Text","table","header","bold","Overflow","row1","row2","row3","row4","row5","row6","row7","frow1","frow2","frow3","frow4","frow5","Show_pdf_data","Type","i","PFName","PLName","cash","online","break","TotalAmount","HV_Appointments_by_date","columnsforpdf","root2","DoctorHomeVisitHistory","setdoctor","norecords","setnorecords","view","setview","Show_appointmentsbydate","Report","pdf","setpdf","handlePrintFinish","handlePreviewPDF","PdfPrescription","GetAppointmentStatus","innerHeight","Response","Appointment_Details_by_date","status","Home_Visitor_Details_by_date","Staff_Analysis_Details_by_date","Finance_Analysis_Details_by_date","background","setstatus","appStatus","setappStatus","fetch_AppointmentStatus","Home_Visitor_reports","appointmen","setappointlist","Open","Staff_Analysis_reports","Finance_Analysis_reports","setcash","setonline","countTotalforcash","items","reduce","acc","curr","countTotal","TabPanel","children","other","p","a11yProps","PaymentReports","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","TabIndicatorProps","Tab","Show_Appointment_details","OpenModal","setOpenModal","localizer","momentLocalizer","moment","Appointments_On_Calender","apoointmentdetails","setapoointmentdetails","events","allDay","startDate","year","Array","from","val","toDate","startAccessor","endAccessor","defaultDate","dateFormat","components","month","dateHeader","highlightDate","find","isBetween","min","onSelectEvent","views","Todays_appointment_Tabs","AdminNavbar","fname","setfname","lname","setlname","fetchAdminProfile","UserProfile","Add_Clinic","clinic","Sign_Up_Clinic","Payment_Packages","packages","Package","loadscript","Promise","resolve","script","createElement","appendChild","_DEV_","domain","PaymentPackages","setpackages","amount","setamount","displayRazorpay","amt","datas","order","amtvalue","options","currency","razorpay_payment_id","AddClinic","Razorpay","afterDate","DurationCode","endDt","clinicdetails","fetchPackages","SignUp","clinicName","setclinicName","clinicAddress","setclinicAddress","clinicMobile","setclinicMobile","clinicEmail","setclinicEmail","clinicCity","setclinicCity","clinicState","setclinicState","clinicPincode","setclinicPincode","clinicCountry","setclinicCountry","clinicRegNo","setclinicRegNo","clinicGSTNo","setclinicGSTNo","noofStaff","setnoofStaff","clinicStartTime","setclinicStartTime","clinicEndTime","setclinicEndTime","latitude","setlatitude","longitude","setlongitude","clinicLogo","setclinicLogo","dataformodal","setdataformodal","showpackagemodal","setshowpackagemodal","fetchPaymentPackages","AdminAddClinic","subscriptionType","setsubscriptionType","subscriptionAmount","setsubscriptionAmount","subscriptionStartDate","setsubscriptionStartDate","subscriptionEndDate","setsubscriptionEndDate","subscriptionOtherFees","setsubscriptionOtherFees","subscriptionTotalAmount","setsubscriptionTotalAmount","subscriptionPaymentMode","setsubscriptionPaymentMode","AdminHome","argument","Root","restProps","Label","AdminDashboard","valueField","argumentField","rootComponent","labelComponent","AdminClinicDetails","handleChangedGender","AdminDoctorDetails","Clinic_Doctors","clinicdata","ClinicData","Admin_Doctor_Clinics","clinicData","setclinicData","doctordetails","setdoctordetails","fetchClinicData","clinicInfo","searchDoctor","DoctorInfo","handleLogin","StfEmail","StfGender","StfAddress","Staff_Home","Staff_Dashboard","Avatar","Staff_ClinicPatients","Staff_Book_Appointment","Staff_Todays_Appointment","callbackfunction","Staff_TV_TodaysAppointments","clear","Staff_Profile","Staff_EditProfile","Staff_Reports","Staff_Home_Visit_Request","textdata","settextdata","Staff_Home_Visitors","Staff_Patient_Details_SendIn","Staff_Assign_Home_Visitor","init","medicine","appReducer","combineReducers","action","filter","store","createStore","App","exact","path","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.0492dd58.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"\" color=\"textSecondary\" position='absolute' style={{ color: \"#2C7FB2\", fontSize: \"normal\", flex: 1, textAlign: 'center' }}>\r\n      {/* {'Copyright © '} */}\r\n      <Link color=\"inherit\" href=\"https://rajyugsolutions.com/\">\r\n        Powered By RajYug IT Solution Pvt Ltd @\r\n      </Link>\r\n      {new Date().getFullYear()}\r\n      {/* {'.'} */}\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n    backgroundColor: '#fff',\r\n    color: '#2C7FB2',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor:'white',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.appBar} variant=\"outlined\" fontSize=\"h6\" >\r\n\r\n        {/* <Toolbar variant=\"dense\"> */}\r\n        <Copyright />\r\n        {/* </Toolbar> */}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    AppBar,\r\n    Toolbar,\r\n    CssBaseline,\r\n    Typography,\r\n    Drawer,\r\n    Divider,\r\n    MenuItem,\r\n    Menu,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Button,\r\n    Avatar,\r\n    IconButton,\r\n    Grid,\r\n    Paper,\r\n    Link,\r\n    InputBase,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableHead,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TablePagination,\r\n    InputLabel,\r\n    Select,\r\n    FormControl\r\n\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Footer from './Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport './BookAppointment.css';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'NAME', minWidth: 100 },\r\n    {\r\n        id: 'mobile',\r\n        label: 'MOBILE NO',\r\n        minWidth: 50,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n\r\n\r\n\r\n];\r\n\r\nfunction createData(name, mobile,) {\r\n    return { name, mobile };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pallavi Kale', '8977889898', 'pallavi@gmail.com'),\r\n    createData('Rudrayani Tidake', '67848484848', 'rudra@gmail.com'),\r\n    createData('Kajal Bhagavat', '7833674758', 'kajal@gmail.com'),\r\n    createData('Shweta Wankhade', '7484949490', 'shweta@gmail.com'),\r\n    createData('Rutuja Pingle', '94848590332', 'rutuja@gmail.com'),\r\n    createData('Sharayu Shende', '8977889898', 'sharayu@gmail.com'),\r\n    createData('Gunjun Kale', '64748897867', 'gunjan@gmail.com'),\r\n    createData('Pallavi Kale', '8977889898', 'pallavi@gmail.com'),\r\n    createData('Rudrayani Tidake', '67848484848', 'rudra@gmail.com'),\r\n    createData('Kajal Bhagavat', '7833674758', 'kajal@gmail.com'),\r\n    createData('Shweta Wankhade', '7484949490', 'shweta@gmail.com'),\r\n    createData('Rutuja Pingle', '94848590332', 'rutuja@gmail.com'),\r\n    createData('Sharayu Shende', '8977889898', 'sharayu@gmail.com'),\r\n    createData('Gunjun Kale', '64748897867', 'gunjan@gmail.com'),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n\r\n    },\r\n    //   menuButton: {\r\n    //     marginRight: theme.spacing(2),\r\n    //   },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        color: '#2C7FB2'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    clinicname: {\r\n        // flexGrow: 1,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(0),\r\n        },\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    drname: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        padding: theme.spacing(1),\r\n        flex: 0.2,\r\n        alignSelf: 'right',\r\n        textAlign: 'right',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        // fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        borderRadius: 10\r\n    },\r\n\r\n    services: {\r\n        // paddingTop: 100,\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    },\r\n    report: {\r\n        // flex: 1,\r\n        // border:'1px solid red',\r\n        justifyContent: 'center',\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        textAlign: 'center',\r\n        color: '#2C7FB2'\r\n    },\r\n    headings: {\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        color: '#2C7FB2'\r\n    },\r\n    searchIcon: {\r\n        paddingTop: '10px',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n\r\n        // marginLeft: 70\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius:20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    btnviewprofile: {\r\n        marginLeft: 10,\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        aspectRatio: 5,\r\n\r\n    },\r\n    tbl: {\r\n        overflow: 'scroll',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnbookappointment: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n\r\n    },\r\n    btnreset: {\r\n        backgroundColor: '#78B088 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        width: 150\r\n\r\n    },\r\n    headingBookAppointment: {\r\n        paddingTop: 10,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    headingBookAppointmentShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    textField: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n    }\r\n\r\n}));\r\n\r\n\r\n  \r\nexport default function BookAppointment() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open1 = Boolean(anchorEl);\r\n\r\n    const [authProfile, setAuthProfile] = React.useState(true);\r\n    const [anchorElProfile, setAnchorElProfile] = React.useState(null);\r\n    const openprofile = Boolean(anchorElProfile);\r\n    const navigate = useNavigate();\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\r\n\r\n    const [values, setValues] = React.useState([\r\n        \"Dr. Pradeep Musale\",\r\n        \"Dr. Kirti Virnak\",\r\n\r\n    ]);\r\n\r\n    const [selected, setSelected] = React.useState(\"Dr. Pradeep Musale\");\r\n\r\n    function handleChangedDropDown(event) {\r\n        setSelected(event.target.value);\r\n    }\r\n\r\n\r\n    const [appselected, setAppSelected] = React.useState(\"\");\r\n\r\n    function handleChangedAppointmentChannel(event) {\r\n        setAppSelected(event.target.value);\r\n    }\r\n\r\n\r\n    const [appvalues, setAppValues] = React.useState([\r\n        \"Walk In\",\r\n        \"Online\",\r\n        \"By Web\"\r\n\r\n    ]);\r\n\r\n\r\n\r\n    const [timevalues, setTimeValues] = React.useState([\r\n        \"08:00\",\r\n        \"09:00\",\r\n\r\n    ]);\r\n    const [timeselected, setTimeSelected] = React.useState(\"\");\r\n\r\n    function handleChangedTime(event) {\r\n        setTimeSelected(event.target.value);\r\n    }\r\n\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAuthProfile(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElProfile(null);\r\n    };\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'Dashboard',\r\n            icon: DashboardIcon,\r\n            onClick: () => navigate(\"/dashboard\"),\r\n        },\r\n        {\r\n            text: 'Patient Registration',\r\n            icon: GroupAddIcon,\r\n            onClick: () => navigate('/patientregistration'),\r\n        },\r\n        {\r\n            text: 'Book Appointment',\r\n            icon: PermContactCalendarIcon,\r\n            onClick: () => navigate(\"/bookappointment\"),\r\n        },\r\n        {\r\n            text: \"Today's Appointments\",\r\n            icon: TodayIcon,\r\n            onClick: () => navigate(\"/todaysappointment\"),\r\n        },\r\n        {\r\n            text: 'Clinic Patients',\r\n            icon: PeopleIcon,\r\n            onClick: () => navigate(\"/clinicpatients\"),\r\n        },\r\n        {\r\n            text: \"Clinic Services\",\r\n            icon: ListIcon,\r\n            onClick: () => navigate(\"/clinicservices\"),\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: 'white' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open1}\r\n                        onClose={handleClose}\r\n                    >\r\n                        {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleClose}>My account</MenuItem> */}\r\n                    </Menu>\r\n                    <div>\r\n                        <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n                    </div>\r\n                    <div className={classes.clinicname}>\r\n                        <Typography variant=\"h5\" noWrap={true}>\r\n                            AKSHAY NURSING HOME\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.drname}>\r\n                        <Typography variant=\"h8\" noWrap={true}  >\r\n                            Dr. Pradeep Musale\r\n                        </Typography>\r\n                    </div>\r\n                    {auth && (\r\n                        <div className={classes.profile}>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"primary\"\r\n\r\n                            >\r\n                                <AccountCircle style={{ height: 35, width: 35 }} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElProfile}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={openprofile}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n                    <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            <ListItemIcon style={{ color: '#fff' }}>\r\n                                <Icon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n\r\n\r\n            <Typography className={clsx(classes.headingBookAppointment, {\r\n                [classes.headingBookAppointmentShift]: open,\r\n            })} variant=\"h5\" noWrap={true} style={{ paddingTop: 70, paddingLeft: '90px' }}>\r\n                Book Appointment\r\n            </Typography>\r\n            <Grid container className={clsx(classes.grid, {\r\n                [classes.gridShift]: open,\r\n            })} spacing={3} style={{ paddingLeft: '90px', paddingTop: 5, backgroundColor: '#fff' }}>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <SearchIcon className={classes.searchIcon} />\r\n                        <InputBase\r\n                            label=\"Search by Name/Email\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                                \r\n                            }}\r\n                            variant='outlined'\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            style={{ borderRadius: 15 }}\r\n                        > </InputBase>\r\n                        <Button className={classes.btnviewprofile} size=\"small\" style={{ fontSize: 11 }}>View Profile</Button>\r\n                        {/* <Grid item xs={12} sm={12}>\r\n                            <Paper className={classes.paper}> */}\r\n                        <TableContainer style={{ paddingTop: 20 }} >\r\n                            <Table className={classes.tbl} size=\"small\" stickyHeader aria-label=\"sticky table\" style={{ borderRadius: 5 }}>\r\n                                <TableHead style={{}}>\r\n                                    <TableRow style={{ borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\r\n                                        {columns.map((column) => (\r\n                                            <TableCell\r\n                                                key={column.id}\r\n                                                align={column.align}\r\n                                                style={{\r\n                                                    minWidth: column.minWidth,\r\n                                                    backgroundColor: '#78B088',\r\n                                                    color: '#fff',\r\n                                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                }}\r\n\r\n                                            >\r\n                                                {column.label}\r\n                                            </TableCell>\r\n                                        ))}\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody >\r\n                                    {rows\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row) => {\r\n                                            return (\r\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                    {columns.map((column) => {\r\n                                                        const value = row[column.id];\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align={column.align} style={{\r\n                                                                color: '#2C7FB2',\r\n                                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 200,\r\n                                                                overflow: 'hidden',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                justifyContent: 'center'\r\n                                                            }}>\r\n                                                                {column.format && typeof value === 'number'\r\n                                                                    ? column.format(value)\r\n                                                                    : value}\r\n\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 25]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                        {/* </Paper> */}\r\n                        <Divider style={{ padding: '5px', borderBlockEnd: '1px solid #F0F0F0', backgroundColor: '#fff', paddingBottom: 20 }} />\r\n\r\n                        <Typography variant=\"h7\" noWrap={true} style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 600,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#00318B'\r\n\r\n                        }} >\r\n                            Profile Details\r\n                        </Typography>\r\n\r\n                        {/* </Grid> */}\r\n                        <Grid container spacing={3} style={{ paddingTop: theme.spacing(3) }}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Paper elevation={0} style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <center> <Avatar style={{ align: 'center', height: '50px', width: '50px' }}><AccountCircle /></Avatar> </center>\r\n                                    <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                    <Typography variant=\"h7\" noWrap={true} style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 400,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        padding: theme.spacing(2),\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    >\r\n                                        Pallavi Kale\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <Paper elevation={0} style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 400,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: 'gray'\r\n                                }}>\r\n                                    Location: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 300,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        padding: theme.spacing(2),\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    >\r\n                                        Wakad, Pune\r\n                                    </Typography>\r\n                                    <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                    Contact: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 300,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        padding: theme.spacing(2),\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    >\r\n                                        8790332435\r\n                                    </Typography>\r\n                                    <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                    Email Id: <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 300,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        padding: theme.spacing(2),\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    >\r\n                                        pallavikale@gmail.com\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={8} >\r\n                    <Paper className={classes.paper} elevation={6}>\r\n                        <Grid container spacing={3} style={{ backgroundColor: '#fff', borderBlockEnd: '1px solid #F0F0F0' }}>\r\n                            <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0', }}>\r\n                                <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    padding: theme.spacing(2),\r\n                                    color: '#00318B'\r\n                                }}\r\n                                >\r\n                                    Details\r\n                                </Typography>\r\n                                <Divider />\r\n\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '50vh', justifyContent: 'center', }}>\r\n                                        <InputLabel htmlFor=\"outlined-age-native-simple\">Doctor</InputLabel>\r\n                                        <Select\r\n                                            className={classes.textField}\r\n                                            native\r\n                                            value={selected}\r\n                                            onChange={handleChangedDropDown}\r\n                                            label=\"doctor\"\r\n                                            inputProps={{\r\n                                                name: 'doctor',\r\n                                                id: 'outlined-doctor-native-simple',\r\n                                            }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" />\r\n                                            <option value={1}>Dr. Pradeep Musale</option>\r\n                                            <option value={2}>Dr. Kirti Virnak</option>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </center>\r\n\r\n\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '50vh', justifyContent: 'center', }}>\r\n                                        <InputLabel htmlFor=\"outlined-age-native-simple\">Appointment Channel</InputLabel>\r\n                                        <Select\r\n                                            className={classes.textField}\r\n                                            native\r\n                                            value={appselected}\r\n                                            onChange={handleChangedAppointmentChannel}\r\n                                            label=\"Age\"\r\n                                            inputProps={{\r\n                                                name: 'appointmentchannel',\r\n                                                id: 'outlined-appointment-native-simple',\r\n                                            }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" />\r\n                                            <option value={1}>Walk In</option>\r\n                                            <option value={2}>Online</option>\r\n                                            <option value={2}>By Web</option>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </center>\r\n\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl} style={{ width: '50vh', justifyContent: 'center', }}>\r\n                                        <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"Appointment Title\" variant=\"outlined\" />\r\n                                    </FormControl>\r\n                                </center>\r\n                                {/* <InputLabel htmlFor=\"agent-simple\" style={{ paddingTop: 20 }}>Doctor</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={selected}\r\n                                    onChange={handleChangedDropDown}\r\n                                    inputProps={{\r\n                                        name: \"doctor\",\r\n                                        id: \"age-simple\"\r\n                                    }}\r\n                                >\r\n                                    {values.map((value, index) => {\r\n                                        return <MenuItem value={value}>{value}</MenuItem>;\r\n                                    })}\r\n                                </Select> */}\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    padding: theme.spacing(2),\r\n                                    color: '#00318B'\r\n\r\n                                }}\r\n                                >\r\n                                    Appointment Details\r\n                                </Typography>\r\n                                <Divider />\r\n                                <center>\r\n\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n                                        <InputLabel htmlFor=\"outlined-age-native-simple\">Time</InputLabel>\r\n                                        <Select\r\n                                            className={classes.textField}\r\n                                            native\r\n                                            value={timeselected}\r\n                                            onChange={handleChangedTime}\r\n                                            label=\"Age\"\r\n                                            inputProps={{\r\n                                                name: 'time',\r\n                                                id: 'outlined-appointment-native-simple',\r\n                                            }}\r\n\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" />\r\n                                            <option value={1}>08:00</option>\r\n                                            <option value={2}>09:00</option>\r\n                                            <option value={2}>10:00</option>\r\n                                            <option value={2}>11:00</option>\r\n                                            <option value={2}>12:00</option>\r\n                                        </Select>\r\n\r\n\r\n                                    </FormControl>\r\n\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl} >\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            id=\"date\"\r\n                                            label=\"\"\r\n                                            type=\"date\"\r\n                                            className={classes.textField}\r\n                                            size=\"small\"\r\n\r\n                                        />\r\n                                    </FormControl>\r\n                                </center>\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl} style={{ width: '62vh', justifyContent: 'center', }}>\r\n                                        <TextField className={classes.textField} id=\"outlined-basic\" label=\"Previous Appointments (if any)\" variant=\"outlined\" size=\"small\" />\r\n                                    </FormControl>\r\n                                </center>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6} style={{ paddingTop: 20 }}>\r\n\r\n                            <center>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl} style={{ width: '50vh', marginLeft: '-10px' }}>\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"Reason\" variant=\"outlined\" />\r\n                                </FormControl>\r\n                            </center>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={8} style={{ paddingTop: 20 }}>\r\n                            <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                fontFamily: '\"Poppins\", san-serif;',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 600,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                padding: theme.spacing(2),\r\n                                color: '#00318B'\r\n                            }}\r\n                            >\r\n                                Vitals\r\n                            </Typography>\r\n\r\n\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2} style={{ padding: 10 }}>\r\n                            <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0', justifyContent: 'center' }}>\r\n                                <Grid container spacing={2} style={{ padding: 10 }}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            label=\"BP\"\r\n                                            id=\"outlined-size-small\"\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6} >\r\n\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            label=\"Temp\"\r\n                                            id=\"outlined-size-small\"\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            label=\"Height\"\r\n                                            id=\"outlined-size-small\"\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6} >\r\n\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            label=\"Weight\"\r\n                                            id=\"outlined-size-small\"\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Grid container spacing={2} style={{ padding: 10 }}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            label=\"SPO2\"\r\n                                            id=\"outlined-size-small\"\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6} >\r\n\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            label=\"Pulse Rate\"\r\n                                            id=\"outlined-size-small\"\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <center> <Button className={classes.btnbookappointment} style={{ width: 170 }}>Reset</Button> </center>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n\r\n                                        <center> <Button className={classes.btnbookappointment}>Book Appointment</Button> </center>\r\n\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    );\r\n}\r\n","const ip = 'http://13.233.217.107:8080/api/';\r\n\r\nexport default ip;  ","import React, {useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    AppBar,\r\n    Toolbar,\r\n    CssBaseline,\r\n    Typography,\r\n    Drawer,\r\n    Divider,\r\n    MenuItem,\r\n    Menu,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Button,\r\n    Avatar,\r\n    IconButton,\r\n    Grid,\r\n    Paper,\r\n    Link\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Footer from './Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ip from '../ipaddress/ip';\r\nimport axios from 'axios';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    //   menuButton: {\r\n    //     marginRight: theme.spacing(2),\r\n    //   },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        color: '#2C7FB2'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#2C7FB2',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        color: '#fff'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    clinicname: {\r\n        // flexGrow: 1,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(0),\r\n        },\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    drname: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        padding: theme.spacing(1),\r\n        flex: 0.2,\r\n        alignSelf: 'right',\r\n        textAlign: 'right',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    services: {\r\n        // paddingTop: 100,\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    },\r\n    report: {\r\n        // flex: 1,\r\n        // border:'1px solid red',\r\n        justifyContent: 'center',\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    }\r\n}));\r\n\r\nexport default function Navbar() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open1 = Boolean(anchorEl);\r\n    const [authProfile, setAuthProfile] = React.useState(true);\r\n    const [anchorElProfile, setAnchorElProfile] = React.useState(null);\r\n    const [doctordata, setdoctordata] = useState({});\r\n    const openprofile = Boolean(anchorElProfile);\r\n    const navigate = useNavigate();\r\n\r\n    const fetchDoctorProfile = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let userid = parsed.userid;\r\n        const doctorInfo = await axios.post(ip + 'ShowDoctorDetailUsingId', { DoctorId: userid });\r\n        setdoctordata(doctorInfo?.data?.Doctor);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDoctorProfile();\r\n    }, [])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAuthProfile(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElProfile(null);\r\n    };\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleProfile = () => {\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'Dashboard',\r\n            icon: DashboardIcon,\r\n            onClick: () => navigate(\"/dashboard\"),\r\n        },\r\n        {\r\n            text: 'Patient Registration',\r\n            icon: GroupAddIcon,\r\n            onClick: () => navigate('/patientregistration'),\r\n        },\r\n        {\r\n            text: 'Book Appointment',\r\n            icon: PermContactCalendarIcon,\r\n            onClick: () => navigate(\"/bookappointment\"),\r\n        },\r\n        {\r\n            text: \"Today's Appointments\",\r\n            icon: TodayIcon,\r\n            onClick: () => navigate(\"/todaysappointment\"),\r\n        },\r\n        {\r\n            text: 'Clinic Patients',\r\n            icon: PeopleIcon,\r\n            onClick: () => navigate(\"/clinicpatients\"),\r\n        },\r\n        {\r\n            text: \"Clinic Services\",\r\n            icon: ListIcon,\r\n            onClick: () => navigate(\"/clinicservices\"),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: 'white' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open1}\r\n                        onClose={handleClose}\r\n                    >\r\n                        {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleClose}>My account</MenuItem> */}\r\n                    </Menu>\r\n                    <div>\r\n                        <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n                    </div>\r\n                    <div className={classes.clinicname}>\r\n                        <Typography variant=\"h5\" noWrap={true}>\r\n                            {doctordata.ClinicName}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.drname}>\r\n                        <Typography variant=\"h8\" noWrap={true}  >\r\n                            Dr. {doctordata.FirstName} {doctordata.LastName}\r\n                        </Typography>\r\n                    </div>\r\n                    {auth && (\r\n                        <div className={classes.profile}>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"primary\"\r\n\r\n                            >\r\n                                <AccountCircle style={{ height: 35, width: 35 }} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElProfile}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={openprofile}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n                    <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            <ListItemIcon style={{ color: '#fff' }}>\r\n                                <Icon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                {/* <List>\r\n                    {['Dashboard', 'Profile'].map((text, index) => (\r\n                        <ListItem button key={text} style={{ fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>\r\n                            <ListItemIcon style={{ color: '#fff', fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>{index % 2 === 0 ? (<><Link href='Footer' color=\"inherit\"><DashboardIcon /></Link></>) : <AccountBoxIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {['Patient Registration', 'Appointments'].map((text, index) => (\r\n                        <ListItem button key={text} >\r\n                            <ListItemIcon onClick={onClick} style={{ color: '#fff', fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>{index % 2 === 0 ? <GroupAddIcon /> : <PermContactCalendarIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                    {['Todays Appointment', 'Services'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon style={{ color: '#fff', fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>{index % 2 === 0 ? <TodayIcon /> : <ListIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List> */}\r\n\r\n            </Drawer>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Navbar from './Navbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 2,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function HomeScreen() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Navbar />\r\n            <Grid container spacing={2}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{ minHeight: '50vh', border:'1px solid red' }}>\r\n                <Grid item xs={6} sm={3}>\r\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { green } from '@material-ui/core/colors';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport FormGroup from '@material-ui/core/FormGroup';;\r\n\r\n\r\nconst loginapi = 'http://13.233.217.107:8080/api/Login';\r\nconst adminlogin = 'http://13.233.217.107:8080/api/AdminLogin';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: \"url('Login2.png')\",\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(0, 10, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nfunction Login(props) {\r\n\r\n  const classes = useStyles();\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n  const [state, setState] = useState(false);\r\n\r\n  const [mobile, setmobile] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [showPassword, setshowPassword] = useState(false);\r\n\r\n  const handleChangeCheckBox = (event) => {\r\n    setState(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  const setMobileNo = (e) => {\r\n    setmobile(e.target.value);\r\n  }\r\n  const setPassword = (e) => {\r\n    setpassword(e.target.value);\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n  function setWithExpiry(key, value, ttl, mobile, password, state, role) {\r\n\r\n    const now = new Date()\r\n    // `item` is an object which contains the original value\r\n    // as well as the time when it's supposed to expire\r\n    const item = {\r\n      value: value,\r\n      expiry: now.getTime() + ttl,\r\n      mobile: mobile,\r\n      password: password,\r\n      checkbox: state,\r\n      Role: role\r\n    }\r\n    localStorage.setItem(key, JSON.stringify(item))\r\n\r\n  }\r\n\r\n  const RememberUser = async () => {\r\n\r\n    const itemStr = await localStorage.getItem('rememberme');\r\n    const item = [JSON.parse(itemStr)]\r\n    if(itemStr){\r\n    console.log(item)\r\n    setmobile(item[0].mobile)\r\n    setSelectedValue(item[0].role)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    RememberUser();\r\n  }, [])\r\n\r\n  const handleSubmit = async () => {\r\n    var date = new Date();\r\n    date.setDate(date.getDate() + 30);\r\n    var dateString = date.toISOString().split('T')[0];\r\n    if (selectedValue == 'Admin') {\r\n      try {\r\n        var login = await axios.post(adminlogin, { MobileNo: mobile, Password: password }).then(Json => {\r\n          window.localStorage.setItem(\"userdata\", JSON.stringify(Json?.data));\r\n          let responseData = Json.data;\r\n          if (responseData.success == '200') {\r\n            navigate('/AdminAddClinic');\r\n          }\r\n          if (state) {\r\n            setWithExpiry(\"rememberme\", Json?.data?.token, dateString, mobile, password, state, selectedValue)\r\n          }\r\n\r\n        }).catch(function (error) {\r\n          //handle error\r\n          console.log(error.response.data.message);\r\n          alert(error.response.data.message);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    else {\r\n      try {\r\n        await axios.post(loginapi, { MobileNo: mobile, Password: password, Role: selectedValue })\r\n          .then(Json => {\r\n            window.localStorage.setItem(\"userdata\", JSON.stringify(Json?.data));\r\n            let responseData = Json.data\r\n            if (responseData.success == '200') {\r\n              if (responseData.Role === \"Doctor\") {\r\n                navigate('/DoctorHome')\r\n              }\r\n              else {\r\n                navigate('/Staff_Home')\r\n              }\r\n            }\r\n            if (state) {\r\n              setWithExpiry(\"rememberme\", Json?.data?.token, dateString, mobile, password, state, selectedValue)\r\n            }\r\n\r\n          }).catch(function (error) {\r\n            //handle error\r\n            console.log(error.response.data.message);\r\n            alert(error.response.data.message);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setshowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <Grid container component=\"main\" className={classes.root} style={{ backgroundColor: '#fff' }}>\r\n      <CssBaseline />\r\n      <Grid item xs={12} sm={6} className={classes.image} />\r\n\r\n      <Grid item xs={12} md={1} style={{ alignSelf: 'center', flex: 1, backgroundColor: '#fff', borderRight: '1px solid white', padding: 10 }}>\r\n        <Grid item xs={12} style={{ paddingBottom: 10 }}>\r\n          <center><a href=\"https://www.facebook.com/health97\"> <FacebookIcon style={{ color: 'gray', fontSize: '30px' }} /> </a> </center>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ paddingBottom: 10 }}>\r\n          <center><a href=\"https://www.instagram.com/health_97_/?utm_medium=copy_link\"> <InstagramIcon style={{ color: 'gray', fontSize: '30px' }} /> </a></center>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ paddingBottom: 10 }} >\r\n          <center><a href=\"https://twitter.com/97Health\"> <TwitterIcon style={{ color: 'gray', fontSize: '30px' }} /> </a></center>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ paddingBottom: 10 }}>\r\n          <center><a href=\"https://www.linkedin.com/company/health97/\"> <LinkedInIcon style={{ color: 'gray', fontSize: '30px' }} /> </a> </center>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={5} component={Paper} elevation={0} square style={{ backgroundColor: '#fff' }}>\r\n        <div className={classes.paper}>\r\n          <div>\r\n            <img src=\"h97 logo potrait-01.png\" height='150'></img>\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{ fontFamily: 'Poppins', fontWeight: 400, fontSize: 18, marginTop: '-10px' }}>\r\n            Login Account\r\n          </Typography>\r\n          <Typography align=\"center\">\r\n            <p style={{ fontFamily: 'Poppins', fontSize: 12 }}> This is a secure system and you will need to provide your login details to access this site.</p>\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"mobile\"\r\n              required\r\n              label=\"Phone Number\"\r\n              type='number'\r\n              size='small'\r\n              value={mobile}\r\n              onInput={(e) => {\r\n                e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n              }}\r\n              onChange={(e) => setMobileNo(e)}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"password\"\r\n              required\r\n              label=\"Password\"\r\n              value={password}\r\n              type={showPassword ? 'text' : 'password'}\r\n              size='small'\r\n              onChange={(e) => setPassword(e)}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n\r\n\r\n            <div>\r\n              <Radio\r\n                checked={selectedValue === 'Doctor'}\r\n                color='primary'\r\n                onChange={handleChange}\r\n                value=\"Doctor\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Doctor' }}\r\n              />Doctor\r\n              <Radio\r\n                checked={selectedValue === 'Receptionist'}\r\n                onChange={handleChange}\r\n                value=\"Receptionist\"\r\n                color='primary'\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Receptionist' }}\r\n              />Receptionist\r\n              <Radio\r\n                checked={selectedValue === 'Admin'}\r\n                color='primary'\r\n                onChange={handleChange}\r\n                value=\"Admin\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Admin' }}\r\n              />Admin\r\n            </div>\r\n\r\n            <Grid container style={{ paddingTop: '15px' }}>\r\n              <Grid item sm={6} align=\"left\" style={{ marginTop: '-10px', fontSize: '80px' }}>\r\n                <FormGroup  >\r\n                  <FormControlLabel\r\n                    control={<GreenCheckbox checked={state.checked} onChange={handleChangeCheckBox} />}\r\n                    label=\"Remember Me\"\r\n                  />\r\n                </FormGroup>\r\n\r\n\r\n                {/* <Checkbox\r\n                  checked={checked}\r\n                  onChange={handleChange}\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> */}\r\n              </Grid>\r\n              <Grid item sm={6} align=\"right\" >\r\n                <Link href=\"/ForgotPassword\" variant=\"body2\" style={{ color: '#78B088' }}>\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Button\r\n                fullWidth\r\n                className={classes.submit}\r\n                style={{ color: '#fff', backgroundColor: '#78B088', borderRadius: 20 }}\r\n                onClick={handleSubmit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n\r\n            </Grid>\r\n            <Typography component=\"h1\">\r\n              <Box mt={2}>\r\n                {/* <Copyright /> */}\r\n                To request an account just <a href=\"https://rajyugsolutions.com/contact\" style={{ color: '#78B088' }}> email us </a> \r\n                <a href=\"/SignUp\"  style={{ color: '#78B088', float: 'right', fontFamily: 'Poppins', fontSize: 14 }}> Sign Up</a> \r\n                {/* <Button\r\n                style={{ color: '#fff', fontSize: 12, fontFamily: 'Poppins', backgroundColor: '#78B088', float: 'right' }}   \r\n              >\r\n                Sign Up\r\n              </Button> */}\r\n              </Box>\r\n              <Box mt={2}>\r\n              \r\n              </Box>\r\n            </Typography>\r\n\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid >\r\n  );\r\n}\r\n\r\nconst useFormInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  }\r\n  return {\r\n    value,\r\n    onChange: handleChange\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    AppBar,\r\n    Toolbar,\r\n    CssBaseline,\r\n    Typography,\r\n    Drawer,\r\n    Divider,\r\n    MenuItem,\r\n    Menu,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Button,\r\n    IconButton,\r\n    Grid,\r\n    Paper,\r\n    Link,\r\n    TextField,\r\n    FormControl\r\n\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Footer from './Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'NAME', minWidth: 100 },\r\n\r\n];\r\n\r\nfunction createData(name) {\r\n    return { name };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pallavi Kale'),\r\n    createData('Rudrayani Tidake'),\r\n    createData('Kajal Bhagavat'),\r\n    createData('Shweta Wankhade'),\r\n    createData('Rutuja Pingle'),\r\n    createData('Sharayu Shende'),\r\n    createData('Gunjun Kale'),\r\n    createData('Pallavi Kale'),\r\n    createData('Rudrayani Tidake'),\r\n    createData('Kajal Bhagavat'),\r\n    createData('Shweta Wankhade'),\r\n    createData('Rutuja Pingle'),\r\n    createData('Sharayu Shende'),\r\n    createData('Gunjun Kale'),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n\r\n    },\r\n    //   menuButton: {\r\n    //     marginRight: theme.spacing(2),\r\n    //   },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        color: '#2C7FB2'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    clinicname: {\r\n        // flexGrow: 1,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(0),\r\n        },\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    drname: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        padding: theme.spacing(1),\r\n        flex: 0.2,\r\n        alignSelf: 'right',\r\n        textAlign: 'right',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        // fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        borderRadius: 10\r\n    },\r\n\r\n    services: {\r\n        // paddingTop: 100,\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    },\r\n    report: {\r\n        // flex: 1,\r\n        // border:'1px solid red',\r\n        justifyContent: 'center',\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        paddingLeft: 100,\r\n        paddingTop:15,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        textAlign: 'center',\r\n        color: '#2C7FB2'\r\n    },\r\n    headings: {\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        color: '#2C7FB2'\r\n    },\r\n    searchIcon: {\r\n        // paddingTop: '10px',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n\r\n        // marginLeft: 70\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '24ch',\r\n            height: '30px'\r\n        },\r\n\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        color: '#00318B'\r\n    },\r\n    btnsearch: {\r\n        // padding: theme.spacing(2),\r\n        // alignItems:'right'\r\n\r\n    },\r\n    tbl: {\r\n        overflow: 'scroll',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnviewprofile: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 150,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 150,\r\n    },\r\n    headingPatientRegistration: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n\r\n    headingPatientRegistrationShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    headingNewRegistration: {\r\n        paddingTop: 10,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n   \r\n}));\r\n\r\nexport default function BookAppointment() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open1 = Boolean(anchorEl);\r\n\r\n    const [authProfile, setAuthProfile] = React.useState(true);\r\n    const [anchorElProfile, setAnchorElProfile] = React.useState(null);\r\n    const openprofile = Boolean(anchorElProfile);\r\n    const navigate = useNavigate();\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(6);\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAuthProfile(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElProfile(null);\r\n    };\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'Dashboard',\r\n            icon: DashboardIcon,\r\n            onClick: () => navigate(\"/dashboard\"),\r\n        },\r\n        {\r\n            text: 'Patient Registration',\r\n            icon: GroupAddIcon,\r\n            onClick: () => navigate('/patientregistration'),\r\n        },\r\n        {\r\n            text: 'Book Appointment',\r\n            icon: PermContactCalendarIcon,\r\n            onClick: () => navigate(\"/bookappointment\"),\r\n        },\r\n        {\r\n            text: \"Today's Appointments\",\r\n            icon: TodayIcon,\r\n            onClick: () => navigate(\"/todaysappointment\"),\r\n        },\r\n        {\r\n            text: 'Clinic Patients',\r\n            icon: PeopleIcon,\r\n            onClick: () => navigate(\"/clinicpatients\"),\r\n        },\r\n        {\r\n            text: \"Clinic Services\",\r\n            icon: ListIcon,\r\n            onClick: () => navigate(\"/clinicservices\"),\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: 'white' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open1}\r\n                        onClose={handleClose}\r\n                    >\r\n                        {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleClose}>My account</MenuItem> */}\r\n                    </Menu>\r\n                    <div>\r\n                        <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n                    </div>\r\n                    <div className={classes.clinicname}>\r\n                        <Typography variant=\"h5\" noWrap={true}>\r\n                            AKSHAY NURSING HOME\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.drname}>\r\n                        <Typography variant=\"h8\" noWrap={true}  >\r\n                            Dr. Pradeep Musale\r\n                        </Typography>\r\n                    </div>\r\n                    {auth && (\r\n                        <div className={classes.profile}>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"primary\"\r\n\r\n                            >\r\n                                <AccountCircle style={{ height: 35, width: 35 }} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElProfile}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={openprofile}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n                    <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            <ListItemIcon style={{ color: '#fff' }}>\r\n                                <Icon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n\r\n\r\n            <Typography className={clsx(classes.headingPatientRegistration, {\r\n                [classes.headingPatientRegistrationShift]: open,\r\n            })} variant=\"h5\" noWrap={true} style={{ paddingTop: 80, paddingLeft: '100px' }}>\r\n                Patient Registration\r\n            </Typography>\r\n\r\n            <Grid className={clsx(classes.grid, {\r\n                [classes.gridShift]: open,\r\n            })} container spacing={2} style={{ backgroundColor: '#fff' }}>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <Typography className={classes.headingNewRegistration} variant=\"h6\" noWrap={true} style={{ paddingTop: 0 }}>\r\n                            New Registration\r\n                        </Typography>\r\n\r\n                        <center>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" size=\"small\" />\r\n                            </FormControl>\r\n                        </center>\r\n                        <center>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" size=\"small\" />\r\n                            </FormControl>\r\n                        </center>\r\n                        <center>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                <TextField className={classes.inputFields} id=\"outlined-basic\" type='number' label=\"Mobile Number\" variant=\"outlined\" size=\"small\" />\r\n                            </FormControl>\r\n                        </center>\r\n                        <center>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                <TextField className={classes.inputFields} id=\"outlined-basic\" type='email' label=\"Email ID\" variant=\"outlined\" size=\"small\" />\r\n                            </FormControl>\r\n                        </center>\r\n                        <center>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"date\" label=\"DOB\" variant=\"outlined\" size=\"small\" />\r\n                            </FormControl>\r\n                        </center>\r\n                        <center>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                <TextField className={classes.inputFields} id=\"outlined-basic\" type='password' label=\"Password\" variant=\"outlined\" size=\"small\" />\r\n                            </FormControl>\r\n                        </center>\r\n                        <Divider />\r\n                        <center><Button className={classes.btnregister}>Register</Button></center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={2} >\r\n                    <Paper elevation={0} className={classes.paper} >\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper className={classes.paper} elevation={6} >\r\n                        <center>\r\n                            <div style={{ paddingBottom: 20 }}>\r\n                                <img src=\"Pallavi Kale.jpg\" style={{ borderRadius: 50, height: 100 }}></img>\r\n                            </div>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 18, color: '#00318B' }}>\r\n                                Details:\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 14,\r\n                                fontFamily: '\"Poppins\", san-serif;',\r\n                                fontStyle: 'normal',\r\n                                color: 'gray'\r\n\r\n                            }}>\r\n                                Pallavi Kale\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 18, color: '#00318B' }}>\r\n                                Address\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray' }}>\r\n                                Pimple Saudagar, Pune\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 18, color: '#00318B' }}>\r\n                                Email ID:\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray' }}>\r\n                                pallavi.kale@rajyugsolution.com\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 18, color: '#00318B' }}>\r\n                                Mobile No:\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray' }}>\r\n                                9095009797\r\n                            </Typography>\r\n                            <Divider />\r\n                            <Grid container xs={12} style={{paddingTop:10}}>\r\n                                <Grid item sm={6} >\r\n                                    <center><Button className={classes.btnregister}>Cancle</Button></center>\r\n\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <center><Button className={classes.btnregister}>Edit</Button></center>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </center>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    AppBar,\r\n    Toolbar,\r\n    CssBaseline,\r\n    Typography,\r\n    Drawer,\r\n    Divider,\r\n    MenuItem,\r\n    Menu,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Button,\r\n    Avatar,\r\n    IconButton,\r\n    Grid,\r\n    Paper,\r\n    Link,\r\n    InputBase,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableHead,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TablePagination\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Footer from './Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { ReportGmailerrorred } from '@mui/icons-material';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'NAME', minWidth: 100 },\r\n    { id: 'uid', label: 'UID', minWidth: 60 },\r\n    {\r\n        id: 'mobile',\r\n        label: 'MOBILE NO',\r\n        minWidth: 50,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'email',\r\n        label: 'EMAIL ID',\r\n        minWidth: 100,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'appchannel',\r\n        label: 'APPOINTMENT CHANNEL',\r\n        minWidth: 50,\r\n        align: 'center',\r\n        format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n        id: 'date',\r\n        label: 'DATE & TIME',\r\n        minWidth: 50,\r\n        align: 'left',\r\n        format: (value) => value.toFixed(2),\r\n    },\r\n\r\n];\r\n\r\nfunction createData(name, uid, mobile, email, appchannel, date) {\r\n    return { name, uid, mobile, email, appchannel, date };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pallavi Kale', 'Pallavi123', '8977889898', 'pallavi@gmail.com', 'Walk In', '2021-09-23 00:19:21'),\r\n    createData('Rudrayani Tidake', 'Rudrayani123', '67848484848', 'rudra@gmail.com', 'By App', '2021-09-23 00:19:21'),\r\n    createData('Kajal Bhagavat', 'kajal123', '7833674758', 'kajal@gmail.com', 'Walk In', '2021-09-23 00:19:21'),\r\n    createData('Shweta Wankhade', 'shweta908', '7484949490', 'shweta@gmail.com', 'Walk In', '2021-09-23 00:19:21'),\r\n    createData('Rutuja Pingle', 'rutuja892', '94848590332', 'rutuja@gmail.com', 'By App', '2021-09-23 00:19:21'),\r\n    createData('Sharayu Shende', 'sharayu90', '8977889898', 'sharayu@gmail.com', 'Walk In', '2021-09-23 00:19:21'),\r\n    createData('Gunjun Kale', 'Gunjan356', '64748897867', 'gunjan@gmail.com', 'By App', '2021-09-23 00:19:21'),\r\n    createData('Pallavi Kale', 'Pallavi123', '8977889898', 'pallavi@gmail.com', 'Walk In', '2021-09-23 00:19:21'),\r\n    createData('Rudrayani Tidake', 'Rudrayani123', '67848484848', 'rudra@gmail.com', 'By App', '2021-09-23 00:19:21'),\r\n    createData('Kajal Bhagavat', 'kajal123', '7833674758', 'kajal@gmail.com', 'Walk In', '2021-09-23 00:19:21'),\r\n    createData('Shweta Wankhade', 'shweta908', '7484949490', 'shweta@gmail.com', 'Walk In', '2021-09-23 00:19:21'),\r\n    createData('Rutuja Pingle', 'rutuja892', '94848590332', 'rutuja@gmail.com', 'By App', '2021-09-23 00:19:21'),\r\n    createData('Sharayu Shende', 'sharayu90', '8977889898', 'sharayu@gmail.com', 'Walk In', '2021-09-23 00:19:21'),\r\n    createData('Gunjun Kale', 'Gunjan356', '64748897867', 'gunjan@gmail.com', 'By App', '2021-09-23 00:19:21'),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        backgroundColor:'white',\r\n        flexGrow: 1,\r\n    },\r\n    //   menuButton: {\r\n    //     marginRight: theme.spacing(2),\r\n    //   },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        color: '#2C7FB2'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    clinicname: {\r\n        // flexGrow: 1,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(0),\r\n        },\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    drname: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        padding: theme.spacing(1),\r\n        flex: 0.2,\r\n        alignSelf: 'right',\r\n        textAlign: 'right',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        // fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        borderRadius: 10\r\n    },\r\n\r\n    services: {\r\n        // paddingTop: 100,\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    },\r\n    report: {\r\n        // flex: 1,\r\n        // border:'1px solid red',\r\n        justifyContent: 'center',\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    griditem: {\r\n        textAlign: 'center',\r\n        color: '#2C7FB2'\r\n    },\r\n    headings: {\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        color: '#2C7FB2'\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n        marginTop: '-35px',\r\n        marginLeft: 75\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius:20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    textField: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n    }\r\n}));\r\n\r\nexport default function TodaysAppointment() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open1 = Boolean(anchorEl);\r\n\r\n    const [authProfile, setAuthProfile] = React.useState(true);\r\n    const [anchorElProfile, setAnchorElProfile] = React.useState(null);\r\n    const openprofile = Boolean(anchorElProfile);\r\n    const navigate = useNavigate();\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAuthProfile(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElProfile(null);\r\n    };\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'Dashboard',\r\n            icon: DashboardIcon,\r\n            onClick: () => navigate(\"/dashboard\"),\r\n        },\r\n        {\r\n            text: 'Patient Registration',\r\n            icon: GroupAddIcon,\r\n            onClick: () => navigate('/patientregistration'),\r\n        },\r\n        {\r\n            text: 'Book Appointment',\r\n            icon: PermContactCalendarIcon,\r\n            onClick: () => navigate(\"/bookappointment\"),\r\n        },\r\n        {\r\n            text: \"Today's Appointments\",\r\n            icon: TodayIcon,\r\n            onClick: () => navigate(\"/todaysappointment\"),\r\n        },\r\n        {\r\n            text: 'Clinic Patients',\r\n            icon: PeopleIcon,\r\n            onClick: () => navigate(\"/clinicpatients\"),\r\n        },\r\n        {\r\n            text: \"Clinic Services\",\r\n            icon: ListIcon,\r\n            onClick: () => navigate(\"/clinicservices\"),\r\n        },\r\n    ];\r\n\r\n    // function EnhancedTableHead(props) {\r\n    //     const { classes, onSelectAllClick} = props;\r\n    //     const createSortHandler = (property) => (event) => {\r\n    //       onRequestSort(event, property);\r\n    //     };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: 'white' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open1}\r\n                        onClose={handleClose}\r\n                    >\r\n                        {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleClose}>My account</MenuItem> */}\r\n                    </Menu>\r\n                    <div>\r\n                        <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n                    </div>\r\n                    <div className={classes.clinicname}>\r\n                        <Typography variant=\"h5\" noWrap={true}>\r\n                            AKSHAY NURSING HOME\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.drname}>\r\n                        <Typography variant=\"h8\" noWrap={true}  >\r\n                            Dr. Pradeep Musale\r\n                        </Typography>\r\n                    </div>\r\n                    {auth && (\r\n                        <div className={classes.profile}>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"primary\"\r\n\r\n                            >\r\n                                <AccountCircle style={{ height: 35, width: 35 }} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElProfile}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={openprofile}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n                    <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            <ListItemIcon style={{ color: '#fff' }}>\r\n                                <Icon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className={classes.morningslot} style={{ paddingTop: 100 }}>\r\n                    <Container display='flex' flexGrow={1} flexDirection=\"column\" justify='center' style={{}}>\r\n                        <Grid container spacing={2} display='flex' direction=\"row\" wrap=\"nowrap\" flexGrow={1} style={{}}>\r\n                            <Typography className={classes.headings} variant=\"h6\" noWrap={true} >\r\n                                Morning Slots\r\n                            </Typography>\r\n                            <Grid className={classes.grid} item sm style={{ paddingTop: 50, marginLeft: '-150px' }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        08:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs>\r\n                                        08:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        09:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        09:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4}>\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        10:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} s>\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        10:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        11:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        11:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        12:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        12:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        01:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs>\r\n                                        01:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </div>\r\n\r\n                <div className={classes.morningslot} style={{ paddingTop: 30 }}>\r\n                    <Container display='flex' flexGrow={1} flexDirection=\"column\" justify='center' style={{}}>\r\n                        <Grid container spacing={2} display='flex' direction=\"row\" wrap=\"nowrap\" flexGrow={1} style={{}}>\r\n                            <Typography className={classes.headings} variant=\"h6\" noWrap={true} >\r\n                                Evening Slots\r\n                            </Typography>\r\n                            <Grid item sm style={{ paddingTop: 50, marginLeft: '-150px' }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs>\r\n                                        04:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs>\r\n                                        05:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        05:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        06:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4}>\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        06:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs>\r\n                                        07:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        07:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        08:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        08:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        09:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4}>\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        09:30\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item sm style={{ paddingTop: 50 }}>\r\n                                <Paper className={classes.paper} elevation={4} >\r\n                                    <Grid className={classes.griditem} item xs >\r\n                                        10:00\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </div>\r\n\r\n\r\n                <div className={classes.morningslot} style={{ paddingTop: 40 }}>\r\n                    <Container display='flex' flexGrow={1} flexDirection=\"column\" justify='center' style={{}}>\r\n\r\n                        <div className={classes.search} style={{ flex: 1, justifyContent: 'center', alignItems: 'center', marginLeft: '-10px' }}>\r\n                            <div className='column' style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Typography variant=\"h8\" noWrap={true} style={{ paddingRight: 20 }}>\r\n                                    Search\r\n                                </Typography>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    label=\"Search by Name/Email\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                > </InputBase>\r\n\r\n                                <Typography variant=\"h8\"  noWrap={true} style={{ paddingLeft: 40, paddingRight: 20 }}>\r\n                                    From\r\n                                </Typography>\r\n                                <TextField\r\n                                    id=\"outlined-size-small\"\r\n                                    defaultValue=\"Small\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type='date'\r\n                                    className={classes.textField}\r\n                                />\r\n\r\n                                <Typography variant=\"h8\" noWrap={true} style={{ paddingLeft: 40, paddingRight: 20 }}>\r\n                                    To\r\n                                </Typography>\r\n                                <TextField\r\n                                    id=\"outlined-size-small\"\r\n                                    defaultValue=\"Small\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type='date'\r\n                                    className={classes.textField}\r\n                                />\r\n\r\n                                <Button style={{ backgroundColor: '#2C7FB2', color: '#fff', marginLeft: '50px', borderRadius:20 }}>View</Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n\r\n\r\n                <div className={classes.patienttable} style={{ paddingTop: 40 }}>\r\n                    <Paper sx={{ width: '80%' }}>\r\n                        <TableContainer sx={{ maxHeight: 440, align: 'center' }}>\r\n                            <Table stickyHeader aria-label=\"sticky table\" style={{ borderRadius: 5 }}>\r\n                                <TableHead style={{}}>\r\n                                    <TableRow style={{ borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\r\n                                        {columns.map((column) => (\r\n                                            <TableCell\r\n                                                key={column.id}\r\n                                                align={column.align}\r\n                                                style={{\r\n                                                    minWidth: column.minWidth,\r\n                                                    backgroundColor: '#78B088',\r\n                                                    color: '#fff',\r\n                                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                }}\r\n\r\n                                            >\r\n                                                {column.label}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                        <TableCell style={{\r\n                                            textAlign: 'center',\r\n                                            backgroundColor: '#78B088',\r\n                                            color: '#fff',\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                        }}>Actions</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody >\r\n                                    {rows\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row) => {\r\n                                            return (\r\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                    {columns.map((column) => {\r\n                                                        const value = row[column.id];\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align={column.align} style={{\r\n                                                                color: '#2C7FB2',\r\n                                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                overflow: 'hidden',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                justifyContent: 'center'\r\n                                                            }}>\r\n                                                                {column.format && typeof value === 'number'\r\n                                                                    ? column.format(value)\r\n                                                                    : value}\r\n\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n                                                    <TableCell style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                                                        <Button color=\"primary\"><EditIcon /> </Button>\r\n                                                        <Button color=\"primary\"><DeleteIcon /></Button>\r\n\r\n                                                    </TableCell>  \r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 25]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  AppBar,\r\n  Toolbar,\r\n  CssBaseline,\r\n  Typography,\r\n  Drawer,\r\n  Divider,\r\n  MenuItem,\r\n  Menu,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  List,\r\n  Button,\r\n  Avatar,\r\n  IconButton,\r\n  Grid,\r\n  Paper,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Footer from './Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  //   menuButton: {\r\n  //     marginRight: theme.spacing(2),\r\n  //   },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    color: '#2C7FB2'\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    backgroundColor: '#2C7FB2',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n    color: '#fff'\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n    backgroundColor: '#2C7FB2',\r\n    color: '#fff'\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  clinicname: {\r\n    // flexGrow: 1,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(0),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(0),\r\n    },\r\n    flex: 1,\r\n    textAlign: 'center',\r\n    color: '#00318B',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis'\r\n  },\r\n  drname: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    padding: theme.spacing(1),\r\n    flex: 0.2,\r\n    alignSelf: 'right',\r\n    textAlign: 'right',\r\n    color: '#00318B',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis'\r\n\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    // textAlign: 'center',\r\n    color: '#78B088',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n\r\n  services: {\r\n    // paddingTop: 100,\r\n    // textAlign: 'center',\r\n    color: '#78B088',\r\n    fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n  },\r\n  report: {\r\n    // flex: 1,\r\n    // border:'1px solid red',\r\n    justifyContent: 'center',\r\n    // textAlign: 'center',\r\n    color: '#78B088',\r\n    fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    fontWeight: 'bold'\r\n  },\r\n  grid: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  }\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open1 = Boolean(anchorEl);\r\n\r\n  const [authProfile, setAuthProfile] = React.useState(true);\r\n  const [anchorElProfile, setAnchorElProfile] = React.useState(null);\r\n  const openprofile = Boolean(anchorElProfile);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    setAuthProfile(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorElProfile(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorElProfile(null);\r\n  };\r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const handleRegisterClick = () => {\r\n    navigate(\"/patientregistration\");\r\n  };\r\n\r\n  const handleBookAppointmentClick = () => {\r\n    navigate(\"/bookappointment\");\r\n  };\r\n\r\n  const handleTodaysAppointmentClick = () => {\r\n    navigate(\"/todaysappointment\");\r\n  };\r\n\r\n  const handleClinicPatientsClick = () => {\r\n    navigate(\"/clinicpatients\");\r\n  };\r\n\r\n  const handleBeenTreated = () => {\r\n    navigate(\"/patientDetails_sendIn\");\r\n  };\r\n\r\n  const menuItems = [\r\n    {\r\n      text: 'Dashboard',\r\n      icon: DashboardIcon,\r\n      onClick: () => navigate(\"/dashboard\"),\r\n    },\r\n    {\r\n      text: 'Patient Registration',\r\n      icon: GroupAddIcon,\r\n      onClick: () => navigate('/patientregistration'),\r\n    },\r\n    {\r\n      text: 'Book Appointment',\r\n      icon: PermContactCalendarIcon,\r\n      onClick: () => navigate(\"/bookappointment\"),\r\n    },\r\n    {\r\n      text: \"Today's Appointments\",\r\n      icon: TodayIcon,\r\n      onClick: () => navigate(\"/todaysappointment\"),\r\n    },\r\n    {\r\n      text: 'Clinic Patients',\r\n      icon: PeopleIcon,\r\n      onClick: () => navigate(\"/clinicpatients\"),\r\n    },\r\n    {\r\n      text: \"Clinic Services\",\r\n      icon: ListIcon,\r\n      onClick: () => navigate(\"/clinicservices\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        style={{ backgroundColor: 'white' }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            open={open1}\r\n            onClose={handleClose}\r\n          >\r\n            {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleClose}>My account</MenuItem> */}\r\n          </Menu>\r\n          <div>\r\n            <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n          </div>\r\n          <div className={classes.clinicname}>\r\n            <Typography variant=\"h5\" noWrap={true}>\r\n              AKSHAY NURSING HOME\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.drname}>\r\n            <Typography variant=\"h8\" noWrap={true}  >\r\n              Dr. Pradeep Musale\r\n            </Typography>\r\n          </div>\r\n          {auth && (\r\n            <div className={classes.profile}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"primary\"\r\n\r\n              >\r\n                <AccountCircle style={{ height: 35, width: 35 }} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElProfile}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={openprofile}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n          <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemIcon style={{ color: '#fff' }}>\r\n                <Icon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        {/* <List>\r\n                    {['Dashboard', 'Profile'].map((text, index) => (\r\n                        <ListItem button key={text} style={{ fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>\r\n                            <ListItemIcon style={{ color: '#fff', fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>{index % 2 === 0 ? (<><Link href='Footer' color=\"inherit\"><DashboardIcon /></Link></>) : <AccountBoxIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {['Patient Registration', 'Appointments'].map((text, index) => (\r\n                        <ListItem button key={text} >\r\n                            <ListItemIcon onClick={onClick} style={{ color: '#fff', fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>{index % 2 === 0 ? <GroupAddIcon /> : <PermContactCalendarIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                    {['Todays Appointment', 'Services'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon style={{ color: '#fff', fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>{index % 2 === 0 ? <TodayIcon /> : <ListIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List> */}\r\n\r\n      </Drawer>\r\n\r\n\r\n      <div className='row'>\r\n        <div className={classes.report}>\r\n          <Grid container spacing={3}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            position='fixed'\r\n            style={{ padding: '75px', paddingBottom: 0 }}>\r\n            <Grid item xs={6} sm={3}>\r\n              <Paper className={classes.paper} elevation={0} >\r\n                <div className=\"column\" style={{ borderRight: '1px solid gray' }}>\r\n                  <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088', }}>\r\n                    <Typography variant=\"h7\" noWrap={true}\r\n                      style={{\r\n                        fontFamily: '\"Poppins\", san-serif;',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 500,\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        color: '#78B088',\r\n\r\n                      }}\r\n                    >\r\n                      TODAY'S REGISTRATION\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                    <Typography variant=\"h4\" noWrap={true}>\r\n                      90\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Paper className={classes.paper} elevation={0}>\r\n                <div className=\"column\" style={{ borderRight: '1px solid gray' }}>\r\n                  <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                    <Typography variant=\"h7\" noWrap={true}\r\n                      style={{\r\n                        fontFamily: '\"Poppins\", san-serif;',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 500,\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        color: '#78B088',\r\n\r\n                      }}\r\n                    >\r\n                      TODAY'S APPOINTMENTS\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                    <Typography variant=\"h4\" noWrap={true}>\r\n                      20\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Paper className={classes.paper} elevation={0}>\r\n                <div className=\"column\" style={{ borderRight: '1px solid gray' }}>\r\n                  <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                    <Typography variant=\"h7\" noWrap={true}\r\n                      style={{\r\n                        fontFamily: '\"Poppins\", san-serif;',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 500,\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        color: '#78B088',\r\n\r\n                      }}>\r\n                      PATIENT IN QUEUE\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                    <Typography variant=\"h4\" noWrap={true}>\r\n                      40\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Paper className={classes.paper} elevation={0}>\r\n                <div className=\"column\">\r\n                  <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                    <Typography variant=\"h7\" noWrap={true}\r\n                      style={{\r\n                        fontFamily: '\"Poppins\", san-serif;',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: 500,\r\n                        overflow: 'hidden',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        color: '#78B088',\r\n\r\n                      }}>\r\n                      MONTHLY APPOINTMENTS\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                    <Typography variant=\"h4\" noWrap={true}>\r\n                      11190\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <div className=\"row2\" style={{ padding: theme.spacing(10), paddingTop: 30, paddingBottom: 0 }}>\r\n          <Typography variant=\"h6\" noWrap={true} style={{ paddingBottom: '10px', color: '#78B088', fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', }}>\r\n            SERVICES\r\n          </Typography>\r\n          <Grid container spacing={3}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            position='fixed'\r\n            style={{ paddingBottom: 0 }}\r\n          >\r\n            <Grid item xs={6} sm={3} style={{ paddingBottom: 0 }} onClick={handleRegisterClick}>\r\n              <Paper className={classes.paper} elevation={3} style={{ borderRadius: 15 }} >\r\n                <div className=\"column\">\r\n                  <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                    <Typography variant=\"h8\" noWrap={true} >\r\n                      REGISTER\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                    <Typography variant=\"h8\" noWrap={true}>\r\n                      PATIENTS\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3} style={{ paddingBottom: 0 }} onClick={handleBookAppointmentClick}>\r\n              <Paper className={classes.paper} elevation={3} style={{ borderRadius: 15 }}>\r\n                <div className=\"column\">\r\n                  <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                    <Typography variant=\"h8\" noWrap={true}>\r\n                      BOOK\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                    <Typography variant=\"h8\" noWrap={true}>\r\n                      APPOINTMENT\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3} style={{ paddingBottom: 0 }} onClick={handleTodaysAppointmentClick}>\r\n              <Paper className={classes.paper} elevation={3} style={{ borderRadius: 15 }}>\r\n                <div className=\"column\">\r\n                  <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                    <Typography variant=\"h8\" noWrap={true}>\r\n                      TODAY'S\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                    <Typography variant=\"h8\" noWrap={true}>\r\n                      APPOINTMENTS\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3} style={{ paddingBottom: 0 }} onClick={handleClinicPatientsClick}>\r\n              <Paper className={classes.paper} elevation={3} style={{ borderRadius: 15 }}>\r\n                <div className=\"column\">\r\n                  <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                    <Typography variant=\"h8\" noWrap={true}>\r\n                      CLINIC\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                    <Typography variant=\"h8\" noWrap={true}>\r\n                      PATIENTS\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <div className=\"row3\" style={{ padding: theme.spacing(10), paddingTop: '50px', }}>\r\n          <Typography variant=\"h6\" noWrap={true} style={{ color: '#78B088', fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', paddingBottom: '10px' }}>\r\n            PATIENT IN QUEUE\r\n          </Typography>\r\n\r\n          <Container style={{ marginTop: 0, paddingBottom: 0, paddingLeft: 0 }}>\r\n            <Grid container spacing={2} direction=\"row\" wrap=\"nowrap\">\r\n              <Grid item xs={2}>\r\n                {/* <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center', marginBottom: 10, }}>\r\n                  <center> <Avatar justify=\"center\" style={{ marginTop: '0px', height: 60, width: 60 }} >PK</Avatar> </center>\r\n                </Grid> */}\r\n                <div style={{ padding: 10, paddingTop: 0 }}>\r\n                  <center>\r\n                    <img src=\"Pallavi Kale.jpg\" style={{ height: '60px', borderRadius: 30 }}></img>\r\n                  </center>\r\n                </div>\r\n                <Paper className={classes.paper} elevation={4} style={{ flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', padding: 30, borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400 }}>\r\n                  <Grid className={classes.grid} item xs={12} style={{ color: '#2C7FB2', textAlign: 'center' }}>\r\n                    Pallavi Kale\r\n                  </Grid>\r\n                  <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n                    09:00\r\n                  </Grid>\r\n                  <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n                    <Button style={{ color: '#2C7FB2' }}>Patient In</Button>\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center', marginBottom: 10, }}>\r\n                  <center> <Avatar justify=\"center\" style={{ marginTop: '0px', height: 60, width: 60 }} >RT</Avatar> </center>\r\n                </Grid>\r\n                <Paper className={classes.paper} elevation={4} style={{ flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', padding: 30, borderRadius: 20, fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#78B088' }}>\r\n                  <Grid className={classes.grid} item xs={12} style={{ fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;', fontWeight: 200, fontStyle: 'normal', color: '#fff', textAlign: 'center' }}>\r\n                    Rudrayani Tidke\r\n                  </Grid>\r\n                  <Grid item xs={12} style={{ textAlign: 'center', color: '#fff' }}>\r\n                    09:00\r\n                  </Grid>\r\n                  <Grid item xs={12} style={{ textAlign: 'center', alignSelf: 'center', overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis', }}>\r\n                    <Button onClick={handleBeenTreated} style={{ color: '#fff', textAlign: 'center', alignSelf: 'center' }}>Been Treated</Button>\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n              {/* <Grid item xs={2}>\r\n                                <Paper className={classes.paper}></Paper>\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                                <Paper className={classes.paper}></Paper>\r\n                            </Grid> */}\r\n            </Grid>\r\n          </Container>\r\n          {/* <Grid container spacing={2}\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                        position='static'\r\n                        style={{ paddingBottom: 0 }}\r\n                    >\r\n                        <Grid item xs={6} sm={2} style={{ paddingBottom: 0 }}>\r\n                            <Paper className={classes.paper} elevation={3}>\r\n                                <div className=\"column\">\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            Pallavi Kale\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            20-09-2021\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            Patient In\r\n                                        </Typography>\r\n                                    </div>\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={6} sm={2} style={{ paddingBottom: 0 }}>\r\n                            <Paper className={classes.paper} elevation={3} >\r\n                                <div className=\"column\">\r\n                                <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            Radhika Joshi\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            20-09-2021\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            Patient In\r\n                                        </Typography>\r\n                                    </div>\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={6} sm={2} style={{ paddingBottom: 0 }}>\r\n                            <Paper className={classes.paper} elevation={3} >\r\n                                <div className=\"column\">\r\n                                <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            Radha Pingle\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            20-09-2021\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            Patient In\r\n                                        </Typography>\r\n                                    </div>\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={6} sm={2} style={{ paddingBottom: 0 }}>\r\n                            <Paper className={classes.paper} elevation={3} >\r\n                                <div className=\"column\">\r\n                                <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            Sayali Pawar\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            20-09-2021\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ color: '#2C7FB2', textAlign: 'center', fontSize: 12 }}>\r\n                                        <Typography variant=\"h8\" noWrap={true}>\r\n                                            Patient In\r\n                                        </Typography>\r\n                                    </div>\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid> */}\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    AppBar,\r\n    Toolbar,\r\n    CssBaseline,\r\n    Typography,\r\n    Drawer,\r\n    Divider,\r\n    MenuItem,\r\n    Menu,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Button,\r\n    IconButton,\r\n    Grid,\r\n    Paper,\r\n    Link,\r\n    InputBase,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableHead,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TablePagination,\r\n\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Footer from './Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { FixedSizeList } from 'react-window';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'NAME', minWidth: 100 },\r\n    {\r\n        id: 'mobile',\r\n        label: 'MOBILE NO',\r\n        minWidth: 50,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n\r\n\r\n\r\n];\r\n\r\nfunction createData(name, mobile,) {\r\n    return { name, mobile };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pallavi Kale', '8977889898', 'pallavi@gmail.com'),\r\n    createData('Rudrayani Tidake', '67848484848', 'rudra@gmail.com'),\r\n    createData('Kajal Bhagavat', '7833674758', 'kajal@gmail.com'),\r\n    createData('Shweta Wankhade', '7484949490', 'shweta@gmail.com'),\r\n    createData('Rutuja Pingle', '94848590332', 'rutuja@gmail.com'),\r\n    createData('Sharayu Shende', '8977889898', 'sharayu@gmail.com'),\r\n    createData('Gunjun Kale', '64748897867', 'gunjan@gmail.com'),\r\n    createData('Pallavi Kale', '8977889898', 'pallavi@gmail.com'),\r\n    createData('Rudrayani Tidake', '67848484848', 'rudra@gmail.com'),\r\n    createData('Kajal Bhagavat', '7833674758', 'kajal@gmail.com'),\r\n    createData('Shweta Wankhade', '7484949490', 'shweta@gmail.com'),\r\n    createData('Rutuja Pingle', '94848590332', 'rutuja@gmail.com'),\r\n    createData('Sharayu Shende', '8977889898', 'sharayu@gmail.com'),\r\n    createData('Gunjun Kale', '64748897867', 'gunjan@gmail.com'),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n\r\n    },\r\n    //   menuButton: {\r\n    //     marginRight: theme.spacing(2),\r\n    //   },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        color: '#2C7FB2'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    clinicname: {\r\n        // flexGrow: 1,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(0),\r\n        },\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    drname: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        padding: theme.spacing(1),\r\n        flex: 0.2,\r\n        alignSelf: 'right',\r\n        textAlign: 'right',\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        // fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        borderRadius: 10\r\n    },\r\n\r\n    services: {\r\n        // paddingTop: 100,\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    },\r\n    report: {\r\n        // flex: 1,\r\n        // border:'1px solid red',\r\n        justifyContent: 'center',\r\n        // textAlign: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        textAlign: 'center',\r\n        color: '#2C7FB2'\r\n    },\r\n    headings: {\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        color: '#2C7FB2'\r\n    },\r\n    searchIcon: {\r\n        paddingTop: '10px',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n\r\n        // marginLeft: 70\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnviewprofile: {\r\n        marginLeft: 10,\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        aspectRatio: 5,\r\n    },\r\n    tbl: {\r\n        overflow: 'scroll',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    headingBookAppointment: {\r\n        paddingTop: 10,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    headingBookAppointmentShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n\r\n}));\r\n\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        // <List>\r\n        <ListItem button style={style} key={index} >\r\n            <ListItem >\r\n                <ListItemText\r\n                    style={{ borderBottom: '1px solid #F0F0F0' }}\r\n                    primary={`Title : Regular Checkup`}\r\n                    secondary={\r\n                        <React.Fragment>\r\n                            <Typography\r\n                                component={'span'}\r\n                                variant={\"body2\"}\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {`Date : 2021-09-11`}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n            <Divider />\r\n        </ListItem>\r\n        // </List>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default function ClinicPatients() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open1 = Boolean(anchorEl);\r\n\r\n    const [authProfile, setAuthProfile] = React.useState(true);\r\n    const [anchorElProfile, setAnchorElProfile] = React.useState(null);\r\n    const openprofile = Boolean(anchorElProfile);\r\n    const navigate = useNavigate();\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const [values, setValues] = React.useState([\r\n        \"Dr. Pradeep Musale\",\r\n        \"Dr. Kirti Virnak\",\r\n\r\n    ]);\r\n\r\n    const [selected, setSelected] = React.useState(\"Dr. Pradeep Musale\");\r\n\r\n    function handleChangedDropDown(event) {\r\n        setSelected(event.target.value);\r\n    }\r\n\r\n\r\n    const [appselected, setAppSelected] = React.useState(\"\");\r\n\r\n    function handleChangedAppointmentChannel(event) {\r\n        setAppSelected(event.target.value);\r\n    }\r\n\r\n\r\n    const [appvalues, setAppValues] = React.useState([\r\n        \"Walk In\",\r\n        \"Online\",\r\n        \"By Web\"\r\n\r\n    ]);\r\n\r\n\r\n\r\n    const [timevalues, setTimeValues] = React.useState([\r\n        \"08:00\",\r\n        \"09:00\",\r\n\r\n    ]);\r\n    const [timeselected, setTimeSelected] = React.useState(\"\");\r\n\r\n    function handleChangedTime(event) {\r\n        setTimeSelected(event.target.value);\r\n    }\r\n\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAuthProfile(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElProfile(null);\r\n    };\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'Dashboard',\r\n            icon: DashboardIcon,\r\n            onClick: () => navigate(\"/dashboard\"),\r\n        },\r\n        {\r\n            text: 'Patient Registration',\r\n            icon: GroupAddIcon,\r\n            onClick: () => navigate('/patientregistration'),\r\n        },\r\n        {\r\n            text: 'Book Appointment',\r\n            icon: PermContactCalendarIcon,\r\n            onClick: () => navigate(\"/bookappointment\"),\r\n        },\r\n        {\r\n            text: \"Today's Appointments\",\r\n            icon: TodayIcon,\r\n            onClick: () => navigate(\"/todaysappointment\"),\r\n        },\r\n        {\r\n            text: 'Clinic Patients',\r\n            icon: PeopleIcon,\r\n            onClick: () => navigate(\"/clinicpatients\"),\r\n        },\r\n        {\r\n            text: \"Clinic Services\",\r\n            icon: ListIcon,\r\n            onClick: () => navigate(\"/clinicservices\"),\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: 'white' }}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: 'white' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open1}\r\n                        onClose={handleClose}\r\n                    >\r\n                        {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleClose}>My account</MenuItem> */}\r\n                    </Menu>\r\n                    <div>\r\n                        <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n                    </div>\r\n                    <div className={classes.clinicname}>\r\n                        <Typography variant=\"h5\" noWrap={true}>\r\n                            AKSHAY NURSING HOME\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.drname}>\r\n                        <Typography variant=\"h8\" noWrap={true}  >\r\n                            Dr. Pradeep Musale\r\n                        </Typography>\r\n                    </div>\r\n                    {auth && (\r\n                        <div className={classes.profile}>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"primary\"\r\n\r\n                            >\r\n                                <AccountCircle style={{ height: 35, width: 35 }} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElProfile}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={openprofile}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n                    <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            <ListItemIcon style={{ color: '#fff' }}>\r\n                                <Icon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n\r\n\r\n            <Typography className={clsx(classes.headingBookAppointment, {\r\n                [classes.headingBookAppointmentShift]: open,\r\n            })} variant=\"h5\" noWrap={true} style={{ paddingTop: 80, paddingLeft: '90px' }}>\r\n                Clinic Patients\r\n            </Typography>\r\n            <Grid container className={clsx(classes.grid, {\r\n                [classes.gridShift]: open,\r\n            })} spacing={3} style={{ paddingLeft: '90px', paddingTop: 15, backgroundColor: '#fff', height: '80vh' }}>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                    <Paper elevation={6} className={classes.paper}>\r\n\r\n                        <Grid container xs={12}>\r\n                            <Grid item xs={6}>\r\n                                <center> <SearchIcon className={classes.searchIcon} />\r\n                                    <InputBase\r\n                                        label=\"Search by Name/Email\"\r\n                                        classes={{\r\n                                            // root: classes.inputRoot,\r\n                                            input: classes.inputInput,\r\n\r\n                                        }}\r\n                                        variant='outlined'\r\n                                        inputProps={{ 'aria-label': 'search' }}\r\n                                        style={{ borderRadius: 15 }}\r\n                                    > </InputBase> </center>\r\n                            </Grid>\r\n                            <Grid item xs={6} style={{ alignSelf: 'center', }}>\r\n                                <Button className={classes.btnviewprofile} size=\"small\" style={{ float: 'right', fontSize: 12, textAlign: 'center' }}>View Profile</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <TableContainer style={{ paddingTop: 20 }} >\r\n                            <Table className={classes.tbl} size=\"small\" stickyHeader aria-label=\"sticky table\" style={{ borderRadius: 5 }}>\r\n                                <TableHead style={{}}>\r\n                                    <TableRow style={{ borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\r\n                                        {columns.map((column) => (\r\n                                            <TableCell\r\n                                                key={column.id}\r\n                                                align={column.align}\r\n                                                style={{\r\n                                                    minWidth: column.minWidth,\r\n                                                    backgroundColor: '#78B088',\r\n                                                    color: '#fff',\r\n                                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                }}\r\n\r\n                                            >\r\n                                                {column.label}\r\n                                            </TableCell>\r\n                                        ))}\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody >\r\n                                    {rows\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row) => {\r\n                                            return (\r\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                    {columns.map((column) => {\r\n                                                        const value = row[column.id];\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align={column.align} style={{\r\n                                                                color: '#2C7FB2',\r\n                                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 200,\r\n                                                                overflow: 'hidden',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                justifyContent: 'center'\r\n                                                            }}>\r\n                                                                {column.format && typeof value === 'number'\r\n                                                                    ? column.format(value)\r\n                                                                    : value}\r\n\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 25]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={1}>\r\n                    <Paper className={classes.paper} elevation={0}></Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    <Paper className={classes.paper} elevation={6}>\r\n                        <Grid container xs spacing={3}>\r\n\r\n                            <Grid item sm={6} style={{ borderRight: '1px solid gray' }}>\r\n                                <center>\r\n                                    <div style={{ paddingBottom: 20 }}>\r\n                                        <img src=\"Pallavi Kale.jpg\" style={{ borderRadius: 50, height: 70 }}></img>\r\n                                    </div>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 18, color: '#00318B' }}>\r\n                                        Details:\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 14,\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        color: 'gray'\r\n\r\n                                    }}>\r\n                                        Pallavi Kale\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 18, color: '#00318B' }}>\r\n                                        Address\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray' }}>\r\n                                        Pimple Saudagar, Pune\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 18, color: '#00318B' }}>\r\n                                        Email ID:\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray' }}>\r\n                                        pallavi.kale@rajyugsolution.com\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 18, color: '#00318B' }}>\r\n                                        Mobile No:\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray' }}>\r\n                                        9095009797\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item sm={6}>\r\n                                <div>\r\n                                    <FixedSizeList height={300} width={300} itemSize={60} itemCount={6} style={{ color: '#00318B' }} >\r\n                                        {renderRow}\r\n                                    </FixedSizeList>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const change_password = async (obj) => {\r\n    try {\r\n        const changepass = await axios.patch(ip + 'Web_Resetpassword', obj);\r\n        return JSON.stringify(changepass?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const forgot_password = async (obj) => {\r\n    try {\r\n        const forgotpass = await axios.post(ip + 'Web_Forgotpassword', obj);\r\n        return JSON.stringify(forgotpass?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const EditDoctordata = async (DoctorId, clinicid, FirstName, LastName, MobileNo, Email, Address, Category, City, Pincode, State, Country, Education, DOB, MorningStartTime, MorningEndTime, EveningStartTime, EveningEndTime, Experience, Gender) => {\r\n    const body = {\r\n        UserId: DoctorId,\r\n        ClinicId: clinicid,\r\n        FirstName: FirstName,\r\n        LastName: LastName,\r\n        MobileNo: MobileNo,\r\n        Email: Email,\r\n        Address: Address,\r\n        Category: Category,\r\n        City: City,\r\n        Pincode: Pincode,\r\n        State: State,\r\n        Country: Country,\r\n        Education: Education,\r\n        DOB: DOB,\r\n        MorningStartTime: MorningStartTime,\r\n        MorningEndTime: MorningEndTime,\r\n        EveningStartTime: EveningStartTime,\r\n        EveningEndTime: EveningEndTime,\r\n        Experience: Experience,\r\n        Gender: Gender,\r\n    }\r\n    try {\r\n        const editdoctorsrequest = await axios.patch(ip + 'Web_EditDoctor', body)\r\n        return JSON.stringify(editdoctorsrequest?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport { forgot_password } from '../Apis/Profile/index';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const [mobile, setmobile] = useState('');\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  const forgotPassword = async () => {\r\n    if (selectedValue) {\r\n      const obj = {\r\n        MobileNo: mobile,\r\n        Role: selectedValue\r\n      }\r\n      const forgotpass = await forgot_password(obj);\r\n      console.log(forgotpass);\r\n      let parse = JSON.parse(forgotpass);\r\n      if (parse.success === \"200\") {\r\n        alert(parse.message);\r\n        navigate('/');\r\n      }\r\n    } else {\r\n      alert(\"Please Select Role\")\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <Grid container component=\"main\" className={classes.root} style={{ backgroundColor: '#fff' }}>\r\n      <CssBaseline />\r\n      <Grid item xs={12} sm={6} className={classes.image} />\r\n\r\n      <Grid item xs={12} md={1} style={{ alignSelf: 'center', flex: 1, backgroundColor: '#fff', borderRight: '1px solid white', padding: 10 }}>\r\n        <Grid item xs={12} style={{ paddingBottom: 10 }}>\r\n          <center><a href=\"https://www.facebook.com/health97\"> <FacebookIcon style={{ color: 'gray', fontSize: '30px' }} /> </a> </center>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ paddingBottom: 10 }}>\r\n          <center><a href=\"https://www.instagram.com/health_97_/?utm_medium=copy_link\"> <InstagramIcon style={{ color: 'gray', fontSize: '30px' }} /> </a></center>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ paddingBottom: 10 }} >\r\n          <center><a href=\"https://twitter.com/97Health\"> <TwitterIcon style={{ color: 'gray', fontSize: '30px' }} /> </a></center>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ paddingBottom: 10 }}>\r\n          <center><a href=\"https://www.linkedin.com/company/health97/\"> <LinkedInIcon style={{ color: 'gray', fontSize: '30px' }} /> </a> </center>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={5} component={Paper} elevation={0} square style={{ backgroundColor: '#fff' }}>\r\n        <div className={classes.paper}>\r\n          <div>\r\n            <img src=\"h97 logo potrait-01.png\" height='150'></img>\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Forgot Password?\r\n          </Typography>\r\n          <Typography align=\"center\">\r\n            <p> Enter Your Registered Mobile Number.</p>\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={(e) => setmobile(e.target.value)}\r\n              fullWidth\r\n              id=\"mobile\"\r\n              type='number'\r\n              onInput={(e) => {\r\n                e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n              }}\r\n              label=\"Mobile Number\"\r\n              name=\"number\"\r\n              autoComplete=\"number\"\r\n              size='small'\r\n            />\r\n\r\n            <div>\r\n              <Radio\r\n                checked={selectedValue === 'Doctor'}\r\n                color='primary'\r\n                onChange={handleChange}\r\n                value=\"Doctor\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Doctor' }}\r\n              />Doctor\r\n              <Radio\r\n                checked={selectedValue === 'Receptionist'}\r\n                onChange={handleChange}\r\n                value=\"Receptionist\"\r\n                color='primary'\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Receptionist' }}\r\n              />Receptionist\r\n              <Radio\r\n                checked={selectedValue === 'Admin'}\r\n                color='primary'\r\n                onChange={handleChange}\r\n                value=\"Admin\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Admin' }}\r\n              />Admin\r\n            </div>\r\n\r\n            <Grid container style={{ paddingTop: '10px' }}>\r\n              <Button\r\n                onClick={() => forgotPassword()}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n                style={{ color: '#fff', backgroundColor: '#78B088', borderRadius: 20 }}\r\n              >\r\n                Submit\r\n              </Button>\r\n\r\n            </Grid>\r\n            <Typography component=\"h1\">\r\n              <Box mt={2}>\r\n                {/* <Copyright /> */}\r\n                To request an account just <a href=\"https://rajyugsolutions.com/contact\" style={{ color: '#78B088' }}> email us </a>\r\n\r\n              </Box>\r\n            </Typography>\r\n            <center>\r\n              <Typography component=\"h1\">\r\n                <Box mt={2}>             \r\n                  <a href=\"/\" style={{ color: '#78B088' }}> Go Back </a>  \r\n                </Box>\r\n              </Typography>\r\n            </center>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: \"url('Login2.png')\",\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(6, 10, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    // [`& fieldset`]: {\r\n    //     borderRadius: 25,\r\n    // },\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AppBar, Toolbar, CssBaseline, Typography, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Avatar } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Footer from './Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport ip from '../ipaddress/ip';\r\nimport axios from 'axios';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    color: '#2C7FB2'\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    backgroundColor: '#2C7FB2',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n    color: '#fff'\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n    backgroundColor: '#2C7FB2',\r\n    color: '#fff'\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  clinicname: {\r\n    // flexGrow: 1,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(0),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(0),\r\n    },\r\n    flex: 1,\r\n    textAlign: 'center',\r\n    color: '#00318B',\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis'\r\n  },\r\n  drname: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    padding: theme.spacing(1),\r\n    flex: 0.2,\r\n    alignSelf: 'right',\r\n    textAlign: 'right',\r\n    color: '#00318B',\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis'\r\n\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    color: '#78B088',\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n\r\n  services: {\r\n    color: '#78B088',\r\n    fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n  },\r\n  report: {\r\n    justifyContent: 'center',\r\n    color: '#78B088',\r\n    fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    fontWeight: 'bold'\r\n  },\r\n  grid: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  }\r\n}));\r\n\r\n\r\nexport default function DoctorNavbar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open1 = Boolean(anchorEl);\r\n  const [doctordata, setdoctordata] = useState({});\r\n  const [staffdata, setstaffdata] = useState({});\r\n  const [authProfile, setAuthProfile] = React.useState(true);\r\n  const [anchorElProfile, setAnchorElProfile] = React.useState(false);\r\n  const [sessionRole, setsessionRole] = React.useState('');\r\n  const [hvreq, sethvreq] = useState([]);\r\n  const [appointcount, setappointcount] = useState([]);\r\n  const [openmodal, setopenmodal] = React.useState(false);\r\n  const [Subscriptiondata, setSubscriptiondata] = React.useState('');\r\n\r\n  // const openprofile = Boolean(anchorElProfile);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const fetchDoctorProfile = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let userid = parsed.userid;\r\n    let role = parsed.Role;\r\n    setsessionRole(role);\r\n    const doctorInfo = await axios.post(ip + 'ShowDoctorDetailUsingId', { DoctorId: userid });\r\n    setdoctordata(doctorInfo?.data?.Doctor);\r\n\r\n  }\r\n\r\n  const fetchStaffProfile = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let userid = parsed.userid;\r\n    let role = parsed.Role;\r\n    setsessionRole(role);\r\n    const staffInfo = await axios.post(ip + 'ShowUserDetailUsingId', { UserId: userid, Role: role });\r\n    setstaffdata(staffInfo?.data?.NewUser);\r\n  }\r\n\r\n  const fetchHVRequestCount = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n\r\n    const hvInfo = await axios.post(ip + 'Web_HomeVisitorRequestCount', { ClinicId: clinicid });\r\n    sethvreq(hvInfo?.data?.HVRequest);\r\n  }\r\n\r\n  const fetchAppointmentCount = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    let doctorid = parsed.userid;\r\n\r\n    const appointInfo = await axios.post(ip + 'Web_AppointmentCountForDoctor', { ClinicId: clinicid, DoctorId: doctorid });\r\n    setappointcount(appointInfo?.data?.Appointment);\r\n  }\r\n\r\n  const fetch_Subscription_Profile = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n    try {\r\n      const ClinicInfo = await axios.post(ip + 'GetSubscription', { ClinicId: ClinicId, });\r\n      setSubscriptiondata(ClinicInfo?.data?.Subscription);\r\n      testing(ClinicInfo?.data?.Subscription);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const testing = async (subcription) => {\r\n    const now = new Date();\r\n    const current = now.toISOString().split('T')[0];\r\n    if (subcription <= current) {\r\n      console.log('subcription expired')\r\n      try {\r\n        localStorage.removeItem('userdata');\r\n        navigate(\"/\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    else {\r\n      console.log('still have subcription')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDoctorProfile();\r\n    fetchHVRequestCount();\r\n    fetchAppointmentCount();\r\n    fetch_Subscription_Profile();\r\n  }, [])\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setAuthProfile(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorElProfile(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorElProfile(true);\r\n    navigate(\"/DoctorProfile\");\r\n  };\r\n\r\n  const handlelogout = () => {\r\n    setAnchorElProfile(true);\r\n    localStorage.removeItem('userdata');\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleHVReq = () => {\r\n    navigate('/DoctorHomeVisitRequest')\r\n  };\r\n\r\n  const handleAppoint = () => {\r\n    navigate('/DoctorDashboard')\r\n  };\r\n\r\n  const menuItems = [\r\n    {\r\n      text: 'Home',\r\n      icon: HomeIcon,\r\n      onClick: () => navigate(\"/DoctorHome\"),\r\n    },\r\n    {\r\n      text: 'Dashboard',\r\n      icon: DashboardIcon,\r\n      onClick: () => navigate(\"/DoctorDashboard\"),\r\n    },\r\n    {\r\n      text: \"Appointments On TV\",\r\n      icon: TvIcon,\r\n      onClick: () => window.open('/Doctor_TV_TodaysAppointments', '_blank'),\r\n    },\r\n    {\r\n      text: 'Book Appointment',\r\n      icon: AssignmentTurnedInIcon,\r\n      onClick: () => navigate(\"/DoctorBookAppointment\"),\r\n    },\r\n    {\r\n      text: 'Clinic Patients',\r\n      icon: PeopleOutlineIcon,\r\n      onClick: () => navigate(\"/DoctorClinicPatients\"),\r\n    },\r\n    {\r\n      text: \"Upload Reports\",\r\n      icon: AssignmentIcon,\r\n      onClick: () => navigate(\"/DoctorReports\"),\r\n    },\r\n    {\r\n      text: 'Home Visitor Requests',\r\n      icon: ChatIcon,\r\n      onClick: () => navigate('/DoctorHomeVisitRequest'),\r\n    },\r\n    {\r\n      text: 'Clinic Staff',\r\n      icon: SupervisorAccountIcon,\r\n      onClick: () => navigate('/DoctorClinicStaff'),\r\n    },\r\n    {\r\n      text: \"Home Visitors\",\r\n      icon: DirectionsWalkIcon,\r\n      onClick: () => navigate(\"/DoctorHomeVisitors\"),\r\n    },\r\n    {\r\n      text: \"Medicines\",\r\n      icon: LocalHospitalIcon,\r\n      onClick: () => navigate(\"/DoctorAddMedicine\"),\r\n    },\r\n    {\r\n      text: \"Clinic Services\",\r\n      icon: SettingsIcon,\r\n      onClick: () => navigate(\"/DoctorClinicServices\"),\r\n    },\r\n\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        style={{ backgroundColor: 'white' }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            open={open1}\r\n            onClose={handleClose}\r\n          >\r\n          </Menu>\r\n          <div>\r\n            <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n          </div>\r\n          <div className={classes.clinicname}>\r\n            {/* {sessionRole == 'Doctor' ? */}\r\n            <Typography variant=\"h5\" noWrap={true} style={{ color: '#2C7FB2' }}>\r\n              {doctordata.ClinicName}\r\n            </Typography>\r\n            {/* : <Typography variant=\"h5\" noWrap={true} style={{ color: '#2C7FB2' }}>\r\n                {staffdata[0].FirstName}\r\n              </Typography>\r\n            } */}\r\n\r\n          </div>\r\n          <div className={classes.drname}>\r\n            {/* {sessionRole == 'Doctor' ?  */}\r\n            <Typography variant=\"h8\" noWrap={true} style={{ color: '#2C7FB2' }}   >\r\n              Dr. {doctordata.FirstName} {doctordata.LastName}\r\n            </Typography>\r\n\r\n            {/* :\r\n              <Typography variant=\"h5\" noWrap={true} style={{ color: '#2C7FB2' }}>\r\n                {staffdata[0].FirstName} {staffdata[0].LastName}\r\n              </Typography>} */}\r\n          </div>\r\n          {auth && (\r\n            <div className={classes.profile}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"primary\"\r\n\r\n              >\r\n                {doctordata.ProfileImage ?\r\n                  <Avatar style={{ borderRadius: 50, height: 40, width: 40 }} src={doctordata.ProfileImage} /> :\r\n                  <Avatar style={{ borderRadius: 50, height: 40, width: 40 }} />}\r\n\r\n                {/* <AccountCircle style={{ height: 35, width: 35 }} /> */}\r\n              </IconButton>\r\n\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElProfile}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={anchorElProfile}\r\n                onClick={() => setAnchorElProfile(false)}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <div style={{ marginRight: 10 }}>\r\n            <center>\r\n              <p style={{ color: '#fff', backgroundColor: 'red', position: 'absolute', top: 0, marginLeft: 14, marginTop: 5, border: '1px solid red', borderRadius: 45, width: '20px', fontSize: 12, fontWeight: 600, fontFamily: 'Poppins' }}> {appointcount[0] ? appointcount[0].count : '0'}  </p>\r\n            </center>\r\n            <NotificationsNoneIcon onClick={() => handleAppoint()} style={{ color: '#2C7FB2', cursor: 'pointer' }} />\r\n          </div>\r\n          <div>\r\n            <center>\r\n              <p style={{ color: '#fff', backgroundColor: 'red', position: 'absolute', top: 0, marginLeft: 14, marginTop: 5, border: '1px solid red', borderRadius: 45, width: '20px', fontSize: 12, fontWeight: 600, fontFamily: 'Poppins' }}> {hvreq[0] ? hvreq[0].count : '0'} </p>\r\n            </center>\r\n            <DirectionsWalkIcon onClick={() => handleHVReq()} style={{ color: '#2C7FB2', cursor: 'pointer' }} />\r\n          </div>\r\n          <div>\r\n            <SettingsIcon onClick={() => setopenmodal(true)} style={{ color: '#2C7FB2', cursor: 'pointer', marginLeft: 10 }} />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n          <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemIcon style={{ color: '#fff' }}>\r\n                <Icon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n\r\n      </Drawer>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n\r\nexport const PatientInQueue = async () => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let doctorid = parsed.userid;\r\n    try {\r\n        const res = await axios.post(ip + 'Web_ShowPatientInQueue', { DoctorId: doctorid });\r\n        return res?.data?.Appointment;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n\r\nexport const BookedAppointments = async () => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let doctorid = parsed.userid;\r\n    try {\r\n        const res = await axios.post(ip + 'Web_BookedAppointments', { DoctorId: doctorid });\r\n        return res?.data?.Appointment;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n\r\nexport const SendIn = async (id, UserId, FirstName) => {\r\n\r\n    try {\r\n        const res = await axios.patch(ip + 'Web_SendIn', {\r\n            id: id,\r\n            AppointmentStatus: 'Send In',\r\n            UserId: UserId,\r\n            FirstName: FirstName\r\n        });\r\n        return { id, UserId, FirstName };\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n\r\nexport const PatientIn = async (id, FirstName) => {\r\n\r\n    try {\r\n        const res = await axios.patch(ip + 'Web_PatientIn', {\r\n            id: id,\r\n            AppointmentStatus: 'Patient In',\r\n            FirstName: FirstName\r\n        });\r\n        return { id, FirstName };\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, Avatar, Grid, Paper, } from \"@material-ui/core\";\r\nimport { PatientIn, SendIn } from '../../../Apis/PatientInQueue/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport function PatientInueue_List({ data }) {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const [sendIn, setsendIn] = useState([]);\r\n    const [patientIn, setpatientIn] = useState([]);\r\n\r\n    const fetchSendIn = async (id, UserId, FirstName) => {\r\n        const data = await SendIn(id, UserId, FirstName);\r\n        setsendIn(data);\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    const fetchTreatNow = async (item) => {\r\n        navigate('/DoctorPatientDetails_SendIn', { state: { details: item } })\r\n    }\r\n\r\n    if (data.length !== 0) {\r\n        return (\r\n            <>\r\n                {data.map((item) => {\r\n\r\n                    if (item.AppointmentStatus == 'Patient In') {\r\n                        return (\r\n                            <>\r\n                                {item.ShortNote == 'Emergency' ? <>\r\n                                    <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                        <div>\r\n                                            <center>\r\n                                                {item.ProfileImage ?\r\n                                                    <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} src={item.ProfileImage} /> :\r\n                                                    <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />}\r\n                                            </center>\r\n                                        </div>\r\n                                        <Paper className={classes.paper2} elevation={4} style={{ marginRight: 25, marginLeft: 25, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: 'Poppins', fontStyle: 'normal', fontWeight: 400, }}>\r\n                                            <Grid item xs={12} style={{\r\n                                                color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '13px', overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis', width: 120,\r\n                                                marginTop: '-5px'\r\n                                            }}>\r\n                                                {item.FirstName} {item.LastName}\r\n                                            </Grid>\r\n                                            <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n                                                {item.AppointmentTime}\r\n                                            </Grid>\r\n                                            <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2', paddingBottom: 10 }}>\r\n                                                {item.AppointmentStatus}\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                        <div>\r\n                                            <center>\r\n                                                <Button size='small' onClick={() => fetchSendIn(item.id, item.UserId, item.FirstName)}\r\n                                                    style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#e50000', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Send In</Button>\r\n                                            </center>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </> :\r\n                                    <>\r\n                                        <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                            <div>\r\n                                                <center>\r\n                                                    {item.ProfileImage ?\r\n                                                        <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} src={item.ProfileImage} /> :\r\n                                                        <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />}\r\n                                                </center>\r\n                                            </div>\r\n                                            <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: 'Poppins', fontStyle: 'normal', fontWeight: 400, }}>\r\n                                                <Grid item xs={12} style={{\r\n                                                    color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '13px', overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis', width: 120,\r\n                                                    marginTop: '-5px'\r\n                                                }}>\r\n                                                    {item.FirstName} {item.LastName}\r\n                                                </Grid>\r\n                                                <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n                                                    {item.AppointmentTime}\r\n                                                </Grid>\r\n                                                <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2', paddingBottom: 10 }}>\r\n                                                    {item.AppointmentStatus}\r\n                                                </Grid>\r\n                                            </Paper>\r\n                                            <div>\r\n                                                <center>\r\n                                                    <Button size='small' onClick={() => fetchSendIn(item.id, item.UserId, item.FirstName)}\r\n                                                        style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#78B088', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Send In</Button>\r\n                                                </center>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </>}\r\n                            </>\r\n                        ); //return close\r\n\r\n                    } //if close\r\n                    else if (item.AppointmentStatus == 'Send In') {\r\n                        return (\r\n                            <>\r\n                                <Grid item xs={2} style={{ marginTop: 5, marginLeft: '-30px', cursor: 'pointer', marginBottom: 0, paddingBottom: 0 }} onClick={() => fetchTreatNow(item)}>\r\n                                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                        <center> {item.ProfileImage ?\r\n                                            <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} src={item.ProfileImage} /> :\r\n                                            <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />} </center>\r\n                                    </Grid>\r\n                                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#78B088' }}>\r\n                                        <Grid item xs={12} style={{\r\n                                            color: '#fff', textAlign: 'center', paddingTop: 40, overflow: 'hidden', fontSize: '13px',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis', width: 120,\r\n                                            marginTop: '-5px'\r\n                                        }}>\r\n                                            {item.FirstName} {item.LastName}\r\n                                        </Grid>\r\n                                        <Grid item xs={12} style={{ textAlign: 'center', color: '#fff' }}>\r\n                                            {item.AppointmentTime}\r\n                                        </Grid>\r\n                                        <Grid item xs={12} style={{ textAlign: 'center', color: '#fff', paddingBottom: 10 }}>\r\n                                            {item.AppointmentStatus}\r\n                                        </Grid>\r\n                                        {/* <Grid item xs={12} style={{ marginTop: 5 }}>\r\n                                            <Typography style={{ textAlign: 'center', color: '#fff', fontWeight: 600, fontSize: 18 }}> Treat Now </Typography>\r\n                                        </Grid> */}\r\n\r\n                                    </Paper>\r\n                                    <div>\r\n                                        <center>\r\n                                            <Button size='small' onClick={() => fetchTreatNow(item)}\r\n                                                style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#2C7FB2', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Treat Now</Button>\r\n                                        </center>\r\n                                    </div>\r\n                                </Grid>\r\n                            </>\r\n                        ); //return close\r\n                    }\r\n                    // else if (item.ShortNote == 'Emergency') {\r\n                    //     return (\r\n                    //         <>\r\n\r\n                    //         </>\r\n                    //     );\r\n                    // }\r\n                    else {\r\n                        return (\r\n                            <>\r\n                                <Grid item xs={2} style={{ paddingTop: 30, marginLeft: '-30px' }}>\r\n                                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                        <center>\r\n                                            <Avatar style={{ borderRadius: 50, height: 60, width: 60 }} /> </center>\r\n                                    </Grid>\r\n                                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                                        <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                                            No Patients\r\n                                        </Grid>\r\n\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </>\r\n                        );\r\n                    }\r\n                }\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                        <center>\r\n                            <Avatar style={{ borderRadius: 50, height: 60, width: 60 }} /> </center>\r\n                    </Grid>\r\n                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                        <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                            No Patients\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    paper2: {\r\n        padding: theme.spacing(1),\r\n        color: '#2C7FB2',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 30,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const Time = async () => {\r\n    const timingInfo = await axios.post(ip + 'GetSlots');\r\n    return timingInfo?.data?.Slots;\r\n}\r\n\r\nexport const Note_for_Doctor = async () => {\r\n    try {\r\n        const notefordoctor = await axios.post(ip + 'GetNoteForDoctor');\r\n        return notefordoctor?.data?.NoteForDoctor;\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Edit_App_for_Dashboard = async (obj) => {\r\n    try {\r\n        const edit = await axios.patch(ip + 'Web_EditAppointmentForDashboard', obj)\r\n        return JSON.stringify(edit?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, FormControl, Select, DialogTitle, DialogContentText, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { Time, Note_for_Doctor, Edit_App_for_Dashboard } from '../../../Apis/Dashboard/Edit_Appointment_From_PatientIn/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const Edit_Appointment_From_PatientIn_Queue = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [time, settime] = useState([]);\r\n    const [doctorsNote, setdoctorsNote] = useState([]);\r\n    const [reason, setReason] = useState(data.AppointmentReason ? data.AppointmentReason : '');\r\n    const [notefordoctor, setnotefordoctor] = useState(data.ShortNote ? data.ShortNote : '');\r\n    const [bp, setBp] = useState(data.Patient_BP ? data.Patient_BP : '');\r\n    const [temp, setTemp] = useState(data.Patient_Temp ? data.Patient_Temp : '');\r\n    const [height, setHeight] = useState(data.Patient_Height ? data.Patient_Height : '');\r\n    const [weight, setWeight] = useState(data.Patient_Weight ? data.Patient_Weight : '');\r\n    const [plus, setPlus] = useState(data.Patient_Plus ? data.Patient_Plus : '');\r\n    const [spo2, setSpo2] = useState(data.Patient_SPO2 ? data.Patient_SPO2 : '');\r\n    const [appDate, setappDate] = useState(data.AppointmentDate ? data.AppointmentDate : '');\r\n    const [appTime, setappTime] = useState(data.AppointmentTime ? data.AppointmentTime : '');\r\n\r\n    useEffect(() => {\r\n        fetchtimings();\r\n        fetchNotefordoctor();\r\n    }, [])\r\n\r\n    const fetchtimings = async () => {\r\n        const timingInfo = await Time()\r\n        settime(timingInfo);\r\n    }\r\n\r\n    const fetchNotefordoctor = async () => {\r\n        const doctorsNoteInfo = await Note_for_Doctor()\r\n        setdoctorsNote(doctorsNoteInfo);\r\n    }\r\n\r\n    const EditAppointmentDetails = async () => {\r\n        const currentTime = new Date();\r\n        let systemTime = currentTime.toTimeString();\r\n        let tdate = currentTime.toISOString().split('T')[0];\r\n        if (appTime < systemTime) {\r\n            alert(`You can't not set Appointment at ${appTime}`);\r\n            return\r\n        }\r\n        else if (appDate < tdate) {\r\n            alert(`You cannot set appointment for ${appDate}`);\r\n            return\r\n        }\r\n        const obj = {\r\n            AppointmentStatus: 'Patient In',\r\n            AppointmentTime: appTime,\r\n            AppointmentDate: appDate,\r\n            Patient_BP: bp,\r\n            Patient_Weight: weight,\r\n            Patient_Height: height,\r\n            Patient_SPO2: spo2,\r\n            Patient_Plus: plus,\r\n            Patient_Temp: temp,\r\n            ShortNote: notefordoctor,\r\n            AppointmentReason: reason,\r\n            id: data.id\r\n        }\r\n        const editrequest = await Edit_App_for_Dashboard(obj);\r\n        let parse = JSON.parse(editrequest);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            handlemodal();\r\n            window.location.reload()\r\n        }\r\n        else{\r\n            alert(parse.message);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                // BackdropProps={{ invisible: true }}\r\n                // PaperProps={{\r\n                //     style: {\r\n                //       backgroundColor: 'transparent',\r\n                //       boxShadow: 'none',\r\n                //     },\r\n                //   }}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Appointment Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        {data.FirstName} {data.LastName}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        PID:- {data.PatientId}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Time\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Date\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                        <Select\r\n                                            className={classes.textField}\r\n                                            native\r\n                                            value={appTime}\r\n                                            onChange={(e) => setappTime(e.target.value)}\r\n                                            label=\"time\"\r\n                                            inputProps={{\r\n                                                name: 'time',\r\n                                                id: 'outlined-appointment-native-simple',\r\n                                            }}\r\n                                            style={{ width: '100%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                            {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                                        <TextField\r\n                                            InputProps={{\r\n                                                className: classes.input\r\n                                            }}\r\n                                            InputLabelProps={{\r\n                                                shrink: true\r\n                                            }}\r\n                                            variant=\"outlined\"\r\n                                            value={appDate}\r\n                                            onChange={(e) => setappDate(e.target.value)}\r\n                                            id=\"date\"\r\n                                            label=\"\"\r\n                                            type=\"date\"\r\n                                            size=\"small\"\r\n                                            style={{ width: '100%', fontSize: 14 }}\r\n                                        />\r\n                                    </FormControl>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} style={{ marginTop: 10 }}>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#2C7FB2',\r\n                                            fontSize: 18,\r\n                                        }}>\r\n                                        Vital Information\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 10 }}>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"BP\"\r\n                                        value={bp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setBp(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Temp\"\r\n                                        value={temp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setTemp(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Height\"\r\n                                        value={height}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setHeight(e.target.value)}}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 15 }}>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Weight\"\r\n                                        value={weight}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setWeight(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"SPO2\"\r\n                                        value={spo2}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setSpo2(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Pulse Rate\"\r\n                                        value={plus}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setPlus(e.target.value)}}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 17 }}>\r\n                                <TextField className={classes.inputFields} size='small' value={reason} onChange={(e) => setReason(e.target.value)} id=\"outlined-basic\" label=\"Reason\" variant=\"outlined\" />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 12 }}>\r\n                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                    <Select\r\n                                        className={classes.textField}\r\n                                        native\r\n                                        value={notefordoctor}\r\n                                        onChange={(e) => setnotefordoctor(e.target.value)}\r\n                                        label=\"time\"\r\n                                        inputProps={{\r\n                                            name: 'time',\r\n                                            id: 'outlined-appointment-native-simple',\r\n                                        }}\r\n\r\n                                        style={{ width: '150%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" >Note For Doctor</option>\r\n                                        {doctorsNote.map(v => (<option value={v.NoteForDoctor}>{v.NoteForDoctor}</option>))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handlemodal} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button onClick={() => EditAppointmentDetails()} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, Avatar, Grid, Paper, } from \"@material-ui/core\";\r\nimport { PatientIn, SendIn } from '../../../Apis/PatientInQueue/index';\r\nimport { Edit_Appointment_From_PatientIn_Queue } from './Edit_appointment_from_patient_in';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport function BookedAppointment_List({ data }) {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const [patientIn, setpatientIn] = useState([]);\r\n    const [openmodal, setopenmodal] = useState(false);\r\n    const [patientdetails, setpatientdetails] = useState([]);\r\n\r\n    const fetchPatientIn = async (item) => {\r\n        // const data = await PatientIn(id, FirstName);\r\n        // setpatientIn(data);\r\n        setpatientIn(item)\r\n        setopenmodal(true);\r\n    }\r\n\r\n\r\n    if (data.length !== 0) {\r\n        return (\r\n            <>\r\n                {data.map((item) => {\r\n                  \r\n                    return (\r\n                        <>\r\n                            <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                <div>\r\n                                    <center>\r\n                                        {item.ProfileImage ?\r\n                                            <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} src={item.ProfileImage} /> :\r\n                                            <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />}\r\n                                    </center>\r\n                                </div>\r\n                                <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, }}>\r\n                                    <Grid item xs={12} style={{\r\n                                        color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '13px', overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis', width: 120,\r\n                                        marginTop: '-5px'\r\n                                    }}>\r\n                                        {item.FirstName} {item.LastName}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n                                        {item.AppointmentTime}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2', paddingBottom: 10 }}>\r\n                                        {item.AppointmentStatus}\r\n                                    </Grid>\r\n                                </Paper>\r\n                                <div>\r\n                                    <center>\r\n                                        <Button size='small' onClick={() => fetchPatientIn(item)}\r\n                                            style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#2C7FB2', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Patient In</Button>\r\n                                    </center>\r\n                                </div>\r\n                            </Grid>\r\n\r\n                        </>\r\n                    ); //return close\r\n\r\n                    //     } //if close\r\n                    //     else {\r\n                    //         return (\r\n                    //             <>\r\n                    //                 <Grid item xs={2} style={{ marginTop: 10, marginLeft: '-30px' }}>\r\n                    //                     <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                    //                         <center>\r\n                    //                             <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} /> </center>\r\n                    //                     </Grid>\r\n                    //                     <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                    //                         <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                    //                             No Patients\r\n                    //                         </Grid>\r\n\r\n                    //                     </Paper>\r\n                    //                 </Grid>\r\n                    //             </>\r\n                    //         );\r\n                    //     }\r\n                }\r\n\r\n                )}\r\n                {openmodal ? <Edit_Appointment_From_PatientIn_Queue show={openmodal} data={patientIn} handlemodal={() => setopenmodal(false)} /> : null}\r\n\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                        <center>\r\n                            <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} /> </center>\r\n                    </Grid>\r\n                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                        <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                            No Patients\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 30,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Typography, Button, Grid, Paper, Avatar } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport axios from 'axios';\r\nimport ip from '../ipaddress/ip';\r\nimport { PatientInQueue, BookedAppointments, SendIn } from '../Apis/PatientInQueue/index';\r\nimport { PatientInueue_List } from './Dasboard_Component/Doctor/PatientInQueue';\r\nimport { BookedAppointment_List } from './Dasboard_Component/Doctor/BookedAppointment';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DoctorDashboard() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [todaysregistration, settodaysregistration] = useState([]);\r\n    const [appointments, setappointments] = useState('');\r\n    const [patientInQueue, setPatientInQueue] = useState([]);\r\n    const [bookedAppointments, setbookedAppointments] = useState([]);\r\n    const [sendIn, setsendIn] = useState([]);\r\n\r\n    const fetchRegistrationData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const todayregistrationInfo = await axios.post(ip + 'Web_NewRegistrationReport', { ClinicId: clinicid })\r\n        settodaysregistration(todayregistrationInfo?.data);\r\n        // window.location.reload(10000);\r\n        setInterval(settodaysregistration(todayregistrationInfo?.data), 1)\r\n\r\n    }\r\n\r\n    const fetchDailyAppointments = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let userid = parsed.userid;\r\n        const appInfo = await axios.post(ip + 'Web_AppointmentReport', { DoctorId: userid })\r\n        setappointments(appInfo?.data);\r\n        // window.location.reload(100000);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            fetchPatientInQueue();\r\n            fetchBookedAppointments();\r\n            fetchRegistrationData();\r\n            fetchDailyAppointments();\r\n        }, 10000);\r\n        fetchRegistrationData();\r\n        fetchDailyAppointments();\r\n        fetchPatientInQueue();\r\n        fetchBookedAppointments();\r\n        return () => clearInterval(interval);\r\n    }, [])\r\n\r\n\r\n    const fetchPatientInQueue = async () => {\r\n        const data = await PatientInQueue();\r\n        setPatientInQueue(data);\r\n\r\n    }\r\n\r\n    const fetchBookedAppointments = async () => {\r\n        const data = await BookedAppointments();\r\n        setbookedAppointments(data);\r\n    }\r\n\r\n\r\n    const handleRegisterClick = () => {\r\n        navigate(\"/DoctorClinicPatients\");\r\n    };\r\n\r\n    const handleBookAppointmentClick = () => {\r\n        navigate(\"/DoctorBookAppointment\");\r\n    };\r\n\r\n    const handleTodaysAppointmentClick = () => {\r\n        navigate(\"/Todays_appointment_Tabs\");\r\n    };\r\n\r\n\r\n\r\n    const handleSendIn = () => {\r\n        navigate(\"/DoctorPatientDetails_SendIn\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n\r\n                {/* Reports Grid Start */}\r\n                <Grid item className={classes.griditem} xs={12} sm={3} style={{ borderRight: '1px solid gray' }}>\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n\r\n                                }}\r\n                            >\r\n                                TODAY'S APPOINTMENTS\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            {\r\n                                <Typography variant=\"h5\" noWrap={true}>\r\n                                    {(appointments.DailyAppointment !== null || appointments.DailyAppointment != 0) ? appointments.DailyAppointment : 0}\r\n                                </Typography>\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.griditem} xs={12} sm={3} style={{ borderRight: '1px solid gray' }}>\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n                                }}>\r\n                                PATIENT IN QUEUE\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h5\" noWrap={true}>\r\n                                {(appointments.PatientInQueueAppointments !== null || appointments.PatientInQueueAppointments != 0) ? (appointments.PatientInQueueAppointments) : (0)}\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.griditem} xs={12} sm={3} style={{ borderRight: '1px solid gray' }}>\r\n                    <Paper className={classes.paper} elevation={0} style={{}}>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088', }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n                                }}\r\n                            >\r\n                                TODAY'S REGISTRATION\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h5\" noWrap={true}>\r\n                                {todaysregistration.DailyRecord ? todaysregistration.DailyRecord[0].DailyReport : 0}\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.griditem} xs={12} sm={3} >\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n\r\n                                }}>\r\n                                MONTHLY APPOINTMENTS\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h5\" noWrap={true}>\r\n                                {(appointments.MonthlyAppintments !== null || appointments.MonthlyAppintments != 0) ? (appointments.MonthlyAppintments) : (0)}\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Reports grid end */}\r\n\r\n\r\n                <Grid item xs={12} sm={3} onClick={handleRegisterClick} style={{ cursor: 'pointer' }}>\r\n                    {/* <Button className={classes.btn} size=\"small\" style={{ fontSize: 20 }}>Register Patients</Button> */}\r\n\r\n                    <Paper className={classes.paperServices} elevation={4} style={{ borderRadius: '25px' }}>\r\n                        <Typography variant=\"h7\" noWrap={true} style={{ color: '#2C7FB2', fontSize: 15 }}>\r\n                            REGISTER PATIENTS\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} onClick={handleBookAppointmentClick} style={{ cursor: 'pointer' }}>\r\n                    <Paper className={classes.paperServices} elevation={4} style={{ borderRadius: '25px' }} >\r\n                        <Typography variant=\"h7\" noWrap={true} style={{ color: '#2C7FB2', fontSize: 15 }}>\r\n                            BOOK APPOINTMENT\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} onClick={handleTodaysAppointmentClick} style={{ cursor: 'pointer' }}>\r\n                    <Paper className={classes.paperServices} elevation={4} style={{ borderRadius: '25px' }}>\r\n                        <Typography variant=\"h7\" noWrap={true} style={{ color: '#2C7FB2', fontSize: 15 }}>\r\n                            TODAY'S APPOINTMENTS\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} onClick={handleTodaysAppointmentClick} style={{ cursor: 'pointer' }}>\r\n                    <Paper className={classes.paperServices} elevation={4} style={{ borderRadius: '25px' }}>\r\n                        <Typography variant=\"h7\" noWrap={true} style={{ color: '#2C7FB2', fontSize: 15 }}>\r\n                            MONTHLY APPOINTMENTS\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* service grid end */}\r\n\r\n\r\n                {/* Booked Appointments queue grid start */}\r\n                <Grid container direction=\"row\" >\r\n                    <Grid item xs={12}>\r\n                        <Paper elevation={0}>\r\n                            <div className=\"row\" >\r\n                                <Typography variant=\"h5\" noWrap={true}\r\n                                    style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 500,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#78B088',\r\n                                        fontSize: 19,\r\n\r\n                                    }}>\r\n                                    Booked Appointments\r\n                                </Typography>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Container style={{ paddingBottom: 20, }}>\r\n                        <Grid container spacing={2} direction=\"row\" wrap=\"nowrap\" style={{ overflowX: 'scroll' }}>\r\n                            {bookedAppointments ? <BookedAppointment_List data={bookedAppointments} /> :\r\n                                <>\r\n                                    <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                        <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                            <center>\r\n                                                <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} /> </center>\r\n                                        </Grid>\r\n                                        <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                                            <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                                                No Patients\r\n                                            </Grid>\r\n\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Container>\r\n                </Grid>\r\n\r\n                {/* Patient In queue grid start */}\r\n                <Grid container direction=\"row\" >\r\n                    <Grid item xs={12}>\r\n                        <Paper elevation={0}>\r\n                            <div className=\"row\" >\r\n                                <Typography variant=\"h5\" noWrap={true}\r\n                                    style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 500,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#78B088',\r\n                                        fontSize: 19,\r\n                                    }}>\r\n                                    Patient In Queue\r\n                                </Typography>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Container style={{ paddingBottom: 50, }}>\r\n                        <Grid container spacing={2} direction=\"row\" wrap=\"nowrap\" style={{ overflowX: 'scroll' }}>\r\n                            {patientInQueue ? <PatientInueue_List data={patientInQueue} /> :\r\n                                <>\r\n                                    <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                        <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                            <center>\r\n                                                <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} /> </center>\r\n                                        </Grid>\r\n                                        <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                                            <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                                                No Patients\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Container>\r\n\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 30,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    btn: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n\r\n        fontSize: '10px'\r\n    },\r\n}));\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n\r\nexport const Patients_Data = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    const patientInfo = await axios.post(ip + 'Web_GetPatients', { ClinicId: clinicid });\r\n    return patientInfo?.data?.Patients;\r\n}\r\n\r\n\r\nexport const Reports = async (userid) => {\r\n    try {\r\n        const reports = await axios.post(ip + 'Web_GetGroupPatientReportsbyTitle', { UserId: userid });\r\n        return reports?.data?.PatientReports;\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Upload_Reports = async (obj) => {\r\n    try {\r\n        const addReports = await axios.post(ip + 'Web_AddPatientReports', { reportsdata: obj })\r\n        return JSON.stringify(addReports?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const getReportsByTitle = async (userid, reportitle) => {\r\n    let body = {\r\n        UserId: userid,\r\n        ReportTitle: reportitle\r\n    }\r\n    try {\r\n        const getPatientReports = await axios.post(ip + 'Web_GetPatientReports', body);\r\n        return getPatientReports?.data?.PatientReports\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const DeleteReportsByTitle = async (userid, reporttitle) => {\r\n    try {\r\n        const deletereports = await axios.delete(ip + 'Web_DeletePatientReportsByTitle', { data: { UserId: userid, ReportTitle: reporttitle } });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const DeleteReportsById = async (id) => {\r\n    try {\r\n        const deletereports = await axios.delete(ip + 'Web_DeletePatientReportById', { data: { id: id } });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const Add_Broadcast = async (obj) => {\r\n    try {\r\n        const broadcastmessage = await axios.post(ip + 'Web_AddBroadcast', obj)\r\n        return JSON.stringify(broadcastmessage?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, DialogActions, DialogTitle, DialogContentText, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getReportsByTitle, DeleteReportsByTitle, DeleteReportsById } from '../../Apis/Patient_Reports/index';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { Add_Broadcast } from '../../Apis/Broadcast_Message/index';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const BroadcastMessage = ({ show, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [title, settitle] = React.useState('');\r\n    const [description, setdescription] = React.useState('');\r\n\r\n    const addBroadcastMessage = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        let userid = parsed.userid;\r\n\r\n        const obj = {\r\n            DoctorId: userid,\r\n            ClinicId: clinicid,\r\n            Title: title,\r\n            Discription: description\r\n        }\r\n        const request = await Add_Broadcast(obj);\r\n        let parse = JSON.parse(request);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            handlemodal();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                onClose={handlemodal}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Broadcast Message\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <center>\r\n                                    <TextField className={classes.inputFields} onChange={(e) => settitle(e.target.value)} id=\"outlined-basic\" label=\"Title\" variant=\"outlined\" />\r\n                                    <TextField className={classes.inputFields} onChange={(e) => setdescription(e.target.value)} multiline rows={3} rowsMax={6} id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" />\r\n                                    <Alert severity=\"warning\" style={{fontsize:15, position:'relative',bottom:14,width:400}}>Note : This message broadcasted to all the clinic patients</Alert>\r\n                                    <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={() => handlemodal(false)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                        </Grid>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={() => addBroadcastMessage()} style={{ float: 'left', marginLeft: 20 }}>Send</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </center>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        width: 400,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport { BroadcastMessage } from './Broadcast_Messages/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DoctorHome() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n\r\n    const handleDashboard = () => {\r\n        navigate(\"/DoctorDashboard\");\r\n    };\r\n\r\n    const handleTodaysAppointment = () => {\r\n        navigate(\"/Todays_appointment_Tabs\");\r\n    };\r\n\r\n    const handleAppointmentsOnTV = () => {\r\n        navigate(\"/Doctor_TV_TodaysAppointments\");\r\n    };\r\n\r\n    const handleBookAppointment = () => {\r\n        navigate(\"/DoctorBookAppointment\");\r\n    };\r\n\r\n    const handleClinicPatients = () => {\r\n        navigate(\"/DoctorClinicPatients\");\r\n    };\r\n\r\n    const handleUploadReports = () => {\r\n        var data = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let role = parsed.Role;\r\n        if (role == 'Doctor') {\r\n            navigate(\"/DoctorReports\");\r\n        }\r\n        else {\r\n            alert(\"Access Denied\");\r\n        }\r\n    };\r\n\r\n    const handlePaymentReport = () => {\r\n        navigate(\"/DoctorPaymentReports\");\r\n    };\r\n\r\n    const handleClinicStaff = () => {\r\n        navigate(\"/DoctorClinicStaff\");\r\n    };\r\n\r\n    const handleAddMedicines = () => {\r\n        navigate(\"/DoctorAddMedicine\");\r\n    };\r\n\r\n    const handleHomeVisitor = () => {\r\n        navigate(\"/DoctorHomeVisitors\");\r\n    };\r\n\r\n    const handleFacilities = () => {\r\n        navigate(\"/DoctorClinicServices\");\r\n    };\r\n\r\n    const handleAddServices = () => {\r\n        navigate(\"/DoctorClinicServices\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                            marginLeft: 10,\r\n\r\n                        }}>\r\n                        Home\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleDashboard} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"Dashboard-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Dashboard <br /><br />\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleTodaysAppointment} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"today's Appointment-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Today's <br />Appointments\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={() => window.open('/Doctor_TV_TodaysAppointments', '_blank')} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"todays appointment for tv-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Appointments <br />On TV\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleBookAppointment} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"Book Appointment-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Book <br />Appointments\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleClinicPatients} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"clinic patients-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Clinic <br /> Patients\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleUploadReports}>\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"reports-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Patient <br /> Reports\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleHomeVisitor}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>  <img src=\"homevisitoricon.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Home <br /> Visitors\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleClinicStaff} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"Clinic Staff-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Clinic <br /> Staff\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleAddMedicines} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"medicines-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Medicines <br />Inventory\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleAddServices}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"services-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Clinic <br /> Services\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={() => setOpenmodal(true)}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"broadcast-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Broadcast <br /> Messages\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={2} onClick={handlePaymentReport}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"Dashboard-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Reports <br /> Analysis\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {openmodal ? <BroadcastMessage show={openmodal} handlemodal={() => setOpenmodal(false)} /> : null}\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        borderRadius: 10,\r\n        paddingTop: 40,\r\n        paddingBottom: 40,\r\n        cursor: 'pointer'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 5,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n}));\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const Add_Medicine = async (obj) => {\r\n    try {\r\n        const addmedicine = await axios.post(ip + 'Web_AddMedicines', obj);\r\n        return JSON.stringify(addmedicine?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\nexport const Delete_Medicine_Details_by_id = async (id) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'Web_DeleteMedicines', { id: id });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const edit_Medicine = async (obj) => {\r\n    try {\r\n        const editmedicine = await axios.patch(ip + 'Web_EditMedicines', obj);\r\n        return JSON.stringify(editmedicine?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Search_Medicine= async (MedicineName) => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const medicineInfo = await axios.post(ip + 'Web_SearchMedicines', { ClinicId: clinicid, MedicineName: MedicineName });\r\n        return medicineInfo?.data?.Medicine;\r\n    } catch (error) {\r\n       return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, InputLabel, Radio, Typography, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { edit_Medicine } from '../../../Apis/Medicines/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nexport default function Edit_Medicine({ show, data, handleEditModal }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n\r\n    const [mName, setmName] = useState(data.MedicineName);\r\n    const [mDescription, setmDescription] = useState(data.MedicineDiscription);\r\n    const [mType, setmType] = useState(data.MedicineType);\r\n    const [mStrength, setmStrength] = useState(data.Strength);\r\n    const [mQuantity, setmQuantity] = useState(data.Quantity);\r\n    const [mStartDate, setmStartDate] = useState(data.StartDate);\r\n    const [mExpiryDate, setmExpiryDate] = useState(data.ExpiryDate);\r\n\r\n    const editMedicine = async () => {\r\n        var sessiondata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(sessiondata);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n        const obj = {\r\n            id: data.id,\r\n            ClinicId: clinicid,\r\n            DoctorId: doctorid,\r\n            MedicineName: mName,\r\n            MedicineDiscription: mDescription,\r\n            Strength: mStrength,\r\n            MedicineType: mType,\r\n            Quantity: mQuantity,\r\n            StartDate: mStartDate,\r\n            ExpiryDate: mExpiryDate,\r\n        }\r\n        const edit = await edit_Medicine(obj);\r\n        let parse = JSON.parse(edit);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* Edit Patient Details */}\r\n\r\n            <Dialog\r\n                open={show}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Medicine Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleEditModal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                <center>\r\n                                    <div>\r\n                                        <TextField className={classes.inputFields} value={mName} onChange={(e) => setmName(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Medicine Name\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={mDescription} onChange={(e) => setmDescription(e.target.value)} id=\"outlined-basic\" multiline rows={3}\r\n                                            rowsMax={5} size=\"small\" label=\"Description\" variant=\"outlined\" />\r\n                                        <Grid xs={12} >\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '73%' }} >\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    value={mType}\r\n                                                    onChange={(e) => setmType(e.target.value)}\r\n                                                    native\r\n                                                    label=\"Medicine Type\"\r\n                                                    inputProps={{\r\n                                                        name: 'gender',\r\n                                                        id: 'outlined-gender-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '75%', fontSize: 14, marginLeft: 50, marginBottom: 15 }}\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\" >Medicine Type</option>\r\n                                                    <option value={\"Male\"}>Tablet</option>\r\n                                                    <option value={\"Female\"}>Syrup</option>\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <TextField className={classes.inputFields} value={mStrength} onChange={(e) => setmStrength(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Strength\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={mQuantity} onChange={(e) => setmQuantity(e.target.value)} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Quantity\" variant=\"outlined\" />\r\n                                        <Grid container >\r\n                                            <Grid item xs={6}>\r\n                                                <center>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 80 }}>\r\n                                                        Start Date\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <center>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginRight: 80 }}>\r\n                                                        Expiry Date\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n                                            <Grid item xs={6} style={{ marginTop: 5 }}>\r\n                                                <TextField className={classes.inputFields} value={mStartDate} onChange={(e) => setmStartDate(e.target.value)} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" style={{ width: '130px', float: 'right', marginRight: 20 }} />\r\n                                            </Grid>\r\n                                            <Grid item xs={6} style={{ marginTop: 5 }}>\r\n                                                <TextField className={classes.inputFields} value={mExpiryDate} onChange={(e) => setmExpiryDate(e.target.value)} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" style={{ width: '130px', float: 'left', marginLeft: 20 }} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={handleEditModal} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={() => editMedicine()} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Delete_Medicine_Details_by_id } from '../../../Apis/Medicines/index';\r\n\r\nconst Delete_Medicine = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n    console.log(data)\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (id) => {\r\n\r\n        const request = await Delete_Medicine_Details_by_id(id);\r\n        let response=JSON.parse(request);\r\n        if(response.success=='200'){\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else{\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Medicine?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data.id)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Medicine\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControl, InputLabel, TextField, Typography, Button, Select, Slide, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from 'axios';\r\nimport ip from '../ipaddress/ip';\r\nimport { Add_Medicine, Search_Medicine } from '../Apis/Medicines/index';\r\nimport Edit_Medicine from './Medicines/Edit_Medicine/index';\r\nimport Delete_Medicine from './Medicines/Delete_Medicine/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst columns = [\r\n    {\r\n        field: 'MedicineName',\r\n        headerName: 'Name',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'MedicineId',\r\n        headerName: 'Medicine Id',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'MedicineDiscription',\r\n        headerName: 'Expiry Date',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'Strength',\r\n        headerName: 'Strength',\r\n        width: 160,\r\n        editable: true,\r\n        align: 'center'\r\n    },\r\n    {\r\n        field: \"Action\",\r\n        width: 130,\r\n        sortable: false,\r\n\r\n        RenderCell: (params) => {\r\n            const onClickDelete = async () => {\r\n                return alert(\"Are you Sure!! Do you want to delete medicine\");\r\n            };\r\n            const onClickEdit = async () => {\r\n                return alert(JSON.stringify(params.row, null, 4));\r\n            };\r\n            const [openeditmodal, setopeneditmodal] = useState(false);\r\n            const [opendeletemodal, setOpenDeletemodal] = useState(false);\r\n\r\n            return (\r\n                <>\r\n                    {openeditmodal ? <Edit_Medicine show={openeditmodal} data={params.row} handleEditModal={() => setopeneditmodal(false)} /> : null}\r\n                    <IconButton onClick={() => setopeneditmodal(true)} style={{ color: '#2C7FB2' }}>\r\n                        <EditIcon />\r\n                    </IconButton>\r\n                    {opendeletemodal ? <Delete_Medicine show={opendeletemodal} data={params.row} handleclose={() => setOpenDeletemodal(false)} /> : null}\r\n                    <IconButton color=\"secondary\" onClick={() => setOpenDeletemodal(true)} style={{ color: '#707070' }}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n\r\n                </>\r\n            );\r\n        }\r\n    },\r\n];\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DoctorAddMedicine() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(6);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [medicines, setmedicines] = useState([]);\r\n    const [mName, setmName] = useState('');\r\n    const [mDescription, setmDescription] = useState('');\r\n    const [mSymptoms, setmSymptoms] = useState('');\r\n    const [mType, setmType] = useState('');\r\n    const [mStrength, setmStrength] = useState('');\r\n    const [mQuantity, setmQuantity] = useState('');\r\n    const [mStartDate, setmStartDate] = useState('');\r\n    const [mExpiryDate, setmExpiryDate] = useState('');\r\n    const [searchterm, setsearchterm] = useState('');\r\n\r\n\r\n    const fetchmedicines = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const medicineInfo = await axios.post(ip + 'Web_GetAllMedicines', { ClinicId: clinicid });\r\n        setmedicines(medicineInfo?.data?.Medicine);\r\n    }\r\n\r\n    const addMedicine = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n        const obj = {\r\n            ClinicId: clinicid,\r\n            DoctorId: doctorid,\r\n            MedicineName: mName,\r\n            MedicineDiscription: mDescription,\r\n            Symptoms: mSymptoms,\r\n            Strength: mStrength,\r\n            MedicineType: mType,\r\n            Quantity: mQuantity,\r\n            StartDate: mStartDate,\r\n            ExpiryDate: mExpiryDate\r\n        }\r\n        const add = await Add_Medicine(obj);\r\n        let parse = JSON.parse(add);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n\r\n    const SearchMedicine = async (searchterm) => {\r\n        try {\r\n            const request = await Search_Medicine(searchterm);\r\n            setmedicines(request)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchmedicines();\r\n    }, [])\r\n\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    const handlereload = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n\r\n    const handleClickOpenEditmodal = () => {\r\n        setOpenEditmodal(true);\r\n    };\r\n\r\n    const handleCloseEditmodal = () => {\r\n        setOpenEditmodal(false);\r\n    };\r\n\r\n\r\n    const [opendeletemodal, setOpenDeletemodal] = React.useState(false);\r\n\r\n    const handleClickOpenDeletemodal = () => {\r\n        setOpenDeletemodal(true);\r\n    };\r\n\r\n    const handleCloseDeletemodal = () => {\r\n        setOpenDeletemodal(false);\r\n    };\r\n\r\n    \r\n\r\n    // const fun = () => {  \r\n    //     document.getElementById(\"outlined-basic\").reset(true);  \r\n    //   } ;\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Add Medicines\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center> <Typography className={classes.headingAddMedicine} variant=\"h6\" noWrap={true}>\r\n                            Add Medicines\r\n                        </Typography></center>\r\n\r\n                        <div>\r\n                            <center>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <TextField className={classes.inputFields} onChange={(e) => setmName(e.target.value)} id=\"outlined-basic\" label=\"Medicine Name\" variant=\"outlined\" size=\"small\" />\r\n                                </FormControl>\r\n                            </center>\r\n                            <center>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <TextField className={classes.inputFields} onChange={(e) => setmDescription(e.target.value)} multiline rows={2} maxRows={4} id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" size=\"small\" />\r\n                                </FormControl>\r\n                            </center>\r\n                            <center>\r\n                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '83%', marginLeft: 40 }} >\r\n\r\n                                    <Select\r\n                                        className={classes.textFieldForm}\r\n                                        size='large'\r\n                                        native\r\n                                        value={mType}\r\n                                        onChange={(e) => setmType(e.target.value)}\r\n                                        label=\"Medicine Type\"\r\n                                        inputProps={{\r\n                                            name: 'medicine-type',\r\n                                            id: 'outlined-medicine-type-native-simple',\r\n                                        }}\r\n                                        style={{ width: '90%', fontSize: 14 }}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" >Medicine Type</option>\r\n                                        <option value='Tablet'>Tablet</option>\r\n                                        <option value='Syrup'>Syrup</option>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </center>\r\n                            <Grid container style={{ marginTop: 10 }}>\r\n                                <Grid item xs={6}>\r\n                                    <TextField className={classes.inputFields} onChange={(e) => setmStrength(e.target.value)} id=\"outlined-basic\" label=\"Strength\" variant=\"outlined\" size=\"small\" style={{ width: '130px', float: 'right', marginRight: 20 }} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField className={classes.inputFields} onChange={(e) => setmQuantity(e.target.value)} id=\"outlined-basic\" label=\"Quantity\" variant=\"outlined\" size=\"small\" style={{ width: '130px', marginLeft: 20 }} />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 2 }}>\r\n                                <Grid item xs={6}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                            Start Date\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                            Expiry Date\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                    <TextField className={classes.inputFields} onChange={(e) => setmStartDate(e.target.value)} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" style={{ width: '130px', float: 'right', marginRight: 20 }} />\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                    <TextField className={classes.inputFields} onChange={(e) => setmExpiryDate(e.target.value)} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" style={{ width: '130px', marginLeft: 20 }} />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <div>\r\n                                <Grid container xs={12} style={{ marginTop: 15 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={handlereload}  style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button onClick={addMedicine} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Add</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={8}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginLeft: 20, marginRight: 30, paddingTop: 20 }}>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <SearchIcon className={classes.searchIcon} />\r\n                            <InputBase\r\n                                label=\"Search by Name\"\r\n                                value={searchterm}\r\n                                placeholder=\"Search by Medicines\"\r\n                                onChange={(e) => setsearchterm(e.target.value)}\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n\r\n                                }}\r\n                                variant='outlined'\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                                style={{ borderRadius: 15 }}\r\n                            > </InputBase>\r\n\r\n                            <Button className={classes.btnview} onClick={() => SearchMedicine(searchterm)} size=\"small\" style={{ fontSize: 12 }}>View</Button>\r\n\r\n                        </Grid>\r\n\r\n                        <DataGrid\r\n                            style={{ height: 365, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}\r\n                            rows={medicines}\r\n                            rowHeight={30}\r\n                            columns={columns}\r\n                            columnWidth={10}\r\n                            pageSize={10}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n                {/* Edit Details  */}\r\n\r\n                <Dialog\r\n                    open={openeditmodal}\r\n                    onClose={handleCloseEditmodal}\r\n                    maxWidth={maxWidth}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Grid container>\r\n                                <div >\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Medicine Name\" variant=\"outlined\" size=\"small\" />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                            <TextField className={classes.inputFields} multiline rows={2} maxRows={4} id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" size=\"small\" />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '73%', marginLeft: 35 }} >\r\n                                            <InputLabel htmlFor=\"outlined-age-native-simple\">Medicine Type</InputLabel>\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='large'\r\n                                                native\r\n                                                label=\"Medicine Type\"\r\n                                                inputProps={{\r\n                                                    name: 'medicine-type',\r\n                                                    id: 'outlined-medicine-type-native-simple',\r\n                                                }}\r\n                                                style={{ width: '90%', fontSize: 13 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" />\r\n                                                <option value={1}>Tablet</option>\r\n                                                <option value={2}>Syrup</option>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </center>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Strength\" variant=\"outlined\" size=\"small\" style={{ width: '130px', float: 'right', marginRight: 20 }} />\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Quantity\" variant=\"outlined\" size=\"small\" style={{ width: '130px', marginLeft: 20 }} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container style={{ marginTop: 2 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                                    Start Date\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" style={{ width: '130px', marginLeft: 20 }} />\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                                    Expiry Date\r\n                                                </Typography>\r\n                                            </center>\r\n                                            {/* <TextField className={classes.inputFields} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" style={{ width: '130px', float: 'right', marginRight: 20 }} /> */}\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" style={{ width: '130px', marginLeft: 20 }} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n\r\n                                    <div>\r\n                                        <Grid container xs={12} style={{ marginTop: 15 }}>\r\n                                            <Grid item sm={6} >\r\n                                                <Button className={classes.btnregister} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                            </Grid>\r\n                                            <Grid item sm={6} >\r\n                                                <Button className={classes.btnregister} onClick={addMedicine} style={{ float: 'left', marginLeft: 20 }}>Add</Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n\r\n\r\n                {/* for Delete User */}\r\n                {/* <Dialog\r\n                    open={opendeletemodal}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleCloseDeletemodal}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                            Do you want to Delete Medicine?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions style={{ marginTop: 20 }}>\r\n                        <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }} >\r\n                            No\r\n                        </Button>\r\n                        <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }}>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog> */}\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        marginLeft:20\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 295,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '11px'\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, DialogActions, DialogTitle, DialogContentText, Typography, List, ListItemText, ListItem, Divider, Paper, Grid } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getReportsByTitle, DeleteReportsByTitle, DeleteReportsById } from '../../Apis/Patient_Reports/index';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const PatientReportImages = ({ show, data, handleClosemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [Data, setData] = useState([]);\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n\r\n    useEffect(() => {\r\n        FetchData();\r\n    }, []);\r\n\r\n    const FetchData = async () => {\r\n        const request = await getReportsByTitle(data.UserId, data.ReportTitle);\r\n        setData(request);\r\n    }\r\n\r\n\r\n    const DeleteReport = async (id) => {\r\n        const request = await DeleteReportsById(id)\r\n        if (Data.length > 0) {\r\n            FetchData();\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                onClose={handleClosemodal}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n                style={{ height: 550 }}\r\n            >\r\n                <DialogContent>\r\n\r\n                    <DialogTitle id=\"alert-dialog-title\" >\r\n                        <IconButton edge=\"start\" onClick={handleClosemodal} color=\"inherit\" aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n\r\n                    {Data.length > 0 ?\r\n                        <>\r\n                            <Grid container spacing={2} style={{ height: 250, overflowY: 'auto' }}>\r\n                                {Data.map((item) => {\r\n                                    return (\r\n                                        <>\r\n                                            <Grid item sm={2} >\r\n                                                <div style={{ marginTop: 10 }}>\r\n                                                    <center>\r\n                                                        <Typography variant=\"h6\" noWrap={true}\r\n                                                            style={{\r\n                                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                overflow: 'hidden',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                color: '#2C7FB2',\r\n                                                                fontSize: 14\r\n                                                            }}>\r\n                                                            {item.ReportTitle}\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </div>\r\n                                                <Paper spacing={2} elevation={2} className={classes.groupreports} >\r\n                                                    <center>\r\n                                                        <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n                                                            <DeleteIcon size='small' onClick={() => DeleteReport(Data[0].id)} />\r\n                                                        </IconButton>\r\n                                                        {item.ReportImage ?\r\n                                                            <img onClick={() => window.open(item.ReportImage, '_blank')} style={{ height: 120, width: '100%' }} src={item.ReportImage} onError={({ currentTarget }) => {\r\n                                                                currentTarget.onerror = null; // prevents looping\r\n                                                                currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                            }} /> :\r\n                                                            null}\r\n                                                    </center>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                        </>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Grid>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                <Grid item sm={12} >\r\n                                    <div>\r\n                                        <Typography variant=\"h6\" noWrap={true}\r\n                                            style={{\r\n                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 600,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#2C7FB2',\r\n                                                fontSize: 14\r\n                                            }}>\r\n                                            No Records Found\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <Paper spacing={2} elevation={3} className={classes.groupreports} >\r\n                                        <center>\r\n                                            <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                        </center>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>}\r\n\r\n                    {/* <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                        {Data.length > 0 ?\r\n                            Data.map((item) => {\r\n                                return (\r\n                                    <>\r\n                                        <Grid item sm={2} >\r\n                                            <Paper elevation={3} className={classes.groupreports} >\r\n                                                <center>\r\n                                                    <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n                                                        <DeleteIcon size='small' onClick={() => DeleteReport(Data[0].id)} />\r\n                                                    </IconButton>\r\n                                                    {item.ReportImage ?\r\n                                                        <img onClick={() => window.open(item.ReportImage, '_blank')} style={{ height: 150, width: '100%' }} src={item.ReportImage} onError={({ currentTarget }) => {\r\n                                                            currentTarget.onerror = null; // prevents looping\r\n                                                            currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                        }} /> :\r\n                                                        null}\r\n                                                </center>\r\n                                            </Paper>\r\n                                        </Grid> */}\r\n\r\n                    {/* <ListItem button>\r\n                                            <ListItemText>\r\n                                                <div>\r\n                                                    <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n                                                        <DeleteIcon onClick={() => DeleteReport(Data[0].id)} size='small' />\r\n                                                    </IconButton>\r\n                                                    <ListItemText>{item.ReportTitle}</ListItemText>\r\n                                                </div>\r\n                                                {item.ReportImage ?\r\n                                                    <img onClick={() => window.open(item.ReportImage, '_blank')} style={{ height: 150, width: '100%' }} src={item.ReportImage} onError={({ currentTarget }) => {\r\n                                                        currentTarget.onerror = null; // prevents looping\r\n                                                        currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                    }} /> :\r\n                                                    null}\r\n                                            </ListItemText>\r\n                                        </ListItem> */}\r\n                    {/* <Divider style={{ border: '1px solid gray' }} /> */}\r\n                    {/* </>\r\n                                )\r\n                            })\r\n\r\n                            : <>\r\n                                <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                    <Grid item sm={2} >\r\n                                        <Paper elevation={3} className={classes.groupreports} >\r\n                                            <center>\r\n                                                <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                            </center>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true}\r\n                                                    style={{\r\n                                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                                        fontStyle: 'normal',\r\n                                                        fontWeight: 600,\r\n                                                        overflow: 'hidden',\r\n                                                        whiteSpace: 'nowrap',\r\n                                                        textOverflow: 'ellipsis',\r\n                                                        color: '#2C7FB2',\r\n                                                        fontSize: 14\r\n                                                    }}>\r\n                                                    No Records Found\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid> */}\r\n                    {/* <ListItemText>\r\n                                    <div>\r\n                                        <ListItemText style={{ fontSize: 16, fontFamily: 'Poppins', fontWeight: 400, color: '#2C7FB2' }}>No Records Found</ListItemText>\r\n                                    </div>\r\n                                    <img src=\"default-image.png\" style={{ height: 180, width: '100%' }} />\r\n                                </ListItemText> */}\r\n                    {/* </>\r\n\r\n                        }\r\n                    </Grid> */}\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n\r\n        width: 90,\r\n        borderRadius: 10,\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, AppBar, IconButton, Toolbar, DialogContent, DialogActions, DialogTitle, DialogContentText, Button, Slide } from \"@material-ui/core\";\r\nimport { DeleteReportsByTitle } from '../../Apis/Patient_Reports/index';\r\nimport { transparent } from 'material-ui/styles/colors';\r\n\r\nexport const DeletePatientReports = ({ show, data, handleCloseDeletemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n\r\n    const DeleteReports = async (userid, reporttitle) => {\r\n        const request = await DeleteReportsByTitle(userid, reporttitle);\r\n        let parse = JSON.parse(request);\r\n        if (parse.success === \"200\") {\r\n            handleCloseDeletemodal();\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>  <Dialog\r\n            open={show}\r\n            keepMounted\r\n            onClose={handleCloseDeletemodal}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                    Do you want to Delete Reports?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions style={{ marginTop: 20 }}>\r\n                <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }} >\r\n                    No\r\n                </Button>\r\n                <Button className={classes.btnregister} onClick={() => DeleteReports(data.UserId, data.ReportTitle)} style={{ width: 100 }}>\r\n                    Yes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n}));","// import React, { useState, useEffect } from 'react';\r\n// import clsx from 'clsx';\r\n// import { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Typography, Button, InputBase, Divider, Grid, Paper, IconButton } from \"@material-ui/core\";\r\n// import DoctorNavbar from './Doctor_Navbar';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n// import ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n// import { DataGrid } from '@material-ui/data-grid';\r\n// import { Patients_Data, Reports, getReportsByTitle } from '../Apis/Patient_Reports/index';\r\n// import { PatientReportImages } from './Patient_Reports_Image_Comp/index';\r\n// import { DeletePatientReports } from './Patient_Reports_Image_Comp/DeletePatient_Report';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import axios from 'axios';\r\n\r\n// const getPatientSearchApi = 'http://13.233.217.107:8080/api/Web_SearchPatients';\r\n\r\n// const drawerWidth = 240;\r\n\r\n// const columns = [\r\n//     {\r\n//         field: 'fullName',\r\n//         headerName: 'Full name',\r\n//         sortable: false,\r\n//         width: 200,\r\n//         valueGetter: (params) =>\r\n//             `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n//             }`,\r\n//     },\r\n//     {\r\n//         field: 'MobileNo',\r\n//         headerName: 'Contact No',\r\n//         width: 160,\r\n//         editable: true,\r\n//     },\r\n// ];\r\n\r\n\r\n// export default function DoctorReports() {\r\n//     const classes = useStyles();\r\n//     const theme = useTheme();\r\n//     const navigate = useNavigate();\r\n//     const [open, setOpen] = React.useState(false);\r\n//     const [patientData, setpatientData] = React.useState([]);\r\n//     const [reportsData, setreportsData] = React.useState([]);\r\n//     const [puserid, setpuserid] = React.useState('');\r\n//     const [openmodal, setopenmodal] = React.useState(false);\r\n//     const [modalData, setmodalData] = React.useState([]);\r\n//     const [opendeletemodal, setopendeletemodal] = React.useState(false);\r\n//     const [deletemodalData, setdeletemodalData] = React.useState([]);\r\n//     const [patientsearch, setpatientsearch] = useState([]);\r\n\r\n//     const fetchPatientData = async () => {\r\n//         const patientInfo = await Patients_Data();\r\n//         setpatientData(patientInfo);\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         fetchPatientData();\r\n//     }, []);\r\n\r\n//     const handleRowClick = async (UserId) => {\r\n//         setpuserid(UserId)\r\n//         const report = await Reports(puserid);\r\n//         setreportsData(report);\r\n//     }\r\n\r\n//     const handleSubmit = async () => {\r\n//         if (puserid == '') {\r\n//             alert('Please Select Patient');\r\n//             return;\r\n//         }\r\n//         navigate('/DoctorUploadReports', {\r\n//             state: { detail: puserid }\r\n//         });\r\n//     }\r\n\r\n//     const getImageData = async (item) => {\r\n//         setmodalData(item);\r\n//         setopenmodal(true);\r\n//     }\r\n\r\n//     const getDeleteModalData = async (item) => {\r\n//         setdeletemodalData(item);\r\n//         setopendeletemodal(true);\r\n//     }\r\n\r\n//     const searchPatient = async (patientsearch) => {\r\n//         var data = await localStorage.getItem(\"userdata\");\r\n//         let parsed = JSON.parse(data);\r\n//         let clinicid = parsed.ClinicId;\r\n//         try {\r\n//             const patientsInfo = await axios.post(getPatientSearchApi, { ClinicId: clinicid, Name: patientsearch });\r\n//             setpatientData(patientsInfo?.data?.Patients);\r\n//         }\r\n//         catch (e) {\r\n//             console.log(e)\r\n//         }\r\n//     }\r\n\r\n//     const handleGoBack = () => {\r\n//         navigate(\"/DoctorHome\");\r\n//     };\r\n\r\n//     return (\r\n//         <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n//             <DoctorNavbar />\r\n\r\n//             {/* main grid */}\r\n//             <Grid container spacing={2}\r\n//                 className={clsx(classes.grid, {\r\n//                     [classes.gridShift]: open,\r\n//                 })}\r\n//                 direction=\"row\"\r\n//             >\r\n//                 <Grid item xs={12} >\r\n//                     <Typography variant=\"h5\" noWrap={true}\r\n//                         style={{\r\n//                             fontFamily: 'Poppins',\r\n//                             fontStyle: 'normal',\r\n//                             fontWeight: 500,\r\n//                             overflow: 'hidden',\r\n//                             whiteSpace: 'nowrap',\r\n//                             textOverflow: 'ellipsis',\r\n//                             color: '#2C7FB2',\r\n//                         }}>\r\n//                         <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n//                         Reports\r\n//                     </Typography>\r\n//                 </Grid>\r\n\r\n//                 <Grid item xs={12} sm={4} >\r\n//                     <Paper elevation={6} className={classes.paper} style={{ borderRadius: 10, paddingTop: 20, paddingBottom: 20 }}>\r\n//                         <Grid container xs={12}>\r\n//                             <Grid item xs={6}>\r\n//                                 <center>\r\n//                                     <SearchIcon className={classes.searchIcon} />\r\n//                                     <InputBase\r\n//                                         placeholder=\"Search by Name/Email\"\r\n//                                         onChange={(e) => setpatientsearch(e.target.value)}\r\n//                                         value={patientsearch}\r\n//                                         classes={{\r\n//                                             input: classes.inputInput,\r\n//                                         }}\r\n//                                         variant='outlined'\r\n//                                         inputProps={{ 'aria-label': 'search' }}\r\n//                                         style={{ borderRadius: 15 }}\r\n//                                     > </InputBase>\r\n//                                 </center>\r\n//                             </Grid>\r\n//                             <Grid item xs={6} style={{ alignSelf: 'center', }}>\r\n//                                 <Button className={classes.btnSearch} onClick={() => searchPatient(patientsearch)} size=\"small\" style={{ float: 'right', fontSize: 12, textAlign: 'center' }}>Search</Button>\r\n//                             </Grid>\r\n//                         </Grid>\r\n\r\n\r\n//                         <DataGrid\r\n//                             style={{ height: 270, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n//                             rows={patientData}\r\n//                             rowHeight={30}\r\n//                             columns={columns}\r\n//                             columnWidth={10}\r\n//                             pageSize={6}\r\n//                             onRowClick={(newSelection) => handleRowClick(newSelection.row.UserId)}\r\n//                         />\r\n\r\n//                         <Divider />\r\n//                         <Grid container xs={12} style={{ paddingTop: 20 }}>\r\n//                             <Grid item xs={12}>\r\n//                                 <center> <Button className={classes.btnUpload} onClick={handleSubmit} size=\"small\" style={{ fontSize: 12 }}>Upload</Button> </center>\r\n//                             </Grid>\r\n//                         </Grid>\r\n//                     </Paper>\r\n//                 </Grid>\r\n\r\n//                 <Grid item xs={12} sm={8}>\r\n//                     <Paper elevation={6} style={{ borderRadius: 10, padding: 20, marginLeft: 25, marginRight: 20 }}>\r\n//                         <Typography variant=\"h6\" noWrap={true}\r\n//                             style={{\r\n//                                 fontFamily: 'Poppins',\r\n//                                 fontStyle: 'normal',\r\n//                                 fontWeight: 600,\r\n//                                 overflow: 'hidden',\r\n//                                 whiteSpace: 'nowrap',\r\n//                                 textOverflow: 'ellipsis',\r\n//                                 color: '#2C7FB2',\r\n//                                 textDecoration: 'underline',\r\n//                                 fontSize: 18,\r\n//                                 textUnderlineOffset: '1px',\r\n//                             }}>\r\n//                             View Reports\r\n//                         </Typography>\r\n\r\n//                         {reportsData.length != 0 ?\r\n//                             <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n//                                 {reportsData.map((item) => {\r\n//                                     return (\r\n//                                         <Grid item sm={2} >\r\n//                                             <Paper elevation={3} className={classes.groupreports} >\r\n//                                                 <center>\r\n//                                                     <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n//                                                         <DeleteIcon size='small' onClick={() => getDeleteModalData(item)} />\r\n//                                                     </IconButton>\r\n//                                                     {item.ReportImage ? <img src={item.ReportImage} onClick={() => getImageData(item)} style={{ height: '120px', width: '100%', borderRadius: 10, cursor: 'pointer' }} onError={({ currentTarget }) => {\r\n//                                                         currentTarget.onerror = null; // prevents looping\r\n//                                                         currentTarget.src = \"default-pdf-image.jpg\";\r\n//                                                     }} /> : <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n//                                                     }\r\n//                                                 </center>\r\n//                                             </Paper>\r\n//                                             <div style={{ marginTop: 10 }}>\r\n//                                                 <center>\r\n//                                                     <Typography variant=\"h6\" noWrap={true}\r\n//                                                         style={{\r\n//                                                             fontFamily: '\"Poppins\", san-serif;',\r\n//                                                             fontStyle: 'normal',\r\n//                                                             fontWeight: 600,\r\n//                                                             overflow: 'hidden',\r\n//                                                             whiteSpace: 'nowrap',\r\n//                                                             textOverflow: 'ellipsis',\r\n//                                                             color: '#2C7FB2',\r\n//                                                             fontSize: 14\r\n//                                                         }}>\r\n//                                                         {item.ReportTitle}\r\n//                                                     </Typography>\r\n//                                                 </center>\r\n//                                             </div>\r\n//                                         </Grid>\r\n//                                     )\r\n//                                 })}\r\n//                             </Grid>\r\n//                             :\r\n//                             <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n//                                 <Grid item sm={2} >\r\n//                                     <Paper elevation={3} className={classes.groupreports} >\r\n//                                         <center>\r\n//                                             <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n//                                         </center>\r\n//                                         <center>\r\n//                                             <Typography variant=\"h6\" noWrap={true}\r\n//                                                 style={{\r\n//                                                     fontFamily: '\"Poppins\", san-serif;',\r\n//                                                     fontStyle: 'normal',\r\n//                                                     fontWeight: 600,\r\n//                                                     overflow: 'hidden',\r\n//                                                     whiteSpace: 'nowrap',\r\n//                                                     textOverflow: 'ellipsis',\r\n//                                                     color: '#2C7FB2',\r\n//                                                     fontSize: 14\r\n//                                                 }}>\r\n//                                                 Select Image\r\n//                                             </Typography>\r\n//                                         </center>\r\n//                                     </Paper>\r\n//                                 </Grid>\r\n//                             </Grid>\r\n//                         }\r\n//                     </Paper>\r\n//                 </Grid>\r\n\r\n//                 {openmodal ? <PatientReportImages show={openmodal} data={modalData} handleClosemodal={() => setopenmodal(false)} /> : null}\r\n//                 {opendeletemodal ? <DeletePatientReports show={opendeletemodal} data={deletemodalData} handleCloseDeletemodal={() => setopendeletemodal(false)} /> : null}\r\n\r\n//             </Grid> {/* main grid */}\r\n\r\n//         </div >\r\n//     );\r\n// }\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         flexGrow: 1,\r\n//         backgroundColor: 'white',\r\n//     },\r\n//     title: {\r\n//         flexGrow: 1,\r\n//     },\r\n//     hide: {\r\n//         display: 'none',\r\n//     },\r\n//     content: {\r\n//         flexGrow: 1,\r\n//         padding: theme.spacing(2),\r\n//     },\r\n//     paper: {\r\n//         padding: theme.spacing(1),\r\n//         color: '#78B088',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 800,\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//     },\r\n//     grid: {\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//         marginTop: 70,\r\n//         marginLeft: 25,\r\n//         marginRight: 1\r\n//     },\r\n//     gridShift: {\r\n//         marginLeft: drawerWidth,\r\n//         width: `calc(100% - ${drawerWidth}px)`,\r\n//         transition: theme.transitions.create(['width', 'margin'], {\r\n//             easing: theme.transitions.easing.sharp,\r\n//             duration: theme.transitions.duration.enteringScreen,\r\n//         }),\r\n//     },\r\n//     griditem: {\r\n//         color: '#2C7FB2',\r\n//     },\r\n//     paperServices: {\r\n//         padding: theme.spacing(1),\r\n//         color: '#00318B',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 800,\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//         textAlign: 'center',\r\n\r\n//     },\r\n//     gridServices: {\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 800,\r\n//         textAlign: 'center',\r\n\r\n//     },\r\n//     search: {\r\n//         position: 'relative',\r\n//         borderRadius: theme.shape.borderRadius,\r\n//         backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n//         '&:hover': {\r\n//             backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n//         },\r\n//         marginRight: theme.spacing(2),\r\n//         marginLeft: 0,\r\n//         width: '100%',\r\n//         [theme.breakpoints.up('sm')]: {\r\n//             marginLeft: theme.spacing(3),\r\n//             width: 'auto',\r\n//         },\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 800,\r\n\r\n//     },\r\n//     searchIcon: {\r\n//         paddingTop: 10,\r\n//         position: 'absolute',\r\n//         pointerEvents: 'none',\r\n//         display: 'flex',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center',\r\n//         color: \"gray\",\r\n//     },\r\n//     inputRoot: {\r\n//         color: 'inherit',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 200,\r\n//     },\r\n//     inputInput: {\r\n//         padding: theme.spacing(0, 0, 0, 0),\r\n//         // vertical padding + font size from searchIcon\r\n//         paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n//         transition: theme.transitions.create('width'),\r\n//         width: '100%',\r\n//         [theme.breakpoints.up('md')]: {\r\n//             width: '25ch',\r\n//             height: '30px'\r\n//         },\r\n//         border: '1px solid lightgray',\r\n//         borderRadius: 20,\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         color: '#707070',\r\n//         fontWeight: 400,\r\n//         fontSize: 11\r\n//     },\r\n\r\n//     btnview: {\r\n//         backgroundColor: '#2C7FB2 !important',\r\n//         color: '#fff !important',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         textAlign: 'center',\r\n//         borderRadius: 28,\r\n//         width: 130,\r\n//     },\r\n//     headingAddMedicine: {\r\n//         paddingTop: 20,\r\n//         alignItems: 'center',\r\n//         color: '#2C7FB2 !important',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//     },\r\n//     inputFields: {\r\n//         [`& fieldset`]: {\r\n//             borderRadius: 25,\r\n//         },\r\n//         width: 300,\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 200,\r\n//     },\r\n//     formControl: {\r\n//         margin: theme.spacing(1),\r\n//         minWidth: 180,\r\n//     },\r\n//     btnUpload: {\r\n//         backgroundColor: '#2C7FB2 !important',\r\n//         color: '#fff !important',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         textAlign: 'center',\r\n//         borderRadius: 28,\r\n//         width: 130,\r\n//     },\r\n//     btnSearch: {\r\n//         backgroundColor: '#2C7FB2 !important',\r\n//         color: '#fff !important',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         textAlign: 'center',\r\n//         borderRadius: 28,\r\n//         width: 130,\r\n//     },\r\n//     groupreports: {\r\n//         height: 110,\r\n//         width: 100,\r\n//         borderRadius: 10,\r\n//     },\r\n// }));\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, InputBase, Divider, Grid, Paper, IconButton } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Patients_Data, Reports, getReportsByTitle } from '../Apis/Patient_Reports/index';\r\nimport { PatientReportImages } from './Patient_Reports_Image_Comp/index';\r\nimport { DeletePatientReports } from './Patient_Reports_Image_Comp/DeletePatient_Report';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\n\r\nconst getPatientSearchApi = 'http://13.233.217.107:8080/api/Web_SearchPatients';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nexport default function DoctorReports() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [patientData, setpatientData] = React.useState([]);\r\n    const [reportsData, setreportsData] = React.useState([]);\r\n    const [puserid, setpuserid] = React.useState('');\r\n    const [openmodal, setopenmodal] = React.useState(false);\r\n    const [modalData, setmodalData] = React.useState([]);\r\n    const [opendeletemodal, setopendeletemodal] = React.useState(false);\r\n    const [deletemodalData, setdeletemodalData] = React.useState([]);\r\n    const [patientsearch, setpatientsearch] = useState([]);\r\n\r\n    const fetchPatientData = async () => {\r\n        const patientInfo = await Patients_Data();\r\n        setpatientData(patientInfo);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPatientData();\r\n    }, []);\r\n\r\n    const handleRowClick = async (UserId) => {\r\n        setpuserid(UserId)\r\n        const report = await Reports(puserid);\r\n        setreportsData(report);\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        if (puserid == '') {\r\n            alert('Please Select Patient');\r\n            return;\r\n        }\r\n        navigate('/DoctorUploadReports', {\r\n            state: { detail: puserid }\r\n        });\r\n    }\r\n\r\n    const getImageData = async (item) => {\r\n        setmodalData(item);\r\n        setopenmodal(true);\r\n    }\r\n\r\n    const getDeleteModalData = async (item) => {\r\n        setdeletemodalData(item);\r\n        setopendeletemodal(true);\r\n    }\r\n\r\n    const searchPatient = async (patientsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const patientsInfo = await axios.post(getPatientSearchApi, { ClinicId: clinicid, Name: patientsearch });\r\n            setpatientData(patientsInfo?.data?.Patients);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Reports\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ borderRadius: 10, paddingTop: 20, paddingBottom: 20 }}>\r\n                        <Grid container xs={12}>\r\n                            <Grid item xs={6}>\r\n                                <center>\r\n                                    <SearchIcon className={classes.searchIcon} />\r\n                                    <InputBase\r\n                                        placeholder=\"Search by Name/Email\"\r\n                                        onChange={(e) => setpatientsearch(e.target.value)}\r\n                                        value={patientsearch}\r\n                                        classes={{\r\n                                            input: classes.inputInput,\r\n                                        }}\r\n                                        variant='outlined'\r\n                                        inputProps={{ 'aria-label': 'search' }}\r\n                                        style={{ borderRadius: 15 }}\r\n                                    > </InputBase>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={6} style={{ alignSelf: 'center', }}>\r\n                                <Button className={classes.btnSearch} onClick={() => searchPatient(patientsearch)} size=\"small\" style={{ float: 'right', fontSize: 12, textAlign: 'center' }}>Search</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        <DataGrid\r\n                            style={{ height: 270, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                            rows={patientData}\r\n                            rowHeight={30}\r\n                            columns={columns}\r\n                            columnWidth={10}\r\n                            pageSize={6}\r\n                            onRowClick={(newSelection) => handleRowClick(newSelection.row.UserId)}\r\n                        />\r\n\r\n                        <Divider />\r\n                        <Grid container xs={12} style={{ paddingTop: 20 }}>\r\n                            <Grid item xs={12}>\r\n                                <center> <Button className={classes.btnUpload} onClick={handleSubmit} size=\"small\" style={{ fontSize: 12 }}>Upload</Button> </center>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={8}>\r\n                    <Paper elevation={6} style={{ borderRadius: 10, padding: 20, marginLeft: 25, marginRight: 20 }}>\r\n                        <Typography variant=\"h6\" noWrap={true}\r\n                            style={{\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 600,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                color: '#2C7FB2',\r\n                                textDecoration: 'underline',\r\n                                fontSize: 18,\r\n                                textUnderlineOffset: '1px',\r\n                            }}>\r\n                            View Reports\r\n                        </Typography>\r\n\r\n                        {reportsData.length != 0 ?\r\n                            <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                {reportsData.map((item) => {\r\n                                    return (\r\n                                        <Grid item sm={2} >\r\n                                            <Paper elevation={3} className={classes.groupreports} >\r\n                                                <center>\r\n                                                    <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n                                                        <DeleteIcon size='small' onClick={() => getDeleteModalData(item)} />\r\n                                                    </IconButton>\r\n                                                    {item.ReportImage ? <img src={item.ReportImage} onClick={() => getImageData(item)} style={{ height: '120px', width: '100%', borderRadius: 10, cursor: 'pointer' }} onError={({ currentTarget }) => {\r\n                                                        currentTarget.onerror = null; // prevents looping\r\n                                                        currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                    }} /> : <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                                    }\r\n                                                </center>\r\n                                            </Paper>\r\n                                            <div style={{ marginTop: 10 }}>\r\n                                                <center>\r\n                                                    <Typography variant=\"h6\" noWrap={true}\r\n                                                        style={{\r\n                                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            overflow: 'hidden',\r\n                                                            whiteSpace: 'nowrap',\r\n                                                            textOverflow: 'ellipsis',\r\n                                                            color: '#2C7FB2',\r\n                                                            fontSize: 14\r\n                                                        }}>\r\n                                                        {item.ReportTitle}\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    )\r\n                                })}\r\n                            </Grid>\r\n                            :\r\n                            <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                <Grid item sm={2} >\r\n                                    <Paper elevation={3} className={classes.groupreports} >\r\n                                        <center>\r\n                                            <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                        </center>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true}\r\n                                                style={{\r\n                                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                    color: '#2C7FB2',\r\n                                                    fontSize: 14\r\n                                                }}>\r\n                                                Select Image\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {openmodal ? <PatientReportImages show={openmodal} data={modalData} handleClosemodal={() => setopenmodal(false)} /> : null}\r\n                {opendeletemodal ? <DeletePatientReports show={opendeletemodal} data={deletemodalData} handleCloseDeletemodal={() => setopendeletemodal(false)} /> : null}\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        color: '#707070',\r\n        fontWeight: 400,\r\n        fontSize: 11\r\n    },\r\n\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnSearch: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 110,\r\n        width: 100,\r\n        borderRadius: 10,\r\n    },\r\n}));\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControl, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CancleIcon from '@material-ui/icons/CancelRounded';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'NAME', minWidth: 100 },\r\n    {\r\n        id: 'mobile',\r\n        label: 'MOBILE NO',\r\n        minWidth: 50,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n];\r\n\r\nfunction createData(name, mobile,) {\r\n    return { name, mobile };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pallavi Kale', '8977889898', 'pallavi@gmail.com'),\r\n    createData('Rudrayani Tidake', '67848484848', 'rudra@gmail.com'),\r\n    createData('Kajal Bhagavat', '7833674758', 'kajal@gmail.com'),\r\n    createData('Shweta Wankhade', '7484949490', 'shweta@gmail.com'),\r\n    createData('Rutuja Pingle', '94848590332', 'rutuja@gmail.com'),\r\n    createData('Sharayu Shende', '8977889898', 'sharayu@gmail.com'),\r\n    createData('Gunjun Kale', '64748897867', 'gunjan@gmail.com'),\r\n    createData('Pallavi Kale', '8977889898', 'pallavi@gmail.com'),\r\n    createData('Rudrayani Tidake', '67848484848', 'rudra@gmail.com'),\r\n    createData('Kajal Bhagavat', '7833674758', 'kajal@gmail.com'),\r\n    createData('Shweta Wankhade', '7484949490', 'shweta@gmail.com'),\r\n    createData('Rutuja Pingle', '94848590332', 'rutuja@gmail.com'),\r\n    createData('Sharayu Shende', '8977889898', 'sharayu@gmail.com'),\r\n    createData('Gunjun Kale', '64748897867', 'gunjan@gmail.com'),\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        \r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n       \r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnSearch: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 50\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n\r\n    textField: {\r\n        borderRadius: 5, \r\n        border: '1px solid gray',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontSize: 12,\r\n        fontWeight: 400,\r\n    }\r\n}));\r\n\r\n\r\nexport default function DoctorAddFacilities() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        Add Facilities\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} style={{ paddingTop: 30 }}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ borderRadius: 10, paddingTop: 20, paddingBottom: 20 }}>\r\n                        \r\n                    <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <center> <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    label=\"Search by Name/Email\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n\r\n                                    }}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase> </center>\r\n                            </Grid>\r\n                          \r\n                            <Grid item xs={3} style={{alignSelf: 'center'}}>\r\n                               <Button  className={classes.btnview} size=\"small\" style={{ float:'right', fontSize: 11, textAlign: 'center' }}>Search</Button> \r\n                            </Grid>\r\n                            <Grid item xs={3} style={{alignSelf: 'center',}}>\r\n                               <Button  className={classes.btnview} size=\"small\" style={{float:'right',  fontSize: 11, textAlign: 'center' }}>View Facility</Button> \r\n                            </Grid>\r\n                           \r\n\r\n                        </Grid>\r\n                        {/* <SearchIcon className={classes.searchIcon} />\r\n                        <InputBase\r\n                            label=\"Search by Name/Email\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n\r\n                            }}\r\n                            variant='outlined'\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            style={{ borderRadius: 15 }}\r\n                        > </InputBase>\r\n                        <Button className={classes.btnview} size=\"small\" style={{ fontSize: 12, marginLeft: 15 }}>Search</Button>\r\n                        <Button className={classes.btnview} size=\"small\" style={{ fontSize: 12, marginLeft: 15 }}>View Facility</Button> */}\r\n\r\n                        {/* <Grid item xs={12} sm={12}>\r\n                            <Paper className={classes.paper}> */}\r\n                        <TableContainer style={{ paddingTop: 20 }}>\r\n                            <Table stickyHeader aria-label=\"sticky table\" >\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {columns.map((column) => (\r\n                                            <TableCell\r\n                                                size=\"small\"\r\n                                                key={column.id}\r\n                                                align={column.align}\r\n                                                style={{\r\n                                                    minWidth: column.minWidth,\r\n                                                    backgroundColor: '#78B088',\r\n                                                    color: '#fff',\r\n                                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                    fontSize: 12,\r\n                                                }}\r\n                                            >\r\n                                                {column.label}\r\n\r\n                                            </TableCell>\r\n\r\n                                        ))}\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody >\r\n                                    {rows\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row) => {\r\n                                            return (\r\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                    {columns.map((column) => {\r\n                                                        const value = row[column.id];\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align={column.align} size=\"small\" style={{\r\n                                                                color: '#2C7FB2',\r\n                                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 200,\r\n                                                                overflow: 'hidden',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                justifyContent: 'center'\r\n                                                            }}>\r\n                                                                {column.format && typeof value === 'number'\r\n                                                                    ? column.format(value)\r\n                                                                    : value}\r\n\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                        <Divider />\r\n                        <Grid container xs={12} style={{ paddingTop: 75 }}>\r\n                            <Grid item xs={6}>\r\n                                <center> <Button className={classes.btnUpload} size=\"small\" style={{ fontSize: 12 }}>Upload</Button> </center>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <center>   <Button size=\"small\" className={classes.btnSearch} style={{ fontSize: 12 }}>View Report</Button> </center>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {/* Start Facility Grid */}\r\n                <Grid item xs={12} sm={5} style={{ paddingTop: 30, marginLeft: 130, marginRight: 40 }}>\r\n                    {/* Start Facility Paper */}\r\n                    <Paper elevation={6} style={{ paddingLeft: 20, borderRadius: 10, paddingTop: 20, paddingBottom: 20 }}>\r\n                        <Typography variant=\"h6\" noWrap={true}\r\n                            style={{\r\n                                fontFamily: '\"Poppins\", san-serif;',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 500,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                color: '#00318B',\r\n\r\n                            }}>\r\n                            Facility\r\n                        </Typography>\r\n\r\n\r\n                        <Grid container spacing={2} style={{ paddingTop: 20 }}>\r\n                            <Grid item sm={6} >\r\n                                <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>Sonography</Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>1000 Rs</Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>UltraSound</Typography>\r\n\r\n                            </Grid>\r\n                            <Grid item sm={6} style={{ marginTop: '-40px', align: 'right' }}>\r\n                                <Paper elevation={3} className={classes.groupreports}>\r\n                                    Sonography\r\n                                    <div style={{ marginTop: 55 }}>\r\n                                        <EditIcon style={{ backgroundColor: '#2C7FB2', color: '#fff', borderRadius: 15, marginLeft: 5, padding: 4 }} />\r\n                                        <CancleIcon style={{ backgroundColor: '#2C7FB2', color: '#fff', borderRadius: 15, marginLeft: 10, padding: 4 }} />\r\n\r\n                                    </div>\r\n                                </Paper>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Divider style={{ marginTop: 20, border: '1px solid #F0F0F0' }} />\r\n\r\n                        {/* Start Edit Container Grid */}\r\n                        <Grid container spacing={2} style={{ paddingTop: 30, paddingRight: 20 }}>\r\n                            <Grid item sm={12} >\r\n                                <Typography style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#00318B',\r\n\r\n                                }}>\r\n                                    Edit Facility\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item sm={6} >\r\n                                <input className={classes.textField} name=\"Name\" label=\"Name\" style={{ width: 180 }}/>\r\n                            </Grid>\r\n                            <Grid item sm={3} >\r\n                                <select className={classes.textField} name=\"Category\" id=\"Category\" >\r\n                                    <option value=\"sonography\">Sonography</option>\r\n                                    <option value=\"colposcopy\">Colposcopy</option>\r\n                                    <option value=\"bloodtest\">Blood Test</option>\r\n                                    <option value=\"ECG\">ECG</option>\r\n                                </select>\r\n                            </Grid>\r\n                            <Grid item sm={3} >\r\n                                <input className={classes.textField} name=\"Discount\" label=\"Discount\" style={{ width: 110 }} />\r\n                            </Grid>\r\n                            <Grid item sm={6} >\r\n                                <textarea className={classes.textField} id=\"Description\" name=\"Description\" rows=\"1\" label=\"Description\" style={{ width: 180 }}>\r\n                                </textarea>\r\n                            </Grid>\r\n                            <Grid item sm={6} >\r\n                                <input className={classes.textField} name=\"Service Cost\" label=\"Service Cost\" style={{ width: 230 }} />\r\n                            </Grid>\r\n\r\n                            {/* End Edit Facitlity */}\r\n                        </Grid>\r\n                        <Divider style={{ border: '1px solid #F0F0F0', marginTop: 5 }} />\r\n                        {/* Start Button Container */}\r\n                        <Grid container style={{ paddingTop: 15 }}>\r\n                            <Grid item xs={6} >\r\n                                <center> <Button className={classes.btnUpload} size=\"small\" style={{ fontSize: 12 }}>Cancle</Button> </center>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <center><Button className={classes.btnUpload} size=\"small\" style={{ fontSize: 12 }}>Save</Button></center>\r\n                            </Grid>\r\n\r\n                            {/* End Button Container */}\r\n                        </Grid>\r\n                        {/* End Facitlity Paper */}\r\n                    </Paper>\r\n                    {/* End Facilties */}\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Container, FormControl, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { Upload_Reports } from '../Apis/Patient_Reports/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        fontSize: 11\r\n    },\r\n\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n    groupreports: {\r\n        height: 110,\r\n        width: 100,\r\n        borderRadius: 10,\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 50,\r\n        fontSize: '12px'\r\n    },\r\n    textField: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    btnDelete: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 100,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n\r\n}));\r\n\r\n\r\nfunction DoctorUploadReports() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [reportdetails, setreportdetails] = useState(location.state.detail);\r\n    const [base64, setbase64] = useState('');\r\n    const [title, settitle] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    var date = new Date();\r\n    var today = date.toISOString().split('T')[0];\r\n\r\n    let base64String = \"\";\r\n\r\n    // const handleSubmit = async () => {\r\n    //     navigate('/DoctorReports');\r\n    // }\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    const handlesGoBack = () => {\r\n        navigate(\"/DoctorReports\");\r\n    };\r\n\r\n    const convertToBase64 = () => {\r\n        var file = document.querySelector('input[type=file]')['files'][0];\r\n        console.log(file);\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            base64String = reader.result.replace(\"data:\", \"\")\r\n                .replace(/^.+,/, \"\");\r\n\r\n            setbase64('data:image/png;base64,' + base64String)\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    let imageData = useSelector(state => state.addPatient_Reports)\r\n\r\n    const handleAddReports = async () => {\r\n        var data = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n        const obj = {\r\n            'id': Math.floor(Math.random() * 100 + 20),\r\n            'UserId': reportdetails,\r\n            'ClinicId': clinicid,\r\n            'DoctorId': doctorid,\r\n            'base64image': base64,\r\n            'Date': today,\r\n            'ReportTitle': title\r\n        }\r\n        dispatch({ type: 'ADD_REPORTS', payload: obj });\r\n    }\r\n\r\n    const handleUploadReports = async () => {\r\n        const requestReports = await Upload_Reports(imageData);\r\n        let parse = JSON.parse(requestReports);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            dispatch({ type: 'RESET_REPORTS_ITEM' });\r\n            navigate('/DoctorReports')\r\n        }\r\n\r\n    }\r\n    const handlesContinue = () => {\r\n        if (base64 == '') {\r\n            alert('Please select request from list');\r\n            return;\r\n        }\r\n        if (title == '') {\r\n            alert(\"Please select the title\");\r\n        }\r\n        else { handleAddReports(); }\r\n    };\r\n\r\n\r\n    const openImageInNewTab = async (data) => {\r\n        var image = new Image();\r\n        image.src = data;\r\n\r\n        var w = window.open(\"\");\r\n        w.document.write(image.outerHTML);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Upload Reports\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 20 }}>\r\n                    <Grid item xs={4}>\r\n                        <Paper elevation={6} className={classes.paper} style={{ marginLeft: 20, marginRight: 20 }}>\r\n                            <center>\r\n                                <Typography className={classes.headingAddMedicine} variant=\"h6\" noWrap={true} >\r\n                                    Upload Reports\r\n                                </Typography>\r\n                            </center>\r\n\r\n                            <div style={{ paddingTop: 20 }}>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                        <TextField className={classes.textField} onChange={(e) => settitle(e.target.value)} id=\"outlined-basic\" label=\"Title\" variant=\"outlined\" size=\"small\" />\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                        <TextField className={classes.textField} onChange={convertToBase64} id=\"outlined-basic\" type='file' variant=\"outlined\" size=\"small\" />\r\n                                    </FormControl>\r\n\r\n                                </div>\r\n                                <div style={{ paddingTop: 100 }}>\r\n                                    <Divider style={{ border: ' 1px solid #F0F0F0' }} />\r\n                                    <Grid container spacing={2} style={{ paddingTop: 10, paddingBottom: 10 }}>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <center> <Button className={classes.btnCancle} onClick={handlesGoBack} >Cancel</Button> </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <center>\r\n                                                <Button onClick={handlesContinue} className={classes.btnAdd}>Add</Button>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={8} spacing={2} >\r\n                        <Paper elevation={6} style={{ padding: 20, marginLeft: 25, marginRight: 20, height: 370, overflowY: 'scroll' }}>\r\n                            <Grid item xs={12}>\r\n                                {imageData.length != 0 ?\r\n                                    <Grid container xs={12} spacing={2} style={{}}>\r\n                                        {imageData.map((item) => {\r\n                                            return (\r\n                                                <Grid item sm={2} >\r\n                                                    <Paper elevation={3} className={classes.groupreports} style={{marginBottom: 45}}>\r\n                                                        <center>\r\n                                                            {item.base64image ? <img src={item.base64image} onClick={() => openImageInNewTab(item.base64image)} style={{ height: '120px', width: '100%', borderRadius: 10, cursor: 'pointer' }} onError={({ currentTarget }) => {\r\n                                                                currentTarget.onerror = null; // prevents looping\r\n                                                                currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                            }} /> : <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                                            }\r\n                                                        </center>\r\n                                                        <center><Button className={classes.btnDelete} onClick={() => dispatch({ type: 'DELETE_REPORTS', payload: item })}>Delete</Button></center>\r\n                                                    </Paper>\r\n                                                </Grid>\r\n                                            )\r\n                                        })}\r\n\r\n                                    </Grid>\r\n                                    :\r\n                                    <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                        <Grid item sm={2} >\r\n                                            <Paper elevation={3} className={classes.groupreports} >\r\n                                                <center>\r\n                                                    <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                                </center>\r\n                                                <center>\r\n                                                    <Typography variant=\"h6\" noWrap={true}\r\n                                                        style={{\r\n                                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            overflow: 'hidden',\r\n                                                            whiteSpace: 'nowrap',\r\n                                                            textOverflow: 'ellipsis',\r\n                                                            color: '#2C7FB2',\r\n                                                            fontSize: 14\r\n                                                        }}>\r\n                                                        Select Image\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                }\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <center>  <Button className={classes.btnUpload} onClick={handleUploadReports}>Upload</Button> </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default connect()(DoctorUploadReports)","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n\r\nexport const Doctor_Category = async () => {\r\n    const category = await axios.post(ip + 'GetDoctorsCategory');\r\n    return category?.data?.DoctorsCategory;\r\n}\r\n\r\nexport const Times = async () => {\r\n    const times = await axios.post(ip + 'GetSlots');\r\n    return times?.data?.Slots;\r\n}\r\n\r\nexport const Add_Staff = async (obj) => {\r\n    try {\r\n        const registerStaff = await axios.post(ip + 'Web_AddStaff', obj);\r\n        return JSON.stringify(registerStaff?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\nexport const EditStaffdata = async (obj) => {\r\n    try {\r\n        const editstaffrequest = await axios.patch(ip + 'Web_EditStaff', obj)\r\n        return JSON.stringify(editstaffrequest?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\nexport const EditClinicdata = async (obje) => {\r\n    try {\r\n        const editclinicrequest = await axios.patch(ip + 'Web_EditClinic', obje)\r\n        return JSON.stringify(editclinicrequest?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const EditDoctordata = async (obje) => {\r\n    try {\r\n        const editdoctorsrequest = await axios.patch(ip + 'Web_EditDoctor', obje)\r\n        return JSON.stringify(editdoctorsrequest?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\nexport const Delete_Staff_Details_by_id = async (UserId, Role) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'Web_DeleteStaff', { UserId: UserId, Role: Role });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControl, Radio, InputLabel, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Add_Staff } from '../Apis/Clinic_Staff/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'NAME', minWidth: 100 },\r\n    {\r\n        id: 'mobile',\r\n        label: 'MOBILE NO',\r\n        minWidth: 50,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n];\r\n\r\nfunction createData(name, mobile,) {\r\n    return { name, mobile };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pallavi Kale', '8977889898', 'pallavi@gmail.com'),\r\n    createData('Rudrayani Tidake', '67848484848', 'rudra@gmail.com'),\r\n    createData('Kajal Bhagavat', '7833674758', 'kajal@gmail.com'),\r\n    createData('Shweta Wankhade', '7484949490', 'shweta@gmail.com'),\r\n    createData('Rutuja Pingle', '94848590332', 'rutuja@gmail.com'),\r\n    createData('Sharayu Shende', '8977889898', 'sharayu@gmail.com'),\r\n    createData('Gunjun Kale', '64748897867', 'gunjan@gmail.com'),\r\n    createData('Pallavi Kale', '8977889898', 'pallavi@gmail.com'),\r\n    createData('Rudrayani Tidake', '67848484848', 'rudra@gmail.com'),\r\n    createData('Kajal Bhagavat', '7833674758', 'kajal@gmail.com'),\r\n    createData('Shweta Wankhade', '7484949490', 'shweta@gmail.com'),\r\n    createData('Rutuja Pingle', '94848590332', 'rutuja@gmail.com'),\r\n    createData('Sharayu Shende', '8977889898', 'sharayu@gmail.com'),\r\n    createData('Gunjun Kale', '64748897867', 'gunjan@gmail.com'),\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        fontSize: 11\r\n    },\r\n\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 120,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 20\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 10\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function DoctorAddStaff() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Clinic Staff\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            label=\"Search by Name/Email\"\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>View Profile</Button>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                            {/* <Grid item xs={12} sm={12}>\r\n                            <Paper className={classes.paper}> */}\r\n                            <TableContainer style={{ paddingTop: 20 }} >\r\n                                <Table className={classes.tbl} size=\"small\" stickyHeader aria-label=\"sticky table\" style={{ borderRadius: 5 }}>\r\n                                    <TableHead style={{}}>\r\n                                        <TableRow style={{ borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\r\n                                            {columns.map((column) => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{\r\n                                                        minWidth: column.minWidth,\r\n                                                        backgroundColor: '#78B088',\r\n                                                        color: '#fff',\r\n                                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                                        fontStyle: 'normal',\r\n                                                        fontWeight: 600,\r\n                                                        overflow: 'hidden',\r\n                                                        whiteSpace: 'nowrap',\r\n                                                        textOverflow: 'ellipsis',\r\n                                                    }}\r\n\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody >\r\n                                        {rows\r\n                                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            .map((row) => {\r\n                                                return (\r\n                                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                        {columns.map((column) => {\r\n                                                            const value = row[column.id];\r\n                                                            return (\r\n                                                                <TableCell key={column.id} align={column.align} style={{\r\n                                                                    color: '#2C7FB2',\r\n                                                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                                                    fontStyle: 'normal',\r\n                                                                    fontWeight: 600,\r\n                                                                    overflow: 'hidden',\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    textOverflow: 'ellipsis',\r\n                                                                    justifyContent: 'center',\r\n                                                                    fontSize: 12\r\n                                                                }}>\r\n                                                                    {column.format && typeof value === 'number'\r\n                                                                        ? column.format(value)\r\n                                                                        : value}\r\n\r\n                                                                </TableCell>\r\n                                                            );\r\n                                                        })}\r\n\r\n                                                    </TableRow>\r\n                                                );\r\n                                            })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 15, 25]}\r\n                                component=\"div\"\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            />\r\n                            {/* </Paper> */}\r\n                            <Divider style={{ padding: '5px', borderTop: '1px solid #F0F0F0', backgroundColor: '#fff', paddingBottom: 10 }} />\r\n\r\n                            <Typography variant=\"h7\" noWrap={true} style={{\r\n                                fontFamily: '\"Poppins\", san-serif;',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 600,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                color: '#00318B',\r\n                                marginLeft: 4,\r\n\r\n                            }} >\r\n                                Profile Details\r\n                            </Typography>\r\n\r\n                            <Grid container spacing={3} style={{ paddingTop: theme.spacing(2) }}>\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <Paper elevation={0} style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <center> <Avatar style={{ align: 'center', height: '50px', width: '50px' }}><AccountCircle /></Avatar> </center>\r\n                                        <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                        <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray'\r\n                                        }}\r\n                                        >\r\n                                            Pallavi Kale\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={8}>\r\n                                    <Paper elevation={0} style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 400,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: 'gray',\r\n                                    }}>\r\n                                        Location: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            Wakad, Pune\r\n                                        </Typography>\r\n                                        <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                        Contact: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            8790332435\r\n                                        </Typography>\r\n                                        <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                        Email Id: <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            pallavikale@gmail.com\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} xs={2}>\r\n                        <Paper elevation={0}></Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ paddingBottom: 0 }}>\r\n                            <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                fontFamily: '\"Poppins\", san-serif;',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 400,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                padding: theme.spacing(2),\r\n                                color: '#00318B',\r\n                                fontSize: 16\r\n                            }}\r\n                            >\r\n                                Add Staff\r\n                            </Typography>\r\n\r\n\r\n                            <div style={{ paddingTop: 10 }}>\r\n\r\n                                <center>\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Mobile Number\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField className={classes.textField} multiline\r\n                                        rows={2}\r\n                                        rowsMax={2} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                    />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField className={classes.textField} type=\"password\" id=\"outlined-basic\" size=\"small\" label=\"Password\" variant=\"outlined\" />\r\n                                </center>\r\n                            </div>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ paddingLeft: 10 }}>Doctor\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Doctor'}\r\n                                            color='primary'\r\n                                            onChange={handleChange}\r\n                                            // onChange={roleChange}\r\n                                            value=\"Doctor\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'Doctor' }}\r\n\r\n                                        /></InputLabel>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={4}>\r\n\r\n                                    <InputLabel htmlFor=\"outlined-age-native-simple\">Receptionist\r\n\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Receptionist'}\r\n                                            onChange={handleChange}\r\n                                            // onChange={roleChange}\r\n                                            value=\"Receptionist\"\r\n                                            color='primary'\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'Receptionist' }}\r\n                                        /></InputLabel>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <div>\r\n                                <center>   <Button className={classes.btnUpload} >Register</Button> </center>\r\n                            </div>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const App_Channels = async () => {\r\n    const appchannelInfo = await axios.post(ip + 'GetAppointmentChannels');\r\n    return appchannelInfo?.data?.AppointmentChannel;\r\n}\r\n\r\nexport const App_Types = async () => {\r\n    const apptypeInfo = await axios.post(ip + 'GetAppointmentTypes');\r\n    return apptypeInfo?.data?.AppointmentType;\r\n}\r\n\r\nexport const Time = async () => {\r\n    const timingInfo = await axios.post(ip + 'GetSlots');\r\n    return timingInfo?.data?.Slots;\r\n}\r\n\r\n\r\nexport const Doctors = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    const doctorInfo = await axios.post(ip + 'GetAllDoctorsUsingIdForWeb', { ClinicId: clinicid })\r\n    return doctorInfo?.data?.Data;\r\n}\r\n\r\n\r\nexport const Book_Appointment = async (obj) => {\r\n    try {\r\n        const addAppointment = await axios.post(ip + 'Web_BookAppointment', obj);\r\n        return JSON.stringify(addAppointment?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Note_for_Doctor = async () => {\r\n    try {\r\n        const notefordoctor = await axios.post(ip + 'GetNoteForDoctor');\r\n        return notefordoctor?.data?.NoteForDoctor;\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\nexport const HVDoctors = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    const doctorInfo = await axios.post(ip + 'Web_GetHomeVisitorDoctorsforClinic', { ClinicId: clinicid })\r\n    return doctorInfo?.data?.HomeVisitors;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FormControl, FormControlLabel, Switch, Select, TextField, Typography, Button, Avatar, InputBase, Divider, ListItem, ListItemText, Grid, Paper } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Time, App_Channels, App_Types, Doctors, Book_Appointment, Note_for_Doctor } from '../Apis/Book_Appointment/index';\r\n\r\nconst getClinicPatients = 'http://13.233.217.107:8080/api/Web_GetPatients';\r\nconst getPatientDetails = 'http://13.233.217.107:8080/api/ShowPatientDetailUsingId';\r\nconst getDoctor = 'http://13.233.217.107:8080/api/GetAllDoctorsUsingIdForWeb';\r\nconst getMedicalHistory = 'http://13.233.217.107:8080/api/MedicalHistoryforDoctor';\r\nconst bookAppointment = 'http://13.233.217.107:8080/api/AddAppointment';\r\nconst getPatientSearchApi = 'http://13.233.217.107:8080/api/Web_SearchPatients';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nexport default function DoctorBookAppointment() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [patientData, setpatientData] = useState([]);\r\n    const [patientDetails, setpatientDetails] = useState('');\r\n    const [doctorData, setdoctorData] = useState([]);\r\n    const [appChannel, setappChannel] = useState([]);\r\n    const [doctor, setDoctor] = React.useState('');\r\n    const [appselected, setAppSelected] = React.useState(\"\");\r\n    const [time, settime] = useState([]);\r\n    const [appType, setappType] = useState([]);\r\n    const [timeselected, setTimeSelected] = React.useState(\"\");\r\n    const [apptypeselected, setapptypeSelected] = useState('');\r\n    const [appchannelselected, setappchannelSelected] = useState('');\r\n    const [walkIn, setwalkIn] = useState(false);\r\n    const [medicalHistory, setmedicalHistory] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [reason, setReason] = useState('');\r\n    const [doctorNote, setdoctorNote] = useState('');\r\n    const [bp, setBp] = useState('');\r\n    const [temp, setTemp] = useState('');\r\n    const [height, setHeight] = useState('');\r\n    const [weight, setWeight] = useState('');\r\n    const [plus, setPlus] = useState('');\r\n    const [spo2, setSpo2] = useState('');\r\n    const [appDate, setappDate] = useState('');\r\n    const [notefordoctor, setnotefordoctor] = useState([]);\r\n    const [patientsearch, setpatientsearch] = useState([]);\r\n\r\n    const fetchclinicpatientsdata = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const clinicpatientInfo = await axios.post(getClinicPatients, { ClinicId: clinicid })\r\n        setpatientData(clinicpatientInfo?.data?.Patients);\r\n    }\r\n\r\n    const fetchdoctorsdata = async () => {\r\n        const doctorInfo = await Doctors()\r\n        setdoctorData(doctorInfo);\r\n    }\r\n\r\n    const fetchappchannels = async () => {\r\n        const appchannelInfo = await App_Channels()\r\n        setappChannel(appchannelInfo);\r\n    }\r\n\r\n    const fetchapptypes = async () => {\r\n        const apptypeInfo = await App_Types()\r\n        setappType(apptypeInfo);\r\n    }\r\n\r\n    const fetchtimings = async () => {\r\n        const timingInfo = await Time()\r\n        settime(timingInfo);\r\n    }\r\n\r\n    const fetchNotefordoctor = async () => {\r\n        const doctorsNoteInfo = await Note_for_Doctor()\r\n        setnotefordoctor(doctorsNoteInfo);\r\n    }\r\n\r\n    const searchPatient = async (patientsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const patientsInfo = await axios.post(getPatientSearchApi, { ClinicId: clinicid, Name: patientsearch });\r\n            setpatientData(patientsInfo?.data?.Patients);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    const fetchmedicalhistory = async (UserId) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const medicalhistoryInfo = await axios.post(getMedicalHistory, { ClinicId: clinicid, UserId: UserId })\r\n            setmedicalHistory(medicalhistoryInfo?.data?.Appointment);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchclinicpatientsdata();\r\n        fetchdoctorsdata();\r\n        fetchappchannels();\r\n        fetchapptypes();\r\n        fetchtimings();\r\n        fetchNotefordoctor();\r\n\r\n    }, [])\r\n\r\n    const handleRowClick = async (UserId) => {\r\n        const patientDetailedInfo = await axios.post(getPatientDetails, { UserId: UserId });\r\n        setpatientDetails(patientDetailedInfo?.data?.PatientDetails);\r\n        fetchmedicalhistory(UserId);\r\n    }\r\n\r\n    const handleBookAppointment = async () => {\r\n        const currentTime = new Date();\r\n        let systemTime = currentTime.toTimeString();\r\n        let tdate = currentTime.toISOString().split('T')[0];\r\n\r\n        if (patientDetails == '') {\r\n            alert(\"Please select patient from list\")\r\n            return;\r\n        }\r\n        else if (doctor.trim() == '') {\r\n            alert(\"Please select Doctor\")\r\n            return;\r\n        }\r\n        else if (doctor.trim() == '') {\r\n            alert(\"Please select Doctor\")\r\n            return;\r\n        }\r\n        else if (appchannelselected.trim() == '') {\r\n            alert(\"Please select appointment Channel\")\r\n            return;\r\n        }\r\n        else if (title.trim() == '') {\r\n            alert(\"Please enter title\")\r\n            return;\r\n        }\r\n        else if (appDate < tdate) {\r\n            alert(\"You cannot set appointment for previous date\");\r\n            return\r\n        }\r\n        else if (appDate <= tdate) {\r\n            if (timeselected < systemTime) {\r\n                alert(`You can't not set Appointment at ${timeselected}`);\r\n                return\r\n            }\r\n        }\r\n        else if (apptypeselected.trim() == '') {\r\n            alert(\"Please select appointment type\");\r\n            return\r\n        }\r\n\r\n        var data = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n        const now = new Date();\r\n        const date = now.toISOString().split('T')[0];\r\n\r\n        const obj = {\r\n            Title: title,\r\n            UserId: patientDetails.UserId,\r\n            FirstName: patientDetails.FirstName,\r\n            LastName: patientDetails.LastName,\r\n            DoctorId: doctor,\r\n            ClinicId: clinicid,\r\n            AppointmentDate: appDate,\r\n            BookedDate: date,\r\n            AppointmentTime: timeselected,\r\n            AppointmentType: apptypeselected,\r\n            AppointmentChannel: appchannelselected,\r\n            AppointmentStatus: 'Booked',\r\n            Patient_BP: bp,\r\n            Patient_Weight: weight,\r\n            Patient_Height: height,\r\n            Patient_SPO2: spo2,\r\n            Patient_Plus: plus,\r\n            Patient_Temp: temp,\r\n            ShortNote: doctorNote,\r\n            AppointmentReason: reason,\r\n            createdBy: doctorid,\r\n            updatedBy: doctorid,\r\n        }\r\n        const addAppointment = await Book_Appointment(obj);\r\n\r\n        let parse = JSON.parse(addAppointment);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    // function disableBtn() {\r\n    //     document.getElementById(\"mybtn\").hidden = true;\r\n    // }\r\n    // function enableBtn() {\r\n    //     document.getElementById(\"mybtn\").hidden = false;\r\n    // }\r\n\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    function renderRow(props) {\r\n        const { index, style } = props;\r\n\r\n        return (\r\n            // <List>\r\n            <ListItem button style={style} key={index} >\r\n                <ListItem >\r\n                    <ListItemText\r\n                        style={{ borderBottom: '1px solid #F0F0F0' }}\r\n                        primary={`Title : Regular Checkup`}\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component={'span'}\r\n                                    variant={\"body2\"}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    {`Date : 2021-09-11`}\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Divider />\r\n            </ListItem>\r\n            // </List>\r\n        );\r\n    }\r\n\r\n    renderRow.propTypes = {\r\n        index: PropTypes.number.isRequired,\r\n        style: PropTypes.object.isRequired,\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Book Appointment\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: '-10px' }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            placeholder=\"Search by Name\"\r\n\r\n                                            onChange={(e) => setpatientsearch(e.target.value)}\r\n                                            value={patientsearch}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15, }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} onClick={() => searchPatient(patientsearch)} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>View Profile</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <DataGrid\r\n                                style={{ height: 250, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                                rows={patientData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={5}\r\n                                onRowClick={(newSelection) => {\r\n                                    handleRowClick(newSelection.row.UserId);\r\n                                }}\r\n                            />\r\n\r\n                            <Divider style={{ padding: '5px', borderTop: '1px solid #F0F0F0', backgroundColor: '#fff', paddingBottom: 10 }} />\r\n\r\n                            <Typography variant=\"h7\" noWrap={true} style={{\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 600,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                color: '#2C7FB2',\r\n                                textDecoration: 'underline',\r\n                                textUnderlineOffset: '1px',\r\n                                textDecorationThickness: '1px',\r\n                                marginLeft: 4\r\n\r\n                            }} >\r\n                                Profile Details\r\n                            </Typography>\r\n\r\n                            <Grid container spacing={3} style={{ paddingTop: theme.spacing(2) }}>\r\n                                <Grid container item xs={12} sm={4} >\r\n                                    <Grid itexm xs={12} >\r\n                                        <center>\r\n                                            {patientDetails.ProfileImage ?\r\n                                                <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} src={patientDetails.ProfileImage} /> :\r\n                                                <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} />}\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Divider style={{ paddingTop: '15px', backgroundColor: '#fff' }} />\r\n                                    <Grid itexm xs={12} style={{ paddingTop: 10 }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h7\" noWrap={true} style={{\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 400,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: 'gray',\r\n                                            }}\r\n                                            >\r\n                                                {patientDetails.FirstName} {patientDetails.LastName}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={8}>\r\n                                    <Paper elevation={0} style={{\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 400,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: 'gray',\r\n                                    }}>\r\n                                        Location: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            {patientDetails.Address !== null ? patientDetails.Address : 'Not Provided'} {patientDetails.City} {patientDetails.State} {patientDetails.Pincode} {patientDetails.Country}\r\n                                        </Typography>\r\n                                        <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                        Contact: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            {patientDetails.MobileNo !== null ? patientDetails.MobileNo : 'Not Provided'}\r\n                                        </Typography>\r\n                                        <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                        Email Id: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            {patientDetails.Email != '' ? patientDetails.Email : 'Not Provided'}\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20, padding: theme.spacing(2.5) }}>\r\n                            <Grid container spacing={3} style={{ backgroundColor: '#fff', borderBlockEnd: '1px solid #F0F0F0' }}>\r\n                                <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                    <Typography variant=\"h7\" noWrap={true} style={{\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        padding: theme.spacing(2),\r\n                                        color: '#2C7FB2',\r\n                                        textDecoration: 'underline',\r\n                                        textUnderlineOffset: '1px',\r\n                                        textDecorationThickness: '1px'\r\n                                    }}\r\n                                    >\r\n                                        Details\r\n                                    </Typography>\r\n\r\n                                    <div style={{ paddingTop: 10 }}>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                                            <Select\r\n                                                className={classes.textField}\r\n                                                native\r\n                                                value={doctor}\r\n                                                onChange={(e) => setDoctor(e.target.value)}\r\n                                                label=\"doctor\"\r\n                                                inputProps={{\r\n                                                    name: 'doctor',\r\n                                                    id: 'outlined-doctor-native-simple',\r\n                                                }}\r\n                                                style={{ width: '148%', position: 'relative', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Select Doctor</option>\r\n                                                {doctorData.map(v => (<option value={v.DoctorId}>Dr. {v.FirstName} {v.LastName}</option>))}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                        <Divider style={{ opacity: 0 }} />\r\n                                        {!walkIn ? <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                                            <Select\r\n                                                className={classes.textField}\r\n                                                native\r\n                                                value={appchannelselected}\r\n                                                onChange={(e) => setappchannelSelected(e.target.value)}\r\n                                                label=\"appointment\"\r\n                                                inputProps={{\r\n                                                    name: 'appointmentchannel',\r\n                                                    id: 'outlined-appointment-native-simple',\r\n                                                }}\r\n                                                style={{ width: '130%', color: '#707070', fontSize: 14, position: 'relative', top: 4, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\">Select Appointment Channel</option>\r\n                                                {appChannel.map(v => (<option value={v.AppointmentChannel}>{v.AppointmentChannel}</option>))}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                            :\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} disabled>\r\n                                                <Select\r\n                                                    className={classes.textField}\r\n                                                    native\r\n                                                    value={appchannelselected}\r\n                                                    onChange={(e) => setappchannelSelected(e.target.value)}\r\n                                                    label=\"appointment\"\r\n                                                    inputProps={{\r\n                                                        name: 'appointmentchannel',\r\n                                                        id: 'outlined-appointment-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '130%', color: '#707070', fontSize: 14, position: 'relative', top: 4, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\">Select Appointment Channel</option>\r\n                                                    {appChannel.map(v => (<option value={v.AppointmentChannel}>{v.AppointmentChannel}</option>))}\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        }\r\n                                        <Divider style={{ opacity: 0 }} />\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} >\r\n                                            <TextField\r\n\r\n                                                id=\"outlined-basic\" size=\"small\" label=\"Appointment Title\" variant=\"outlined\" onChange={(e) => setTitle(e.target.value)} style={{ width: '146%', color: '#707070', position: 'relative', top: 8, fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={6} >\r\n                                    <Typography variant=\"h7\" noWrap={true} style={{\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        padding: theme.spacing(1),\r\n                                        color: '#2C7FB2',\r\n                                        textDecoration: 'underline',\r\n                                        textUnderlineOffset: '1px',\r\n                                        textDecorationThickness: '1px'\r\n\r\n                                    }}\r\n                                    >\r\n                                        Appointment Details\r\n                                    </Typography>\r\n                                    <Grid container style={{ paddingTop: 10 }}>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 400,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                marginLeft: 9\r\n                                            }}>\r\n                                                {patientDetails.FirstName ? patientDetails.FirstName : 'NA'} {patientDetails.LastName}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} >\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                float: 'right', fontSize: 14, fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 400,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                float: 'left'\r\n\r\n                                            }}>\r\n                                                PID- {patientDetails.PatientId ? patientDetails.PatientId : \"NA\"}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container style={{ paddingTop: 10 }}>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 15, fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 400,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                marginLeft: 8\r\n                                            }}>\r\n                                                Walk-In Appointment\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={walkIn}\r\n                                                        // onClick= {disableBtn}\r\n                                                        onChange={(e) => setwalkIn(e.target.checked)}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ position: 'relative', right: 90, color: '#2C7FB2', float: 'right', marginTop: '-10px', paddingRight: 20 }}\r\n                                            />\r\n                                            {/* <FormControlLabel\r\n                                                control={\r\n                                                    <Switch \r\n                                                        checked={walkIn.checkedB } onClick= {enableBtn}\r\n                                                        onChange={(e) => setwalkIn({ ...state, [e.target.name]: e.target.checked })}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ position:'relative', right:8, color: '#2C7FB2', float: 'right', marginTop: '-10px', paddingRight: 20 }}\r\n                                            /> */}\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ paddingTop: 2 }}>\r\n                                        <Grid item xs={12} sm={6} id='mybtn' >\r\n                                            {!walkIn ? <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                                <Select\r\n                                                    className={classes.textField}\r\n                                                    native\r\n                                                    value={timeselected}\r\n                                                    onChange={(e) => setTimeSelected(e.target.value)}\r\n                                                    label=\"time\"\r\n                                                    inputProps={{\r\n                                                        name: 'time',\r\n                                                        id: 'outlined-appointment-native-simple',\r\n                                                    }}\r\n\r\n                                                    style={{ width: '70%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                                    {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n\r\n                                                :\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} disabled>\r\n                                                    <Select\r\n                                                        className={classes.textField}\r\n                                                        native\r\n                                                        value={timeselected}\r\n                                                        onChange={(e) => setTimeSelected(e.target.value)}\r\n                                                        label=\"time\"\r\n                                                        inputProps={{\r\n                                                            name: 'time',\r\n                                                            id: 'outlined-appointment-native-simple',\r\n                                                        }}\r\n\r\n                                                        style={{ width: '70%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                                        {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                                    </Select>\r\n\r\n                                                </FormControl>\r\n                                            }\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} >\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ paddingRight: 20, position: 'relative', bottom: 3 }}>\r\n                                                <TextField\r\n                                                    variant=\"outlined\"\r\n                                                    onChange={(e) => setappDate(e.target.value)}\r\n                                                    id=\"date\"\r\n                                                    label=\"\"\r\n                                                    type=\"date\"\r\n                                                    size=\"small\"\r\n                                                    style={{ width: '85%', fontSize: 12 }}\r\n                                                />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} >\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n\r\n                                            <Select\r\n                                                className={classes.textField}\r\n                                                native\r\n                                                value={apptypeselected}\r\n                                                onChange={(e) => setapptypeSelected(e.target.value)}\r\n                                                label=\"appointment type\"\r\n                                                inputProps={{\r\n                                                    name: 'appointmenttype',\r\n                                                    id: 'outlined-appointment-type-native-simple',\r\n                                                }}\r\n                                                style={{ width: '158%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                            >\r\n                                                <option aria-label=\"None\" >Select Appointment Type</option>\r\n                                                {appType.map(v => (<option value={v.AppointmentType}>{v.AppointmentType}</option>))}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    {/* <Grid item xs={12}>\r\n                                        <div>\r\n                                            <FixedSizeList height={90} width={300} itemSize={60} itemCount={6} style={{ color: '#00318B' }} >\r\n                                                {renderRow}\r\n                                            </FixedSizeList>\r\n                                        </div>\r\n                                    </Grid> */}\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={12} sm={8} style={{ paddingTop: 25, }}>\r\n                                <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    padding: theme.spacing(2),\r\n                                    color: '#2C7FB2',\r\n                                    textDecoration: 'underline',\r\n                                    textUnderlineOffset: '1px',\r\n                                    textDecorationThickness: '1px'\r\n                                }}\r\n                                >\r\n                                    Vital Information\r\n                                </Typography>\r\n\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={2} style={{ padding: 10 }}>\r\n                                <Grid item xs={12} style={{ justifyContent: 'center' }}>\r\n                                    <Grid container spacing={2} style={{ padding: 10 }}>\r\n                                        <Grid item xs={2} style={{ marginLeft: -10 }}>\r\n                                            <TextField\r\n                                                label=\"BP\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={bp}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setBp(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -4 }} >\r\n                                            <TextField\r\n                                                label=\"Temp\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={temp}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setTemp(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -10 }}>\r\n                                            <TextField\r\n                                                label=\"Height\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={height}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setHeight(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -15 }} >\r\n\r\n                                            <TextField\r\n                                                label=\"Weight\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={weight}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setWeight(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -18 }}>\r\n                                            <TextField\r\n\r\n                                                label=\"SPO2\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={spo2}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setSpo2(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -22 }} >\r\n                                            <TextField\r\n                                                label=\"Pulse Rate\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={plus}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setPlus(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={6} style={{ marginTop: 5 }}>\r\n                                        <TextField size='small' onChange={(e) => setReason(e.target.value)} id=\"outlined-basic\" label=\"Reason\" variant=\"outlined\" style={{ marginLeft: 8, width: '98%' }} />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} sm={6} >\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                            <Select\r\n                                                className={classes.textField}\r\n                                                native\r\n                                                value={doctorNote}\r\n                                                onChange={(e) => setdoctorNote(e.target.value)}\r\n                                                label=\"time\"\r\n                                                inputProps={{\r\n                                                    name: 'time',\r\n                                                    id: 'outlined-appointment-native-simple',\r\n                                                }}\r\n                                                style={{ width: '161%', height: 42, marginTop: -4, color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Note For Doctor</option>\r\n                                                {notefordoctor.map(v => (<option value={v.NoteForDoctor}>{v.NoteForDoctor}</option>))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Button className={classes.btnregister} href={'/DoctorBookAppointment'} style={{ float: 'right', marginRight: 20 }}>Reset</Button>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Button onClick={handleBookAppointment} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n            </Grid > {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    input: {\r\n        height: 35\r\n    },\r\n    vitalinputs: {\r\n        height: 10\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '32ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        color: '#707070',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11\r\n    },\r\n\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 220,\r\n\r\n    },\r\n    groupreports: {\r\n        height: 120,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 20\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 10\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        // padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    vitaltextField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        // padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    btnbookappointment: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        fontSize: 11\r\n\r\n    },\r\n    btnreset: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        width: 130,\r\n        fontSize: 11\r\n\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginBottom: -5,\r\n        fontSize: 12\r\n    },\r\n\r\n}));\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n\r\nexport const Services = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const serviceInfo = await axios.post(ip + 'GetAllServices', { ClinicId: clinicid });\r\n        return serviceInfo?.data?.Service;\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Add_Services = async (formData) => {\r\n    try {\r\n        const addService = await axios.post(ip + 'Web_AddServices', formData, { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n        return JSON.stringify(addService?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Delete_Service_Details_by_id = async (id) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'Web_DeleteServices', { id: id, });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Edit_Services=async (id,Userid,ClinicID,ServiceName,Category,Cost,Discount,Description)=>{\r\n    let body = {\r\n        \"id\": id,\r\n        \"DoctorId\": Userid,\r\n        \"ClinicId\": ClinicID,\r\n        \"ServiceName\": ServiceName,\r\n        \"Category\": Category,\r\n        \"Discount\": Discount,\r\n        \"Price\": Cost,\r\n        \"Description\": Description\r\n    }\r\n    try {\r\n        const res = await axios.patch(ip + 'EditServices', body)\r\n        return JSON.stringify(res?.data);\r\n\r\n    } catch (error) {\r\n        return (error.response.data);\r\n    }\r\n}\r\n\r\n\r\nexport const Search_service = async (ServiceName) => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const serviceInfo = await axios.post(ip + 'Web_SearchServices', { ClinicId: clinicid, ServiceName: ServiceName });\r\n        return serviceInfo?.data?.Service;\r\n    } catch (error) {\r\n       return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const UploadServiceImage = async (formdata) => {\r\n    try {\r\n        const add_Service = await axios.patch(ip + 'UploadServiceImageUsingS3',formdata, { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n        return JSON.stringify(add_Service?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const UploadClinicdetail = async (formdata) => {\r\n    try {\r\n        const add_Service = await axios.patch(ip + 'Web_UploadClinicLogoUsingS3',formdata, { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n        return JSON.stringify(add_Service?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Delete_Service_Details_by_id } from '../../../Apis/Clinic_Services/index';\r\n\r\nconst Delete_Service = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n    console.log(data);\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (id) => {\r\n        try {\r\n            const request = await Delete_Service_Details_by_id(id);\r\n            let response = JSON.parse(request);\r\n            if (response.success == '200') {\r\n                alert(response.message);\r\n                window.location.reload();\r\n            }\r\n            else {\r\n                alert(request);\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Service Details?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data.id)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Service\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { TextField, Typography, Button, Slide, DialogTitle, DialogContentText, DialogContent, DialogActions, Dialog, InputBase, IconButton, Grid, Paper } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Services, Add_Services, Search_service } from '../Apis/Clinic_Services/index';\r\nimport Delete_Service from './Clinic_Services/Delete_Service/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'ServiceName',\r\n        headerName: 'ServiceName',\r\n        width: 190,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'Price',\r\n        headerName: 'Price',\r\n        width: 140,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'Discount',\r\n        headerName: 'Discount',\r\n        width: 140,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'DiscountPrice',\r\n        headerName: 'Total Price',\r\n        width: 150,\r\n        editable: true\r\n    },\r\n    {\r\n        field: \"Action\",\r\n        width: 130,\r\n        sortable: false,\r\n\r\n        RenderCell: (params) => {\r\n            const onClickDelete = async () => {\r\n                return alert(\"Are you Sure!! Do you want to delete service\");\r\n            };\r\n            const [opendeletemodal, setopendeletemodal] = useState(false)\r\n            return (\r\n                <>\r\n                    {opendeletemodal ? <Delete_Service show={opendeletemodal} data={params.row} handleclose={() => setopendeletemodal(false)} /> : null}\r\n                    <IconButton color=\"secondary\" onClick={() => setopendeletemodal(true)} style={{ color: '#707070' }}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n\r\n                </>\r\n            );\r\n        }\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontSize: 14,\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        float: 'left'\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        color: '#707070',\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 13,\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 120,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 20\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DoctorAddServices() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [serviceData, setserviceData] = React.useState([]);\r\n    const [serviceName, setserviceName] = useState('');\r\n    const [price, setprice] = useState('');\r\n    const [discount, setdiscount] = useState('');\r\n    const [category, setcategory] = useState('');\r\n    const [description, setdescription] = useState('');\r\n    const [seriveImage, setserviceImage] = useState(null);\r\n    const [searchterm, setsearchterm] = useState('');\r\n\r\n    const fetchServices = async () => {\r\n        const services = await Services();\r\n        setserviceData(services);\r\n    }\r\n\r\n    const AddService = async () => {\r\n\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', seriveImage);\r\n        formData.append('ServiceName', serviceName);\r\n        formData.append('DoctorId', doctorid);\r\n        formData.append('ClinicId', clinicid);\r\n        formData.append('Price', price);\r\n        formData.append('Category', category);\r\n        formData.append('Discount', discount);\r\n        formData.append('Description', description);\r\n\r\n        const add_service = await Add_Services(formData);\r\n\r\n        let parse = JSON.parse(add_service);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    const SearchService = async (searchterm) => {\r\n        try {\r\n            const request = await Search_service(searchterm);\r\n            setserviceData(request)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchServices();\r\n    }, []);\r\n\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorClinicServices\");\r\n    };\r\n\r\n    const [opendeletemodal, setOpenDeletemodal] = React.useState(false);\r\n\r\n    const handleClickOpenDeletemodal = () => {\r\n        setOpenDeletemodal(true);\r\n    };\r\n\r\n    const handleCloseDeletemodal = () => {\r\n        setOpenDeletemodal(false);\r\n    };\r\n\r\n    const handlereload = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Add Services\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ paddingBottom: 0 }}>\r\n                            <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 400,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                padding: theme.spacing(2),\r\n                                color: '#2C7FB2',\r\n                                fontSize: 16\r\n                            }}\r\n                            >\r\n                                Add Details\r\n                            </Typography>\r\n\r\n\r\n                            <div style={{ paddingTop: 10 }}>\r\n                                <center>\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" value={serviceName} onChange={(e) => {\r\n                                        const re = /^[A-Za-z]+$/;\r\n\r\n\r\n                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                            setserviceName(e.target.value)\r\n                                        }\r\n                                    }} size=\"small\" label=\"Service Name\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" value={category}\r\n                                        onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setcategory(e.target.value)\r\n                                            }\r\n                                        }} size=\"small\" label=\"Category\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" value={price}\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) { setprice(e.target.value) }\r\n                                        }}\r\n                                        type=\"number\" size=\"small\" label=\"Cost\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" value={discount}\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) { setdiscount(e.target.value) }\r\n                                        }}\r\n                                        type=\"number\" size=\"small\" label=\"Discount\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField className={classes.textField} multiline={true}\r\n                                        rows={2}\r\n                                        rowsMax={2} id=\"outlined-basic\" onChange={(e) => setdescription(e.target.value)} size=\"small\" label=\"Description\" variant=\"outlined\"\r\n                                    />\r\n                                </center>\r\n                                <div style={{ marginLeft: 10 }}>\r\n                                    <input type=\"file\" onChange={(e) => setserviceImage(e.target.files[0])} id=\"serviceimage\" style={{ color: '#000' }} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Grid container style={{ padding: 12 }}>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={handlereload} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button onClick={AddService} className={classes.btnregister} >Add Service</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8}>\r\n                        <Paper elevation={6} className={classes.paper} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Grid container spacing={2}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    placeholder='Search by Service Name'\r\n                                    value={searchterm}\r\n                                    onChange={(e) => setsearchterm(e.target.value)}\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase>\r\n                                <Button className={classes.btnview} onClick={() => SearchService(searchterm)} size=\"small\" style={{ float: 'left', fontSize: 11, textAlign: 'center', marginLeft: 20 }}>View Service</Button>\r\n                            </Grid>\r\n                            <DataGrid\r\n                                style={{ height: 365, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}\r\n                                rows={serviceData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={10}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                {/* for Delete User */}\r\n\r\n                <Dialog\r\n                    open={opendeletemodal}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleCloseDeletemodal}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                            Do you want to Delete Service?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions style={{ marginTop: 20 }}>\r\n                        <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }} >\r\n                            No\r\n                        </Button>\r\n                        <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }}>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControl, InputLabel, TextField, Typography, Button, Slide, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Edit_Services } from '../../../Apis/Clinic_Services/index';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Edit_Service_Details = ({ show, data, handleclose }) => {\r\n    console.log(data)\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [ServiceName, setServiceName] = useState(data.ServiceName)\r\n    const [Category, setCategory] = useState(data.Category)\r\n    const [cost, setcost] = useState(data.Price)\r\n    const [Discount, setDiscount] = useState(data.Discount);\r\n    const [Description, setDescription] = useState(data.Description)\r\n\r\n    const Edit = async (id, Userid, ClinicID, ServiceName, Category, Cost, Discount, Description) => {\r\n        try {\r\n            const request = await Edit_Services(id, Userid, ClinicID, ServiceName, Category, Cost, Discount, Description)\r\n            let response=JSON.parse(request);\r\n            if(response.success=='200'){\r\n                alert(response.message)\r\n                handleclose();\r\n                window.location.reload();\r\n            }\r\n            else{\r\n                alert(request.message)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Services\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <center>\r\n                                    <TextField value={ServiceName} onChange={(e) => setServiceName(e.target.value)} className={classes.textField} id=\"outlined-basic\" size=\"small\" variant=\"outlined\" style={{ marginTop: 0 }} />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField value={Category} onChange={(e) => setCategory(e.target.value)} className={classes.textField} id=\"outlined-basic\" size=\"small\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField value={cost} onChange={(e) => setcost(e.target.value)} className={classes.textField} id=\"outlined-basic\" type=\"number\" size=\"small\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField value={Discount} onChange={(e) => setDiscount(e.target.value)} className={classes.textField} id=\"outlined-basic\" type=\"number\" size=\"small\" variant=\"outlined\" />\r\n                                </center>\r\n                                <center>\r\n                                    <TextField\r\n                                        className={classes.textField}\r\n                                        value={Description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        multiline={true}\r\n                                        rows={2}\r\n                                        rowsMax={10} id=\"outlined-basic\" size=\"small\" variant=\"outlined\"\r\n                                    />\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={handleclose} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={() => Edit(data.id, data.DoctorId, data.ClinicId, ServiceName, Category, cost, Discount, Description)} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Edit_Service_Details\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        fontSize: 11\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '70%',\r\n        marginTop: 15\r\n    },\r\n    facilitiesTitle: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        padding: 2\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 14,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2,\r\n    },\r\n    description: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n\r\n}));","import React, { useState } from \"react\";\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, InputLabel, Radio, Typography, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport {UploadServiceImage} from '../../../Apis/Clinic_Services/index';\r\n\r\nexport default function Clinic_Service_Image({ show, handleCloseEditmodal,data }) {\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [file, setfile] = useState();\r\n\r\n    const fetchClinicservices = async () => {\r\n        \r\n        const formdata =  new FormData();\r\n        formdata.append(\"file\", file);\r\n        formdata.append(\"id\", data.id);\r\n        const add_service = await UploadServiceImage(formdata);\r\n\r\n        let parse = JSON.parse(add_service);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                onClose={handleCloseEditmodal}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <Grid container>\r\n                    <Grid item xs={12} style={{ borderRight: '1px solid #F0F0F0', width: 700 }}>\r\n                        <Typography variant=\"h5\" style={{ margin: 42, marginLeft: 20, position:'relative',bottom:15, color: '#2C7FB2' }} noWrap={true}>Upload Clinic Service</Typography>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0', position: \"relative\", bottom: 100 }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                            fontSize: 16,\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            color: '#707070',\r\n                            fontWeight: 600,\r\n                            alignItems: 'center',\r\n                            marginTop: 105,\r\n                            marginLeft: 135\r\n                        }}>\r\n                            Logo:\r\n                        </Typography>\r\n\r\n\r\n                        <center>\r\n                            <FormControl variant=\"outlined\"   >\r\n                                <TextField id=\"outlined-basic\" name=\"file\" type=\"file\" enctype=\"multipart/form-data\" size=\"small\" label=\"\" onChange={e => {const file=e.target.files[0];setfile(file)}} variant=\"outlined\" style={{ width: '100%', marginLeft: 23, position: 'relative', bottom: 29 }} />\r\n                            </FormControl>\r\n                        </center>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid xs={12} sm={6}>\r\n                        <Button onClick={handleCloseEditmodal} style={{ marginLeft: 203, marginTop: 35, color: 'white', backgroundColor: '#2C7FB2', borderRadius: 28, width: 130, textTransform: 'capitalize' }}>Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6}>\r\n                        <Button  onClick={fetchClinicservices} style={{ margin: 70, marginLeft: 25, marginBottom: 14, position: \"relative\", bottom: 35, color: 'white', backgroundColor: '#2C7FB2', borderRadius: 28, width: 130, textTransform: 'capitalize' }}>Submit\r\n                        </Button>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControl, InputLabel, TextField, Typography, Button, Slide, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Services, Search_service } from '../Apis/Clinic_Services/index';\r\nimport Edit_Service_Details from './Clinic_Services/Edit_Services/index'\r\nimport Clinic_Service_Image from './Clinic_Services/Image_Upload/index';\r\n\r\nimport ip from '../ipaddress/ip';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'ServiceName',\r\n        headerName: 'Service Name',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'Price',\r\n        headerName: 'Price',\r\n        width: 120,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'Discount',\r\n        headerName: 'Discount',\r\n        width: 120,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nfunction createData(name, price, discount) {\r\n    return { name, price, discount };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        color: '#707070',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '70%',\r\n        marginTop: 15\r\n    },\r\n    facilitiesTitle: {\r\n        fontSize: 16,\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        padding: 2\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 14,\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2,\r\n    },\r\n    description: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        overflow: \"auto\",\r\n        whiteSpace: 'pre-wrap',\r\n        overflowWrap: 'break-word',\r\n        color: 'gray',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DoctorClinicServices() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [serviceData, setserviceData] = useState([]);\r\n    const [serviceDetails, setserviceDetails] = useState('');\r\n    const [searchterm, setsearchterm] = useState('');\r\n    const [clinicservices, setclinicservices] = useState('');\r\n\r\n    const fetchServiceData = async () => {\r\n        const services = await Services();\r\n        setserviceData(services);\r\n    }\r\n\r\n    const handleCellClick = async (id) => {\r\n        const serviceDetailedInfo = await axios.post(ip + 'Web_GetServicesById', { id: id });\r\n        setserviceDetails(serviceDetailedInfo?.data?.Service);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchServiceData();\r\n    }, []);\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    const handleAddServices = () => {\r\n        navigate(\"/DoctorAddServices\");\r\n    };\r\n\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n\r\n\r\n    const handleClickOpenEditmodal = () => {\r\n        setOpenEditmodal(true);\r\n    };\r\n\r\n    const handleCloseEditmodal = () => {\r\n        setOpenEditmodal(false);\r\n    };\r\n\r\n\r\n    const SearchService = async (searchterm) => {\r\n        try {\r\n            const request = await Search_service(searchterm);\r\n            setserviceData(request)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Clinic Services\r\n                        <Button className={classes.btnregister} onClick={handleAddServices} style={{ float: 'right', marginRight: 20, width: '150px', fontFamily: 'Poppins', fontSize: 12.5, fontWeight: 400 }}>Add Services</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            placeholder=\"Search by Service Name\"\r\n                                            value={searchterm}\r\n                                            onChange={(e) => setsearchterm(e.target.value)}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} onClick={() => SearchService(searchterm)} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>View Service</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            <DataGrid\r\n                                style={{ height: 325, marginTop: 20, fontSize: 12, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                                rows={serviceData}\r\n                                rowHeight={40}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={10}\r\n                                onRowClick={(newSelection) => {\r\n                                    handleCellClick(newSelection.row.id);\r\n                                }}\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={8}>\r\n                        <Paper className={classes.paper} elevation={6} style={{ padding: 20, marginLeft: 25, marginRight: 20 }}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true}\r\n                                    style={{\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#2C7FB2',\r\n                                        fontSize: 18,\r\n                                        textDecoration: 'underline'\r\n                                    }}>\r\n                                    Facility\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            if (serviceDetails === '') {\r\n                                                alert(\"Please select patient\");\r\n                                                return;\r\n                                            }\r\n                                            setOpenEditmodal(true)\r\n                                        }}\r\n                                        style={{ float: 'right', backgroundColor: '#fff', color: '#2C7FB2', marginLeft: 20, fontFamily: 'Poppins', fontSize: 13, fontWeight: 400 }}>\r\n                                        Edit\r\n                                    </Button>\r\n                                </Typography>\r\n\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={2} style={{ paddingTop: 20 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Grid container>\r\n                                        <Grid item xs={12} sm={4}>\r\n                                            <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesTitle}>Name</Typography>\r\n                                            <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesTitle}>Discount</Typography>\r\n                                            <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesTitle}>Price</Typography>\r\n                                            <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesTitle}>Total Price</Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={8} >\r\n                                            <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput} >\r\n                                                {serviceDetails.ServiceName ? serviceDetails.ServiceName : 'NA'}\r\n                                            </Typography>\r\n                                            <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>\r\n                                                {serviceDetails.Discount ? serviceDetails.Discount + '%' : '0 %'}\r\n                                            </Typography>\r\n                                            <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>\r\n                                                {serviceDetails.Price != '' ? serviceDetails.Price : 'NA'}\r\n                                            </Typography>\r\n                                            <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>\r\n                                                {serviceDetails.DiscountPrice != '' ? serviceDetails.DiscountPrice : 'NA'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item sm={6} style={{ marginTop: '-10px' }}>\r\n                                    <Paper elevation={3} className={classes.groupreports}>\r\n\r\n                                        <center>\r\n                                            {serviceDetails.ServiceImage ? <img src={serviceDetails.ServiceImage} style={{ height: '130px', width: '240px', marginTop: 5, borderRadius: 15 }} /> : <img src=\"default-image.png\" style={{ height: '130px', width: '240px', marginTop: 5, borderRadius: 15 }} />\r\n                                            }\r\n                                            <IconButton onClick={() => setclinicservices(true)} edge=\"start\" size='small' color=\"inherit\" aria-label=\"close\" style={{ marginTop: '-10px', float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0', marginRight: 25 }}>\r\n                                                <EditIcon size='small' />\r\n                                            </IconButton>\r\n                                            {clinicservices ? <Clinic_Service_Image show={clinicservices} data={serviceDetails} handleCloseEditmodal={() => setclinicservices(false)} /> : null}\r\n\r\n                                        </center>\r\n\r\n                                    </Paper>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            <Divider style={{ marginTop: 10, border: '1px solid #F0F0F0' }} />\r\n\r\n                            <Grid container spacing={2} style={{ paddingTop: 10, paddingRight: 20 }}>\r\n                                <Grid item sm={12} >\r\n                                    <Typography style={{\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#2C7FB2',\r\n                                        fontSize: 16,\r\n                                        textDecoration: 'underline'\r\n                                    }}>\r\n                                        Description\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} >\r\n                                    <div className={classes.description} style={{ height: 140, width: 750, }}>\r\n                                        {serviceDetails.Description != '' ? serviceDetails.Description : 'Not Provided'}\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* Edit Details  */}\r\n                {openeditmodal ? <Edit_Service_Details show={openeditmodal} data={serviceDetails} handleclose={() => setOpenEditmodal(false)} /> : null}\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Select, FormControl, Radio, InputLabel, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        fontSize: 11\r\n    },\r\n    headingNewRegistration: {\r\n        alignItems: 'center',\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: theme.spacing(1.2),\r\n        minWidth: 220,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '11px'\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 120,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 20\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 10\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function DoctorPatientRegistration() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n\r\n    const [gender, setGender] = React.useState(\"\");\r\n\r\n    function handleChangedGender(event) {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Patient Registration\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} container style={{ marginTop: 2 }}>\r\n\r\n                    <Grid item xs={12} sm={4}  >\r\n                        <Paper elevation={6} className={classes.paper} style={{ justifyContent: 'center', textAlign: 'center' }}>\r\n                            <Typography className={classes.headingNewRegistration} variant=\"h6\" noWrap={true} >\r\n                                New Registration\r\n                            </Typography>\r\n                            <div style={{ paddingTop: 5 }}>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"FirstName\" variant=\"outlined\" />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" size=\"small\" />\r\n                                </FormControl>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <InputLabel style={{ marginLeft: 40, marginTop: '-15px' }}>Gender</InputLabel>\r\n                                    <Select\r\n                                        className={classes.textField}\r\n                                        native\r\n                                        value={gender}\r\n                                        onChange={handleChangedGender}\r\n                                        label=\"Gender\"\r\n                                        inputProps={{\r\n                                            name: 'gender',\r\n                                            id: 'outlined-gender-native-simple',\r\n                                        }}\r\n\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" />\r\n                                        <option value={1}>Male</option>\r\n                                        <option value={2}>Female</option>\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" type='number' label=\"Mobile No\" variant=\"outlined\" size=\"small\" />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" type='email' label=\"Email ID\" variant=\"outlined\" size=\"small\" />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" type=\"date\" label=\"DOB\" variant=\"outlined\" size=\"small\" />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                    <TextField className={classes.textField} id=\"outlined-basic\" type='password' label=\"Password\" variant=\"outlined\" size=\"small\" />\r\n                                </FormControl>\r\n\r\n                            </div>\r\n                            <Grid container xs={12}>\r\n                                <Grid item sm={6} >\r\n                                    <center><Button className={classes.btnregister} style={{ float: 'right', marginRight: 10 }}>Cancle</Button></center>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <center><Button className={classes.btnregister} style={{ float: 'left', marginLeft: 10 }}>Register</Button></center>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 18, color: '#00318B', fontFamily: '\"Poppins\", san-serif;',\r\n                                fontStyle: 'normal',\r\n                                \r\n                            }}>\r\n                                Profile\r\n                            </Typography>\r\n                            <center>\r\n                                <div style={{ paddingBottom: 10 }}>\r\n                                    <img src=\"Pallavi Kale.jpg\" style={{ borderRadius: 50, height: 100 }}></img>\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    Pallavi Kale\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 14,\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 400\r\n                                }}>\r\n                                    PID- 123445\r\n                                </Typography>\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Mobile Number\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070' }}>\r\n                                            9095009797\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Email ID\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070' }}>\r\n                                            pallavi.kale @rajyugsolution.com\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Date Of Birth\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070' }}>\r\n                                            13/04/1998\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Age\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070' }}>\r\n                                            30\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12}>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Gender\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070' }}>\r\n                                            Female\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Address\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070' }}>\r\n                                            8th floor, City Avenue, Mumbai-Banglore Highway, Wakad, Pune, 411007\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Medical History\r\n                                        </Typography>\r\n                                        <a href='/' style={{ fontSize: 12, color: '#2C7FB2' }}>Patient History</a>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 15 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n// export const GetMorningSlots = async () => {\r\n//     try {\r\n//         const getSlotInfo = await axios.post(ip + 'Web_GetTimingForTodaysApp1');\r\n//         return getSlotInfo?.data?.Slots\r\n//     }\r\n//     catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\n// export const GetEveningSlots = async () => {\r\n//     try {\r\n//         const getSlotInfo = await axios.post(ip + 'Web_GetTimingForTodaysApp2');\r\n//         return getSlotInfo?.data?.Slots\r\n//     }\r\n//     catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\n\r\nexport const GetMorningSlots = async () => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let doctorid = parsed.userid;\r\n    let now = new Date();\r\n    let date = now.toISOString().split('T')[0];\r\n\r\n    try {\r\n        const getAppInfo = await axios.post(ip + 'Web_GetTimingForTodaysApp1', { AppointmentDate: date, DoctorId: doctorid });\r\n        return getAppInfo?.data?.Appointment\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const GetEveningSlots = async () => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let doctorid = parsed.userid;\r\n    let now = new Date();\r\n    let date = now.toISOString().split('T')[0];\r\n\r\n    try {\r\n        const getAppInfo = await axios.post(ip + 'Web_GetTimingForTodaysApp2', { AppointmentDate: date, DoctorId: doctorid });\r\n        return getAppInfo?.data?.Appointment\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const Todays_Appointment = async () => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let doctorid = parsed.userid;\r\n    try {\r\n        const res = await axios.post(ip + 'Web_ShowAppointmentsforTodaysApp', { DoctorId: doctorid });\r\n        return res?.data?.Appointment;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const Todays_Appointment_By_Date = async (clinicid, startdate, enddate) => {\r\n    try {\r\n        const res = await axios.post(ip + 'Web_SearchAppointmentByDate', { ClinicId: clinicid, StartDate: startdate, EndDate: enddate });\r\n        return res?.data?.Appointment;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, FormControl, Select, DialogTitle, DialogContentText, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { Time, Note_for_Doctor, Edit_App_for_Dashboard } from '../../../../Apis/Dashboard/Edit_Appointment_From_PatientIn/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const Edit_Appointment_From_TodaysApp = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [time, settime] = useState([]);\r\n    const [doctorsNote, setdoctorsNote] = useState([]);\r\n    const [reason, setReason] = useState(data.AppointmentReason ? data.AppointmentReason : '');\r\n    const [notefordoctor, setnotefordoctor] = useState(data.ShortNote ? data.ShortNote : '');\r\n    const [bp, setBp] = useState(data.Patient_BP ? data.Patient_BP : '');\r\n    const [temp, setTemp] = useState(data.Patient_Temp ? data.Patient_Temp : '');\r\n    const [height, setHeight] = useState(data.Patient_Height ? data.Patient_Height : '');\r\n    const [weight, setWeight] = useState(data.Patient_Weight ? data.Patient_Weight : '');\r\n    const [plus, setPlus] = useState(data.Patient_Plus ? data.Patient_Plus : '');\r\n    const [spo2, setSpo2] = useState(data.Patient_SPO2 ? data.Patient_SPO2 : '');\r\n    const [appDate, setappDate] = useState(data.AppointmentDate ? data.AppointmentDate : '');\r\n    const [appTime, setappTime] = useState(data.AppointmentTime ? data.AppointmentTime : '');\r\n\r\n    const fetchtimings = async () => {\r\n        const timingInfo = await Time()\r\n        settime(timingInfo);\r\n    }\r\n\r\n    const fetchNotefordoctor = async () => {\r\n        const doctorsNoteInfo = await Note_for_Doctor()\r\n        setdoctorsNote(doctorsNoteInfo);\r\n    }\r\n\r\n    const EditAppointmentDetails = async () => {\r\n\r\n        const obj = {\r\n            AppointmentTime: appTime,\r\n            AppointmentDate: appDate,\r\n            Patient_BP: bp,\r\n            Patient_Weight: weight,\r\n            Patient_Height: height,\r\n            Patient_SPO2: spo2,\r\n            Patient_Plus: plus,\r\n            Patient_Temp: temp,\r\n            ShortNote: notefordoctor,\r\n            AppointmentReason: reason,\r\n            id: data.id\r\n        }\r\n        const editrequest = await Edit_App_for_Dashboard(obj);\r\n        let parse = JSON.parse(editrequest);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            handlemodal();\r\n            window.location.reload()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchtimings();\r\n        fetchNotefordoctor();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                onClose={handlemodal}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Appointment Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        {data.FirstName} {data.LastName}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        PID:- {data.UserId}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Time\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Date\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                        <Select\r\n                                            className={classes.textField}\r\n                                            native\r\n                                            value={appTime}\r\n                                            onChange={(e) => setappTime(e.target.value)}\r\n                                            label=\"time\"\r\n                                            inputProps={{\r\n                                                name: 'time',\r\n                                                id: 'outlined-appointment-native-simple',\r\n                                            }}\r\n                                            style={{ width: '100%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                            {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                                        <TextField\r\n                                            InputProps={{\r\n                                                className: classes.input\r\n                                            }}\r\n                                            InputLabelProps={{\r\n                                                shrink: true\r\n                                            }}\r\n                                            variant=\"outlined\"\r\n                                            value={appDate}\r\n                                            onChange={(e) => setappDate(e.target.value)}\r\n                                            id=\"date\"\r\n                                            label=\"\"\r\n                                            type=\"date\"\r\n                                            size=\"small\"\r\n                                            style={{ width: '100%', fontSize: 14 }}\r\n                                        />\r\n                                    </FormControl>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} style={{ marginTop: 10 }}>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#2C7FB2',\r\n                                            fontSize: 18,\r\n                                        }}>\r\n                                        Vital Information\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 10 }}>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"BP\"\r\n                                        value={bp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setBp(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Temp\"\r\n                                        value={temp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setTemp(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Height\"\r\n                                        value={height}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setHeight(e.target.value)}}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 15 }}>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Weight\"\r\n                                        value={weight}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setWeight(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"SPO2\"\r\n                                        value={spo2}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setSpo2(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Pulse Rate\"\r\n                                        value={plus}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setPlus(e.target.value)}}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 17 }}>\r\n                                <TextField className={classes.inputFields} size='small' value={reason} onChange={(e) => setReason(e.target.value)} id=\"outlined-basic\" label=\"Reason\" variant=\"outlined\" />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 12 }}>\r\n                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                    <Select\r\n                                        className={classes.textField}\r\n                                        native\r\n                                        value={notefordoctor}\r\n                                        onChange={(e) => setnotefordoctor(e.target.value)}\r\n                                        label=\"time\"\r\n                                        inputProps={{\r\n                                            name: 'time',\r\n                                            id: 'outlined-appointment-native-simple',\r\n                                        }}\r\n\r\n                                        style={{ width: '150%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" >Note For Doctor</option>\r\n                                        {doctorsNote.map(v => (<option value={v.NoteForDoctor}>{v.NoteForDoctor}</option>))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={() => handlemodal(false)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button onClick={() => EditAppointmentDetails()} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\n\r\nexport const Cancel_Appointment_Details = async (id) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'Web_CancelAppointment', { \"id\": id,});\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}\r\n\r\nexport const Cancel_Appointment_for_Calender = async (id) => {\r\n    try {\r\n        const response = await axios.patch(ip + 'Web_CancelAppointment', { \"id\": id,});\r\n        return JSON.stringify(response?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, Slide, Button } from \"@material-ui/core\";\r\nimport { Cancel_Appointment_Details } from '../../../../Apis/Dashboard/Cancel_Appointment/index';\r\n\r\nconst Delete_Appointment = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (id) => {\r\n\r\n        const request = await Cancel_Appointment_Details(id);\r\n        let response=JSON.parse(request);\r\n        if(response.success=='200'){\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else{\r\n            alert(response.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Appointment?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Appointment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, IconButton, Grid, Paper } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { GetMorningSlots, GetEveningSlots, Todays_Appointment, Todays_Appointment_By_Date } from '../Apis/Todays_Appointments/index';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Edit_Appointment_From_TodaysApp } from './Todays_Appointments/Slots/Edit_Appointment/index';\r\nimport Delete_Appointment from './Todays_Appointments/Slots/Delete_Appointment/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    // {\r\n    //     field: 'MobileNo',\r\n    //     headerName: 'Contact No',\r\n    //     width: 160,\r\n    //     editable: true,\r\n    // },\r\n    {\r\n        field: 'AppointmentReason',\r\n        headerName: 'Appointment Reason',\r\n        width: 220,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentDate',\r\n        headerName: 'Date',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentTime',\r\n        headerName: 'Time',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentType',\r\n        headerName: 'Type',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentChannel',\r\n        headerName: 'Channel',\r\n        width: 180,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentTime',\r\n        headerName: 'Time',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: \"Action\",\r\n        width: 130,\r\n        sortable: false,\r\n\r\n        RenderCell: (params) => {\r\n            const onClickDelete = async () => {\r\n                return alert(\"Are you Sure!! Do you want to delete medicine\");\r\n            };\r\n            const onClickEdit = async () => {\r\n                return alert(JSON.stringify(params.row, null, 4));\r\n            };\r\n            const [openeditmodal, setopeneditmodal] = useState(false);\r\n            const [opendeletemodal, setOpenDeletemodal] = useState(false);\r\n            let currentDate = new Date();\r\n            let t_date = currentDate.toISOString().split('T')[0];\r\n            return (\r\n                <>\r\n                    {openeditmodal ? <Edit_Appointment_From_TodaysApp show={openeditmodal} data={params.row} handlemodal={() => setopeneditmodal(false)} /> : null}\r\n                    {params.row.AppointmentDate >= t_date ? <IconButton onClick={() => setopeneditmodal(true)} style={{ color: '#2C7FB2' }}>\r\n                        <EditIcon />\r\n                    </IconButton> : null}\r\n                    {opendeletemodal ? <Delete_Appointment show={opendeletemodal} data={params.row.id} handleclose={() => setOpenDeletemodal(false)} /> : null}\r\n                    {params.row.AppointmentDate >= t_date ? < IconButton color=\"secondary\" onClick={() => setOpenDeletemodal(true)} style={{ color: '#707070' }}>\r\n                        <DeleteIcon />\r\n                    </IconButton> : null}\r\n\r\n                </>\r\n            );\r\n        }\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginLeft: 50\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 400,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 120,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    btn: {\r\n        color: '#78B088',\r\n        backgroundColor: '#ffffff',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n\r\n\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport default function DoctorTodaysAppointment() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [times, settimes] = useState([]);\r\n    const [eveningtimes, seteveningtimes] = useState([]);\r\n    const [appointmentlist, setappointmentlist] = useState([]);\r\n    const [startdate, setstartdate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [morningcount, setmorningcount] = useState([]);\r\n    const [eveningcount, seteveningcount] = useState([]);\r\n\r\n    const fetchAppointments = async () => {\r\n        const appointments = await Todays_Appointment();\r\n        setappointmentlist(appointments);\r\n    }\r\n\r\n    const fetchMorningCount = async () => {\r\n        const count = await GetMorningSlots();\r\n        setmorningcount(count);\r\n    }\r\n\r\n    const fetchEveningCount = async () => {\r\n        const count = await GetEveningSlots();\r\n        seteveningcount(count);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            fetchMorningCount();\r\n            fetchEveningCount();\r\n        }, 10000);\r\n        fetchMorningCount();\r\n        fetchEveningCount();\r\n        fetchAppointments();\r\n        return () => clearInterval(interval);\r\n\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const Appointmentbydate = async (startdate, endDate) => {\r\n        var data = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let Clinicid = parsed.ClinicId;\r\n        try {\r\n            let request = await Todays_Appointment_By_Date(Clinicid, startdate, endDate)\r\n            setappointmentlist(request)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        Morning Slots\r\n                    </Typography>\r\n\r\n                    {morningcount.map((item) => {\r\n                        return (<>\r\n                            <IconButton size='small'  >\r\n                                <div className='row' style={{ marginLeft: '-30px', marginRight: '-30px' }}>\r\n                                    <div style={{ marginTop: '-5px', color: '#2C7FB2' }} >\r\n                                        {item.Count}\r\n                                    </div>\r\n                                    <div>\r\n                                        {item.Count == '0' ? <Button variant=\"contained\" className={classes.btn} style={{ marginTop: '-8px' }}>\r\n                                            {item.ActualTime}\r\n                                        </Button> :\r\n                                            <Button variant=\"contained\" className={classes.btn} style={{ marginTop: '-8px', backgroundColor: '#2C7FB2', color: '#fff' }}>\r\n                                                {item.ActualTime}\r\n                                            </Button>}\r\n                                    </div>\r\n                                </div>\r\n                            </IconButton>\r\n                        </>);\r\n                    })}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                            paddingTop: 20\r\n                        }}>\r\n                        Evening Slots\r\n                    </Typography>\r\n\r\n                    {eveningcount.map((item) => {\r\n                        return (<>\r\n                            <IconButton size='small'  >\r\n                                <div className='row' style={{ marginLeft: '-30px', marginRight: '-30px' }}>\r\n                                    <div style={{ marginTop: '-5px', color: '#2C7FB2' }} >\r\n                                        {item.Count}\r\n                                    </div>\r\n                                    <div>\r\n                                        {item.Count == '0' ? <Button variant=\"contained\" className={classes.btn} style={{ marginTop: '-8px' }}>\r\n                                            {item.ActualTime}\r\n                                        </Button> :\r\n                                            <Button variant=\"contained\" className={classes.btn} style={{ marginTop: '-8px', backgroundColor: '#2C7FB2', color: '#fff' }}>\r\n                                                {item.ActualTime}\r\n                                            </Button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </IconButton>\r\n\r\n                        </>);\r\n\r\n                    })}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{ paddingTop: 15 }}>\r\n                    {/* <SearchIcon className={classes.searchIcon} />\r\n                    <InputBase\r\n                        label=\"Search by Name/Email\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n\r\n                        }}\r\n                        variant='outlined'\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        style={{ borderRadius: 15 }}\r\n                    > </InputBase> */}\r\n\r\n                    <Typography variant=\"h8\" noWrap={true} style={{ paddingLeft: 5, paddingRight: 20 }}>\r\n                        From\r\n                    </Typography>\r\n\r\n                    <input id=\"fromdate\" type=\"date\" value={startdate} onChange={(e) => {\r\n                        setstartdate(e.target.value)\r\n                    }} style={{ border: '1px solid #F0F0F0', height: 35 }} />\r\n\r\n                    <Typography variant=\"h8\" noWrap={true} style={{ paddingLeft: 40, paddingRight: 20 }}>\r\n                        To\r\n                    </Typography>\r\n                    <input id=\"fromdate\" type=\"date\" value={endDate} onChange={(e) => {\r\n                        setendDate(e.target.value)\r\n                    }} style={{ border: '1px solid #F0F0F0', height: 35 }} />\r\n\r\n                    <Button className={classes.btnview} onClick={() => Appointmentbydate(startdate, endDate)} >View</Button>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} >\r\n\r\n                    <DataGrid\r\n                        style={{ height: 300, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}\r\n                        rows={appointmentlist}\r\n                        rowHeight={30}\r\n                        columns={columns}\r\n                        columnWidth={5}\r\n                        pageSize={10}\r\n\r\n                    />\r\n\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../../ipaddress/ip';\r\n\r\nexport const UpdateAppointmentDetails = async (obj) => {\r\n    try {\r\n        const editAppointment = await axios.patch(ip + 'Web_EditAppointment', obj);\r\n        return JSON.stringify(editAppointment?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchMedicineData = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    const medicineInfo = await axios.post(ip + 'Web_GetAllMedicines', { ClinicId: clinicid });\r\n\r\n    return medicineInfo?.data?.Medicine;\r\n}\r\n\r\nexport const addPrescriptionDetails = async (obj) => {\r\n    try {\r\n        const addprescription = await axios.post(ip + 'Web_AddPrescriptionDetails', { prescriptiondata: obj })\r\n        return JSON.stringify(addprescription?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\nexport const generatePrescription = async (obj) => {\r\n    try {\r\n        const generatePdf = await axios.post(ip + 'create_GynicPrescription', obj);\r\n        return JSON.stringify(generatePdf?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const paymentDetails = async (obj) => {\r\n    try {\r\n        const paymentdetails = await axios.post(ip + 'Web_AddAppointmentFee', obj);\r\n        return JSON.stringify(paymentdetails?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getPrescription = async (id) => {\r\n    try {\r\n        const prescription = await axios.post(ip + 'Web_GetAppointmentById', {id : id});\r\n        return JSON.stringify(prescription?.data?.Appointment);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//api\r\nimport { Delete_Staff_Details_by_id } from '../../../Apis/Clinic_Staff/index';\r\n\r\nimport { Cancel_Appointment_Details } from '../../../Apis/Dashboard/Cancel_Appointment/index';\r\n\r\nconst Cancel_Appointment = ({ show, data, handleclose }) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (id) => {\r\n        \r\n        const request = await Cancel_Appointment_Details(id);\r\n        let response = JSON.parse(request);\r\n        if (response.success == '200') {\r\n            alert(response.message);\r\n            navigator('/DoctorDashboard')\r\n        }\r\n        else {\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to cancel this appointment?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data.id)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Cancel_Appointment;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { TextField, Typography, Button, Avatar, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { UpdateAppointmentDetails } from '../Apis/PatientInQueue/Generate_Prescription/Medicines_Table/index';\r\nimport Cancel_Appointment from './SendIn_Patient_details/Cancel_Appointment/index';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    btnTreat: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 30,\r\n        fontSize: '12px'\r\n\r\n    },\r\n    textField: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 30,\r\n        fontSize: '12px'\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function DoctorPatientDetails_SendIn() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [details, setdetails] = useState([location.state.details]);\r\n    const obj = JSON.stringify(details);\r\n\r\n\r\n    useEffect(() => {\r\n        setdetails(location.state.details);\r\n    }, []);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleTreat = () => {\r\n        navigate('/DoctorTreatPatient', {\r\n            state: { detail: location.state.details }\r\n        })\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Patient Details\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginRight: 20 }} >\r\n                            <center>\r\n                                <div style={{ paddingBottom: 20 }}>\r\n                                    {details.ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={details.ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {details.FirstName} {details.LastName}\r\n                                </Typography>\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 20 }}>\r\n                                    <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Status\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070' }}>\r\n                                            {details.AppointmentStatus}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Channel\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070' }}>\r\n                                            {details.AppointmentChannel}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 30 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Location :\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Contact :\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Email Id :\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.Address} {details.City}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.MobileNo}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.Email != null ? details.Email : 'Not Provided'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={8}>\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginRight: 20, marginLeft: 25 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 17, fontWeight: '600', color: '#2C7FB2', marginBottom: 15, textDecoration: 'underline', textUnderlineOffset: '1px' }}>\r\n                                Details\r\n                                <Button onClick={() => navigate('/DoctorPatientMedicalHistory', {\r\n                                    state: { Details: details }\r\n                                })}\r\n                                    style={{ float: 'right', color: 'white', fontSize: '11px', fontWeight: 600, fontFamily: 'Poppins', backgroundColor: '#2C7FB2' }}  >\r\n                                    Previous Medical History\r\n                                </Button>\r\n                            </Typography>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 600 }}>\r\n                                        Appointment Date :\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.AppointmentDate}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 600 }}>\r\n                                        Appointment Time:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 400 }}>\r\n                                        {details.AppointmentTime}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: '10px' }}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 600 }}>\r\n                                        Appointment Reason :\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 600 }}>\r\n                                        Note For Doctor:\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: '10px' }}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.AppointmentReason ? details.AppointmentReason : 'NA'}\r\n                                    </Typography>\r\n                                    {/* <TextField className={classes.textField} value={appointmentreason} onChange={(e)=> setappointmentreason(e.target.value)} id=\"outlined-basic\" size=\"small\" variant=\"outlined\" label='Reason' /> */}\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.ShortNote ? details.ShortNote : 'NA'}\r\n                                    </Typography>\r\n                                    {/* <TextField className={classes.textField} value={noteforDoctor} onChange={(e) => setnoteforDoctor(e.target.value)} id=\"outlined-basic\" size=\"small\" variant=\"outlined\" label='Note For Doctor' /> */}\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* <p className={classes.reason}>Regular Checkup</p> */}\r\n\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 16, marginBottom: 15, color: '#2C7FB2', marginTop: 30, fontWeight: 600, textDecoration: 'underline', textUnderlineOffset: '1px' }}>\r\n                                Vitals\r\n                            </Typography>\r\n\r\n                            <Grid container xs={12} style={{ color: '#707070', marginTop: 20 }}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Blood Pressure:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_BP ? details.Patient_BP : 'NA'} mmHg\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Pulse Rate:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_Plus ? details.Patient_Plus : 'NA'} bpm\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    SpO2:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_SPO2 ? details.Patient_SPO2 : 'NA'} %\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 30, color: '#707070' }}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Temperature:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_Temp ? details.Patient_Temp : 'NA'} c\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Weight:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_Weight ? details.Patient_Weight : 'NA'} kg\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Height:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_Height ? details.Patient_Height : 'NA'} cm\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ color: '#707070' }}>\r\n                                <Grid item xs={12} >\r\n                                    <center>\r\n                                        <Button variant=\"contained\" onClick={handleGoBack} className={classes.btnCancle} style={{ marginRight: 40 }}  >\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" onClick={() => handleTreat()} className={classes.btnTreat}  >\r\n                                            Treat\r\n                                        </Button>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n                    {deleteModal ? <Cancel_Appointment show={deleteModal} data={details} handleclose={()=>setDeleteModal(false)} /> : null}\r\n                </Grid>\r\n\r\n            </Grid > {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Avatar, TextField, Typography, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { UpdateAppointmentDetails } from '../Apis/PatientInQueue/Generate_Prescription/Medicines_Table/index';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    btnGeneratePdf: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 160,\r\n        fontSize: '12px'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 160,\r\n        fontSize: '12px'\r\n\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: '#707070',\r\n        border: '1px solid #F0F0F0',\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function DoctorTreatPatient() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [details, setdetails] = useState([]);\r\n    const [prescriptionnote, setprescriptionnote] = useState('');\r\n    const [followupDate, setfollowupDate] = useState('');\r\n    const [costcode, setcostcode] = useState('');\r\n\r\n    useEffect(() => {\r\n        setdetails(location.state.detail);\r\n    }, [])\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleGeneratePdf = () => {\r\n        navigate('/DoctorGeneratePrescription', {\r\n            state: { detail: location.state.detail }\r\n        })\r\n    };\r\n\r\n    const Edit_Appointment = async () => {\r\n        const obj = {\r\n            PrescriptionNote: prescriptionnote,\r\n            FollowupDate: followupDate,\r\n            CostCode: costcode,\r\n            id: details.id\r\n        }\r\n        const editAppointment = await UpdateAppointmentDetails(obj);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Treat\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginRight: 20 }} >\r\n                            <center>\r\n                                <div style={{ paddingBottom: 20 }}>\r\n                                    {details.ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={details.ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {details.FirstName} {details.LastName}\r\n                                </Typography>\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 20 }}>\r\n                                    <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Status\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070' }}>\r\n                                            {details.AppointmentStatus}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Channel\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070' }}>\r\n                                            {details.AppointmentChannel}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 30 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Location :\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Contact :\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Email Id :\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.Address} {details.City}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.MobileNo}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.Email != null ? details.Email : 'Not Provided'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={8}>\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginRight: 20, marginLeft: 25 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 17, color: '#2C7FB2', marginBottom: 15, textDecoration: 'underline', fontWeight: 600, textUnderlineOffset: '1px' }}>\r\n                                Follow Up\r\n                                <a href=\"/DoctorReports\" style={{ float: 'right', color: '#2C7FB2', fontSize: '12px', textUnderlineOffset: '1px' }}>\r\n                                    Upload Prescription\r\n                                </a>\r\n                            </Typography>\r\n\r\n                            <Grid container xs={12} >\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField className={classes.textField} onChange={(e) => setfollowupDate(e.target.value)} id=\"outlined-basic\" type=\"date\" size=\"small\" variant=\"outlined\" />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} >\r\n                                    <TextField className={classes.textField} onChange={(e) => setcostcode(e.target.value)} id=\"outlined-basic\" label=\"Cost Code\" type='number' size=\"small\" variant=\"outlined\" style={{ float: 'right' }} />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12}>\r\n                                    <TextField className={classes.textField} multiline\r\n                                        rows={5}\r\n                                        rowsMax={5} id=\"outlined-basic\" onChange={(e) => setprescriptionnote(e.target.value)} label=\"Diagnosis/Prescription\" variant=\"outlined\"\r\n                                        style={{ width: 710, marginTop: 60 }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} >\r\n                                    <center>\r\n                                        <Button variant=\"contained\" className={classes.btnUpload} onClick={handleGoBack} style={{ marginRight: 40 }}  >\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" onClick={() => { handleGeneratePdf(); Edit_Appointment(); }} className={classes.btnGeneratePdf}  >\r\n                                            Continue\r\n                                        </Button>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Prescription_VinayH7B8_38 (1).28874247.pdf\";","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Switch, ButtonGroup, FormControl, TextField, Typography, Button, Divider, Card, CardContent, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, Grid, } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDispatch, connect, useSelector } from 'react-redux';\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction DoctorSelectedMedicineList({ data }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const selectedMedicine = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    function handleRemove(id) {\r\n        dispatch({ type: 'DELETE_MEDICINE', payload: id })\r\n    }\r\n\r\n    return (\r\n        <Grid container style={{ height: 280, overflowY: 'scroll' }} >\r\n            {data.map((item, index) => {\r\n                return (\r\n                    <>\r\n                        <Card elevation={1} style={{ width: 730, marginTop: 10, color: '#2C7FB2', paddingBottom: 0 }}>\r\n                            <CardContent style={{ marginTop: '-5px', paddingBottom: 0 }}>\r\n                                <Grid container xs={12}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 16, fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                        }}>\r\n                                            {item.MedicineName}\r\n                                        </Typography>\r\n                                        {/* <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 12, fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            color: '#707070',\r\n                                            marginLeft: 10\r\n                                        }}>\r\n                                            ( {item.BeforeMeal == true ? 'Before Meal' : 'After Meal'} )\r\n                                        </Typography> */}\r\n                                    </Grid>\r\n\r\n                                    <Grid container item xs={4}>\r\n                                        <Grid item xs={7}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 12, fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 600,\r\n                                                color: '#707070',\r\n                                                float: 'right'\r\n\r\n                                            }}>\r\n                                                ( {item.BeforeMeal == true ? 'Before Meal' : 'After Meal'} )\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={4} style={{ paddingLeft: 27 }}>\r\n                                            <DeleteIcon onClick={() => handleRemove(item)} style={{ color: '#707070', cursor: 'pointer' }} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12} style={{ overflow: 'auto' }}>\r\n                                    <Grid item sm={1} style={{\r\n                                        fontSize: 12,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        color: '#707070'\r\n                                    }}>\r\n                                        Days:\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 12,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            color: '#707070'\r\n                                        }} >\r\n                                            {item.DoseDays}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item sm={1} style={{\r\n                                        fontSize: 12,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        color: '#707070'\r\n                                    }}>\r\n                                        Times:\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 12,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            color: '#707070'\r\n                                        }} >\r\n                                            {item.DoseTime}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item sm={1} style={{\r\n                                        fontSize: 12,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        color: '#707070'\r\n                                    }}>\r\n                                        Morning:\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 12,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            color: '#707070'\r\n                                        }} >\r\n                                            {item.MorningDose == true ? '1' : '0'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1} style={{\r\n                                        fontSize: 12,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        color: '#707070'\r\n                                    }}>\r\n                                        Afternoon:\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 12,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            color: '#707070',\r\n                                            marginLeft: 10\r\n                                        }}>\r\n                                            {item.AfternoonDose == true ? '1' : '0'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1} style={{\r\n                                        fontSize: 12,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        color: '#707070'\r\n                                    }}>\r\n                                        Evening:\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 12,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            color: '#707070'\r\n                                        }}>\r\n                                            {item.AfternoonDose == true ? '1' : '0'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1} style={{\r\n                                        fontSize: 12,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        color: '#707070'\r\n                                    }}>\r\n                                        Night:\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={1}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 12,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            color: '#707070'\r\n                                        }}>\r\n                                            {item.NightDose == true ? '1' : '0'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </CardContent>\r\n                        </Card>\r\n                    </>\r\n                );\r\n            })}\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontSize: '16px'\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 90,\r\n        fontSize: '10px'\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 90,\r\n        fontSize: '10px'\r\n    },\r\n    btnPreview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 150,\r\n        fontSize: '12px'\r\n    },\r\n    btngenerate: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 150,\r\n        fontSize: '12px'\r\n    },\r\n}));\r\n\r\nexport default connect()(DoctorSelectedMedicineList);","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, Typography, Grid, TextField, Button, InputLabel, Radio } from \"@material-ui/core\";\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { generatePrescription, UpdateAppointmentDetails, paymentDetails } from '../../../Apis/PatientInQueue/Generate_Prescription/Medicines_Table/index';\r\nimport { useDispatch, connect, useSelector } from 'react-redux';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst PaymentMode = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [title, settitle] = React.useState('');\r\n    const [description, setdescription] = React.useState('');\r\n    const [paymentmode, setpaymentmode] = React.useState('');\r\n    const [fees, setfees] = React.useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const Edit_Appointment = async () => {\r\n        const obj = {\r\n            AppointmentStatus: 'Completed',\r\n            id: data[0].id\r\n        }\r\n        const editAppointment = await UpdateAppointmentDetails(obj);\r\n    }\r\n\r\n\r\n    const handleGeneratePDF = async () => {\r\n        const obj = {\r\n            UserId: data[0].UserId,\r\n            id: data[0].id,\r\n        }\r\n        const request = await generatePrescription(obj);\r\n        if (request.success === \"200\") {\r\n            dispatch({ type: 'RESET_MEDICINE_ITEM' });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handlePaymentDetails = async () => {\r\n        var sessiondata = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(sessiondata);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n        const obj = {\r\n            ClinicId: clinicid,\r\n            DoctorId: doctorid,\r\n            PatientId: data[0].UserId,\r\n            AppointmentId: data[0].id,\r\n            PaymentAmount: fees,\r\n            PaymentMode: paymentmode,\r\n        }\r\n        const request = await paymentDetails(obj);\r\n        if (request.success === \"200\") {\r\n            alert(request.message);\r\n            dispatch({ type: 'RESET_MEDICINE_ITEM' });\r\n        }\r\n    }\r\n\r\n\r\n    const handleFunctions = () => {\r\n        Edit_Appointment().then(data => {\r\n            handleGeneratePDF().then(data => {\r\n                handlePaymentDetails();\r\n                navigate('/DoctorDashboard')\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={4} style={{ border: '1px solid lightgray', borderLeft: '0px', borderTop: '0px' }}>\r\n                                <center>\r\n                                    <img src={data[0].ProfileImage} style={{ borderRadius: 200, height: 100, width: 100, marginTop: 20 }}></img>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid container item xs={12} sm={8} style={{ border: '1px solid lightgray', borderLeft: '0px', borderTop: '0px', borderRight: 0 }}>\r\n                                <Grid item xs={12} style={{ borderBottom: '1px solid lightgray' }}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 20,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            fontWeight: 600\r\n                                        }}>\r\n                                            {data[0].FirstName} {data[0].LastName}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 16,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            marginTop: 10,\r\n                                            marginBottom: 10,\r\n                                        }}>\r\n                                            PID- {data[0].UserId}\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} container >\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 18,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                borderRight: '1px solid lightgray',\r\n                                                paddingTop: 10,\r\n                                                paddingBottom: 10,\r\n                                            }}>\r\n                                                Mobile No\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 18,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                borderRight: '0px',\r\n                                                paddingTop: 10,\r\n                                                paddingBottom: 10,\r\n                                            }}>\r\n                                                Date\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600,\r\n                                                borderRight: '1px solid lightgray',\r\n                                                paddingBottom: 10,\r\n\r\n\r\n                                            }}>\r\n                                                {data[0].MobileNo}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600,\r\n                                                borderRight: '0px',\r\n                                                paddingBottom: 10,\r\n\r\n\r\n                                            }}>\r\n                                                {data[0].AppointmentDate}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={12}>\r\n                                <center>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600,\r\n                                        paddingTop: 10,\r\n                                        paddingBottom: 10,\r\n\r\n                                    }}>\r\n                                        Title\r\n                                    </Typography>\r\n                                </center>\r\n                                <center>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600,\r\n                                        borderBottom: '1px solid lightgray',\r\n                                        paddingBottom: 10,\r\n                                    }}>\r\n                                        {data[0].Title}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={12} container >\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 18,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            borderRight: '1px solid lightgray',\r\n                                            paddingTop: 10,\r\n                                            paddingBottom: 10,\r\n                                        }}>\r\n                                            Payment Mode\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 18,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            borderRight: '0px',\r\n                                            paddingTop: 10,\r\n                                            paddingBottom: 10,\r\n                                        }}>\r\n                                            Total Fee\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <center>\r\n                                        <Grid item xs={12} container style={{ borderRight: '1px solid lightgray' }}>\r\n                                            <Grid item xs={6}>\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\" >\r\n                                                    <Radio\r\n                                                        checked={paymentmode === 'Cash'}\r\n                                                        color='primary'\r\n                                                        onChange={(e) => setpaymentmode(e.target.value)}\r\n                                                        value=\"Cash\"\r\n                                                        name=\"radio-button-demo\"\r\n                                                        inputProps={{ 'aria-label': 'Cash' }}\r\n\r\n                                                    />Cash</InputLabel>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                                                    <Radio\r\n                                                        checked={paymentmode === 'Online'}\r\n                                                        color='primary'\r\n                                                        onChange={(e) => setpaymentmode(e.target.value)}\r\n                                                        value=\"Online\"\r\n                                                        name=\"radio-button-demo\"\r\n                                                        inputProps={{ 'aria-label': 'Online' }}\r\n\r\n                                                    />Online</InputLabel>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <center>\r\n                                        <TextField className={classes.inputFields} type='number' onChange={(e) => setfees(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Fees\" variant=\"outlined\" />\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handlemodal} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handleFunctions} style={{ float: 'left', marginLeft: 20 }}>Finish</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    inputFields: {\r\n        width: 180,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12,\r\n        position: 'relative'\r\n    },\r\n}));\r\n\r\n\r\nexport default connect()(PaymentMode);\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Switch, Typography, Button, InputBase, Grid, Paper, Card, CardContent, Link } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Pdf from '../Prescription_VinayH7B8_38 (1).pdf';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { fetchMedicineData, addPrescriptionDetails, generatePrescription, UpdateAppointmentDetails, } from '../Apis/PatientInQueue/Generate_Prescription/Medicines_Table/index';\r\nimport { Search_Medicine } from '../Apis/Medicines/index';\r\nimport { useDispatch, connect, useSelector } from 'react-redux';\r\nimport DoctorSelectedMedicineList from './Generate_Prescription/selected_medicines';\r\nimport PaymentMode from './Generate_Prescription/Payment_Mode/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'MedicineId',\r\n        headerName: 'Medicine Id',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'MedicineName',\r\n        headerName: 'Name',\r\n        width: 180,\r\n        editable: true,\r\n    },\r\n\r\n];\r\n\r\nfunction DoctorGeneratePrescription() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [details, setdetails] = useState([location.state.detail]);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [counterbtn, setCounterBtn] = React.useState(0);\r\n    const [counterbtn2, setCounterBtn2] = React.useState(0);\r\n    const [btnColor, setBtnColor] = React.useState('white');\r\n    const [dosestring1, setdosestring1] = React.useState(false);\r\n    const [dosestring2, setdosestring2] = React.useState(false);\r\n    const [dosestring3, setdosestring3] = React.useState(false);\r\n    const [dosestring4, setdosestring4] = React.useState(false);\r\n    const [medicineData, setmedicineData] = useState([]);\r\n    const [medicineDetails, setmedicineDetails] = useState([]);\r\n    const [prescriptiondata, setprescriptiondata] = React.useState('');\r\n    const [beforeMeal, setbeforeMeal] = React.useState(false);\r\n    const [openmodal, setopenmodal] = React.useState(false);\r\n    const [searchterm, setsearchterm] = useState('');\r\n\r\n    console.log(details)\r\n    const [defaultarray, setdefaultarray] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const selectedMedicine = useSelector(state => state);\r\n\r\n    const fetchmedicines = async () => {\r\n        const medicines = await fetchMedicineData();\r\n        if (medicines) {\r\n            setmedicineData(medicines);\r\n        }\r\n    }\r\n\r\n    const SearchMedicine = async (searchterm) => {\r\n        try {\r\n            const request = await Search_Medicine(searchterm);\r\n            setmedicineData(request)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleRowClick = async (id) => {\r\n        setmedicineDetails(id);\r\n    }\r\n\r\n    const add_medicine_in_array = () => {\r\n        if (medicineDetails.MedicineName) {\r\n            var data = localStorage.getItem(\"userdata\");\r\n            let parsed = JSON.parse(data);\r\n            let clinicid = parsed.ClinicId;\r\n            let doctorid = parsed.userid;\r\n            setdefaultarray(defaultarray + 1);\r\n            const obj = {\r\n                'id': defaultarray,\r\n                'UserId': details[0].UserId,\r\n                'ClinicId': clinicid,\r\n                'DoctorId': doctorid,\r\n                'AppointmentId': details[0].id,\r\n                'MedicineName': medicineDetails.MedicineName,\r\n                'DoseTime': counterbtn2,\r\n                'DoseDays': counterbtn,\r\n                'MorningDose': dosestring1,\r\n                'AfternoonDose': dosestring2,\r\n                'NightDose': dosestring4,\r\n                'BeforeMeal': beforeMeal,\r\n                'PrescriptionNote': details[0].PrescriptionNote,\r\n                'MedicineId': medicineDetails.MedicineId\r\n            }\r\n            dispatch({ type: 'ADD_MEDICINE', payload: obj })\r\n            setprescriptiondata(selectedMedicine.reducer);\r\n        }\r\n        else {\r\n            alert('Please Select Medicine');\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    const handleaddPrescriptionDetails = async () => {\r\n        if (selectedMedicine.reducer.length <= 0) {\r\n            alert(\"Please add some medicines then try\")\r\n            return;\r\n        }\r\n        setopenmodal(true);\r\n        const requestReports = await addPrescriptionDetails(selectedMedicine.reducer);\r\n    }\r\n\r\n\r\n    const Edit_Appointment = async () => {\r\n        const obj = {\r\n            AppointmentStatus: 'Completed',\r\n            id: details[0].id\r\n        }\r\n        const editAppointment = await UpdateAppointmentDetails(obj);\r\n    }\r\n\r\n    const handleGeneratePDF = async () => {\r\n        const obj = {\r\n            UserId: details[0].UserId,\r\n            id: details[0].id,\r\n        }\r\n        const request = await generatePrescription(obj);\r\n        if (request.success === \"200\") {\r\n            dispatch({ type: 'RESET_MEDICINE_ITEM' });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchmedicines();\r\n    }, []);\r\n\r\n\r\n    const handleIncrement = (event) => {\r\n        setCounterBtn(counterbtn + 1);\r\n    };\r\n\r\n    const handleDecrement = (event) => {\r\n        if (counterbtn > 0) {\r\n            setCounterBtn(counterbtn - 1);\r\n        }\r\n    };\r\n\r\n    const handleIncrement2 = (event) => {\r\n        setCounterBtn2(counterbtn2 + 1);\r\n    };\r\n\r\n    const handleDecrement2 = (event) => {\r\n        if (counterbtn2 > 0) {\r\n            setCounterBtn2(counterbtn2 - 1);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setbeforeMeal(event.target.checked);\r\n    };\r\n\r\n    const onPreviewClick = () => {\r\n        window.open(Pdf);\r\n    }\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleContinue = () => {\r\n        handleaddPrescriptionDetails().then(data=> {\r\n            Edit_Appointment().then(data=> {\r\n                handleGeneratePDF();\r\n                navigate('/DoctorPaymentDetails', { state: { detail: location.state.detail } })\r\n            })\r\n        }) \r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        dispatch({ type: 'RESET_MEDICINE_ITEM' });\r\n        navigate(-1);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Generate Prescription\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} style={{ marginTop: 1 }}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: 20, paddingBottom: 50 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    value={searchterm}\r\n                                    placeholder=\"Search by Medicines\"\r\n                                    onChange={(e) => setsearchterm(e.target.value)}\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n\r\n                                    }}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button onClick={() => SearchMedicine(searchterm)} className={classes.btnview} size=\"small\" style={{ fontSize: 12 }}>View</Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <DataGrid\r\n                            style={{ height: 350, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                            rows={medicineData}\r\n                            rowHeight={30}\r\n                            columns={columns}\r\n                            columnWidth={10}\r\n                            pageSize={10}\r\n                            onRowClick={(newSelection) => {\r\n                                handleRowClick(newSelection.row);\r\n                            }}\r\n                        />\r\n\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={8} style={{ marginTop: 1 }} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: 20, marginLeft: 20, marginRight: 25, height: 470 }}>\r\n                        <Typography className={classes.headingAddMedicine} variant=\"h6\" noWrap={true}  >\r\n                            Add Medicines\r\n                        </Typography>\r\n\r\n                        <center>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 600,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                color: '#2C7FB2',\r\n                                fontSize: '16px',\r\n                                marginTop: '-20px'\r\n                            }}>\r\n                                {medicineDetails.MedicineName ? medicineDetails.MedicineName : 'Not Provided'}\r\n                            </Typography>\r\n                        </center>\r\n\r\n                        <Grid container style={{ marginTop: 10 }} >\r\n                            <Grid item xs={12} sm={2} >\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#707070',\r\n                                    fontSize: 12\r\n                                }}>\r\n                                    Days\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={2} style={{ marginLeft: '-20px' }}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#707070',\r\n                                    fontSize: 12\r\n                                }}>\r\n                                    Times\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={4} style={{ marginLeft: '-20px' }}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#707070',\r\n                                    fontSize: 12\r\n                                }}>\r\n                                    Dosages\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={2} style={{ marginLeft: 40 }}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    float: 'right',\r\n                                    color: '#707070',\r\n                                    fontSize: 12,\r\n\r\n                                }}>\r\n                                    Before Meal\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={1}>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} >\r\n\r\n                                <Paper elevation={2} className={classes.paper} style={{ width: 70, height: 35, color: '#707070' }}>\r\n                                    <div style={{ marginTop: 1 }}> {counterbtn} </div>\r\n                                    <div>\r\n                                        <ArrowDropUpIcon size='small' onClick={handleIncrement} style={{ marginTop: '-50px', marginLeft: 30, color: '#707070', cursor: 'pointer' }} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <ArrowDropDownIcon size='small' onClick={handleDecrement} style={{ marginTop: '-70px', marginLeft: 30, color: '#707070', cursor: 'pointer' }} />\r\n                                    </div>\r\n                                </Paper>\r\n\r\n                                {/* <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n                                        <Button onClick={handleIncrement}>+</Button>\r\n                                        <Button disabled>{counterbtn}</Button>\r\n                                        <Button onClick={handleDecrement}>-</Button>\r\n                                    </ButtonGroup> */}\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={2} style={{ marginLeft: '-20px' }}>\r\n\r\n                                <Paper elevation={2} className={classes.paper} style={{ width: 70, height: 35, color: '#707070' }}>\r\n                                    <div style={{ marginTop: 1 }}> {counterbtn2} </div>\r\n                                    <div>\r\n                                        <ArrowDropUpIcon size='small' onClick={handleIncrement2} style={{ marginTop: '-50px', marginLeft: 30, color: '#707070', cursor: 'pointer' }} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <ArrowDropDownIcon size='small' onClick={handleDecrement2} style={{ marginTop: '-70px', marginLeft: 30, color: '#707070', cursor: 'pointer' }} />\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={5} style={{ marginLeft: '-20px' }} >\r\n                                {/* <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained button group\" style={{ marginTop: 5 }} > */}\r\n                                {dosestring1 !== true ? <Button onClick={() => setdosestring1(true)} variant=\"contained\" color=\"primary\" size='small' style={{ color: 'black', backgroundColor: 'white', fontSize: '12px', marginTop: 5 }}>Morning</Button> :\r\n                                    <Button onClick={() => setdosestring1(false)} variant=\"contained\" color=\"primary\" size='small' style={{ color: 'White', backgroundColor: '#2C7FB2', fontSize: '12px', marginTop: 5 }}>Morning</Button>\r\n                                }\r\n                                {dosestring2 !== true ? <Button onClick={() => setdosestring2(true)} variant=\"contained\" color=\"primary\" size='small' style={{ color: 'black', backgroundColor: 'white', fontSize: '12px', marginTop: 5 }}>Afternoon</Button> :\r\n                                    <Button onClick={() => setdosestring2(false)} variant=\"contained\" color=\"primary\" size='small' style={{ color: 'White', backgroundColor: '#2C7FB2', fontSize: '12px', marginTop: 5 }}>Afternoon</Button>\r\n                                }\r\n                                {dosestring3 !== true ? <Button onClick={() => setdosestring3(true)} variant=\"contained\" color=\"primary\" size='small' style={{ color: 'black', backgroundColor: 'white', fontSize: '12px', marginTop: 5 }}>Evening</Button> :\r\n                                    <Button onClick={() => setdosestring3(false)} variant=\"contained\" color=\"primary\" size='small' style={{ color: 'White', backgroundColor: '#2C7FB2', fontSize: '12px', marginTop: 5 }}>Evening</Button>\r\n                                }\r\n                                {dosestring4 !== true ? <Button onClick={() => setdosestring4(true)} variant=\"contained\" color=\"primary\" size='small' style={{ color: 'black', backgroundColor: 'white', fontSize: '12px', marginTop: 5 }}>Night</Button> :\r\n                                    <Button onClick={() => setdosestring4(false)} variant=\"contained\" color=\"primary\" size='small' style={{ color: 'White', backgroundColor: '#2C7FB2', fontSize: '12px', marginTop: 5 }}>Night</Button>\r\n                                }\r\n\r\n                                {/* </ButtonGroup> */}\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={2} style={{ paddingLeft: 25 }}>\r\n                                <Switch\r\n                                    checked={beforeMeal.checkedB}\r\n                                    onChange={handleChange}\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    style={{ color: '#2C7FB2' }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={1} style={{ marginLeft: 10 }}>\r\n                                <Button onClick={add_medicine_in_array} variant=\"contained\" className={classes.btnAdd}  >\r\n                                    Add\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            {/* <Grid container xs={12} style={{ color: '#707070', marginTop: '10px' }}>\r\n                                <Grid item xs={12} >\r\n                                    <center>\r\n                                        <Button variant=\"contained\" className={classes.btnCancle} style={{ marginRight: 40 }}  >\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button onClick={add_medicine_in_array} variant=\"contained\" className={classes.btnAdd}  >\r\n                                            Add\r\n                                        </Button>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid> */}\r\n\r\n\r\n                            {/* medicine list in grid */}\r\n                            {selectedMedicine.reducer.length > 0 ? <DoctorSelectedMedicineList data={selectedMedicine.reducer} /> :\r\n                                <>\r\n                                    <Card elevation={3} style={{ width: 750, marginTop: 15, color: '#2C7FB2', height: 280, fontWeight: 400 }}>\r\n                                        <CardContent >\r\n                                            No Medicine Selected\r\n                                        </CardContent>\r\n                                    </Card>\r\n\r\n                                </>}\r\n\r\n\r\n                            <Grid container xs={12} style={{ marginTop: '10px' }}>\r\n                                <Grid item xs={12} >\r\n                                    <center>\r\n                                        <Button onClick={handleGoBack} className={classes.btnPreview} style={{ marginRight: 40 }}  >\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" onClick={() => handleContinue() } className={classes.btngenerate} >\r\n                                            Continue\r\n                                        </Button>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {openmodal ? <PaymentMode show={openmodal} data={details} handlemodal={() => setopenmodal(false)} /> : ''}\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontSize: '16px',\r\n        textDecoration: 'underline',\r\n        fontWeight: 600,\r\n        textUnderlineOffset: '1px'\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 90,\r\n        fontSize: '10px'\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 90,\r\n        fontSize: '10px'\r\n    },\r\n    btnPreview: {\r\n        color: '#fff',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        fontSize: '12px',\r\n        backgroundColor: '#2C7FB2 !important'\r\n    },\r\n    btngenerate: {\r\n        color: '#fff',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        fontSize: '12px',\r\n        backgroundColor: '#2C7FB2 !important'\r\n\r\n    },\r\n}));\r\n\r\nexport default connect()(DoctorGeneratePrescription);","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const Register_Patient = async (obj) => {\r\n    try {\r\n        const registerPatient = await axios.post(ip + 'Web_AddPatient', obj)\r\n        return JSON.stringify(registerPatient?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const EditPatient = async (obj) => {\r\n    try {\r\n        const registerPatient = await axios.patch(ip + 'Web_EditPatient', obj)\r\n        return JSON.stringify(registerPatient?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { EditPatient } from '../../../Apis/Clinic_Patients/Edit_Patient';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function Edit_Patient({ show, data, handleCloseEditmodal }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    let obj = {};\r\n    obj = data;\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [firstnm, setfirstnm] = useState(obj ? obj.FirstName : '');\r\n    const [lastnm, setlastnm] = useState(obj ? obj.LastName : '');\r\n    const [mobile, setmobile] = useState(obj ? obj.MobileNo : '');\r\n    const [email, setemail] = useState(obj ? obj.Email : '');\r\n    const [dob, setdob] = useState(obj ? obj.DOB : '');\r\n    const [gender, setgender] = useState(obj ? obj?.Gender : '');\r\n    const [address, setaddress] = useState(obj ? obj?.Address : '');\r\n    const [city, setcity] = useState(obj ? obj?.City : '');\r\n    const [pincode, setpincode] = useState(obj ? obj?.Pincode : '');\r\n    const [state, setstate] = useState(obj ? obj?.State : '');\r\n    const [country, setcountry] = useState(obj ? obj?.Country : '');\r\n    const [height, setheight] = useState(obj ? obj?.Height : '');\r\n    const [weight, setweight] = useState(obj ? obj?.Weight : '');\r\n\r\n    const EditDetails = async () => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n        let clinicid = parsed.ClinicId;\r\n\r\n        const object = {\r\n            ClinicId: clinicid,\r\n            UserId: obj.UserId,\r\n            FirstName: firstnm,\r\n            LastName: lastnm,\r\n            MobileNo: mobile,\r\n            Email: email,\r\n            DOB: dob,\r\n            Gender: gender,\r\n            Address: address,\r\n            City: city,\r\n            Pincode: pincode,\r\n            State: state,\r\n            Country: country,\r\n            Height: height,\r\n            Weight: weight\r\n        }\r\n        try {\r\n            const editPatientRequest = await EditPatient(object);\r\n            const parse = JSON.parse(editPatientRequest);\r\n            alert(parse.message);\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {/* Edit Patient Details */}\r\n\r\n            <Dialog\r\n                open={show}\r\n                onClose={handleCloseEditmodal}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                <center>\r\n                                    <div style={{ paddingTop: 10 }}>\r\n                                        <TextField className={classes.inputFields} value={firstnm} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setfirstnm(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={lastnm} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setlastnm(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={mobile} onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setmobile(e.target.value)\r\n                                            }\r\n                                        }} onInput={(e) => {\r\n                                            e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                        }} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Mobile Number\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={email} onChange={(e) => setemail(e.target.value)} id=\"outlined-basic\" type=\"email\" size=\"small\" label=\"Email Id\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={dob} onChange={(e) => setdob(e.target.value)} id=\"outlined-basic\" type=\"date\" size=\"small\" label=\"DOB\" variant=\"outlined\" />\r\n                                        <FormControl variant=\"outlined\" size='small' className={classes.formControl}  >\r\n                                            <Select\r\n                                                className={classes.inputFields}\r\n                                                native\r\n                                                size='small'\r\n                                                value={gender}\r\n                                                onChange={(e) => setgender(e.target.value)}\r\n                                                label=\"Gender\"\r\n                                                inputProps={{\r\n                                                    name: 'gender',\r\n                                                    id: 'outlined-gender-native-simple',\r\n                                                }}\r\n\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Gender</option>\r\n                                                <option value='Male'>Male</option>\r\n                                                <option value='Female'>Female</option>\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <div style={{ paddingTop: 10 }}>\r\n                                        <TextField className={classes.inputFields} multiline value={address} onChange={(e) => setaddress(e.target.value)}\r\n                                            rows={2}\r\n                                            rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                        />\r\n                                        <TextField className={classes.inputFields} value={city} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setcity(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={pincode} onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setpincode(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={state} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setstate(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={country} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setcountry(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" />\r\n                                        <Grid container>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <center>\r\n                                                    <TextField className={classes.inputFields} value={height} onChange={(e) => setheight(e.target.value)} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Height\" variant=\"outlined\" style={{ width: 145, float: 'right', marginRight: 5 }} />\r\n                                                </center>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <center>\r\n                                                    <TextField className={classes.inputFields} value={weight} onChange={(e) => setweight(e.target.value)} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Weight\" variant=\"outlined\" style={{ width: 150, float: 'left', }} />\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={EditDetails} style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Update\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n\r\nexport const Delete_Patient_Details = async (UserId) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'DeletePatient', { UserId: UserId });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Delete_Patient_Details } from '../../../Apis/Clinic_Patients/Delete_Patient';\r\n\r\nconst Delete_Patient = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (PatientId) => {\r\n\r\n        const request = await Delete_Patient_Details(PatientId);\r\n        let response=JSON.parse(request);\r\n        if(response.success=='200'){\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else{\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Patient's Details?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data.UserId)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Patient\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, InputLabel, Typography, Button, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { Register_Patient } from '../../../Apis/Clinic_Patients/Patient_Registration';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Add_Patinet = ({ show, handleclose }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n\r\n    const [firstnm, setfirstnm] = useState('');\r\n    const [lastnm, setlastnm] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [dob, setdob] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [gender, setgender] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [city, setcity] = useState('');\r\n    const [pincode, setpincode] = useState('');\r\n    const [state, setstate] = useState('');\r\n    const [country, setcountry] = useState('');\r\n    const [height, setheight] = useState('');\r\n    const [weight, setweight] = useState('');\r\n    const [showPassword, setshowPassword] = useState(false);\r\n\r\n    const PatientRegistration = async (firstnm, lastnm, mobile, password, email, dob, gender, address, city, pincode, state, country, height, weight) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const date = new Date();\r\n        const now = date.toISOString().split('T')[0];\r\n    //     try {\r\n    //         const registration = await Register_Patient(clinicid, firstnm, lastnm, mobile, password, email, dob, gender, address, city, pincode, state, country, height, weight, now);\r\n    //         let parse = JSON.parse(registration);\r\n    //         if (parse.success === \"200\") {\r\n    //             alert(parse.message);\r\n    //             handleclose();\r\n    //             window.location.reload()\r\n    //         }\r\n    //         else {\r\n    //             alert(parse.message);\r\n    //         }\r\n    //     } catch (e) {\r\n    //         console.log(e)\r\n    //     }\r\n\r\n    // }\r\n    if (firstnm.trim() == '' || lastnm.trim() == '' || mobile.trim() == '' || password.trim() == '' || dob.trim() == '' || gender.trim() == '') {\r\n               alert('Please Enter Mandatory fields')\r\n                return;\r\n            }\r\n            const obj = {\r\n                ClinicId: clinicid,\r\n                FirstName: firstnm,\r\n                LastName: lastnm,\r\n                MobileNo: mobile,\r\n                Password: password,\r\n                Email: email,\r\n                DOB: dob,\r\n                Gender: gender,\r\n                Address: address,\r\n                City: city,\r\n                Pincode: pincode,\r\n                State: state,\r\n                Country: country,\r\n                Height: height,\r\n                Weight: weight,\r\n                createdDate: now\r\n            }\r\n    \r\n            try {\r\n                const registration = await Register_Patient(obj);\r\n                let parse = JSON.parse(registration);\r\n                if (parse.success === \"200\") {\r\n                    alert(parse.message);\r\n                    // setOpenmodal(false);\r\n                    window.location.reload()\r\n                } else {\r\n                    alert(parse.message);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    \r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setshowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Register New Patient\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                <center>\r\n                                    <div>\r\n                                        <TextField className={classes.inputFields} value={firstnm}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setfirstnm(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            id=\"outlined-basic\" size=\"small\" placeholder=\"First Name*\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={lastnm}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setlastnm(e.target.value)\r\n                                                }\r\n                                            }} id=\"outlined-basic\" size=\"small\" placeholder=\"Last Name*\" variant=\"outlined\" />\r\n                                        <TextField\r\n                                            className={classes.inputFields}\r\n                                            value={mobile}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setmobile(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            id=\"outlined-basic\"\r\n                                            type=\"number\"\r\n                                            size=\"small\"\r\n                                            placeholder=\"Mobile Number*\"\r\n                                            variant=\"outlined\"\r\n                                            onInput={(e) => {\r\n                                                e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                            }}\r\n                                        />\r\n                                        <TextField className={classes.inputFields} value={password} onChange={(e) => setpassword(e.target.value)}\r\n                                            id=\"outlined-basic\" type={showPassword ? 'text' : 'password'} size=\"small\" placeholder=\"Password*\" variant=\"outlined\"\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={handleClickShowPassword}\r\n                                                            onMouseDown={handleMouseDownPassword}\r\n                                                        >\r\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                ),\r\n                                            }} />\r\n                                        <TextField className={classes.inputFields} value={email} onChange={(e) => setemail(e.target.value)} id=\"outlined-basic\" type=\"email\" size=\"small\" placeholder=\"Email Id\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={dob} onChange={(e) => setdob(e.target.value)} id=\"outlined-basic\" type=\"date\" size=\"small\" placeholder=\"DOB*\" variant=\"outlined\" />\r\n                                        <FormControl variant=\"outlined\" size='small' className={classes.formControl}  >\r\n                                            <Select\r\n                                                className={classes.inputFields}\r\n                                                native\r\n                                                size='small'\r\n                                                value={gender}\r\n                                                label=\"Gender\"\r\n                                                onChange={(e) => setgender(e.target.value)}\r\n                                                inputProps={{\r\n                                                    name: 'gender',\r\n                                                    id: 'outlined-gender-native-simple',\r\n                                                }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Gender</option>\r\n                                                <option value='Male'>Male</option>\r\n                                                <option value='Female'>Female</option>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <div>\r\n                                        <TextField className={classes.inputFields} multiline\r\n                                            onChange={(e) => {\r\n                                                setaddress(e.target.value)\r\n                                            }}\r\n                                            rows={2}\r\n                                            rowsMax={6} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            className={classes.inputFields}\r\n                                            value={city}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setcity(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            id=\"outlined-basic\"\r\n                                            size=\"small\"\r\n                                            placeholder=\"City\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField className={classes.inputFields} value={pincode} onChange={(e) => setpincode(e.target.value)} id=\"outlined-basic\" size=\"small\" placeholder=\"Pincode\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={state}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setstate(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            id=\"outlined-basic\" size=\"small\" placeholder=\"State\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={country}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setcountry(e.target.value)\r\n                                                }\r\n                                            }} id=\"outlined-basic\" size=\"small\" placeholder=\"Country\" variant=\"outlined\" />\r\n                                        <TextField\r\n                                            className={classes.inputFields}\r\n                                            value={height}\r\n                                            onChange={(e) => setheight(e.target.value)}\r\n                                            id=\"outlined-basic\"\r\n                                            size=\"small\"\r\n                                            placeholder=\"Height\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField className={classes.inputFields} value={weight} onChange={(e) => setweight(e.target.value)} id=\"outlined-basic\" size=\"small\" placeholder=\"Weight\" variant=\"outlined\" />\r\n\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={handleclose} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={() => PatientRegistration(firstnm, lastnm, mobile, password, email, dob, gender, address, city, pincode, state, country, height, weight)} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Register\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}))\r\n\r\nexport default Add_Patinet\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Avatar, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, InputLabel, Typography, Button, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { FixedSizeList } from 'react-window';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Register_Patient } from '../Apis/Clinic_Patients/Patient_Registration';\r\nimport Edit_Patient from './Clinic_Patients/Edit_Patient/index';\r\nimport Delete_Patient from './Clinic_Patients/Delete_Patient/index';\r\nimport Add_Patinet from './Clinic_Patients/Add_Patient/index';\r\n\r\nconst getPatientDataApi = 'http://13.233.217.107:8080/api/Web_GetPatients';\r\nconst getPatientDetailsApi = 'http://13.233.217.107:8080/api/ShowPatientDetailUsingId';\r\nconst getPatientSearchApi = 'http://13.233.217.107:8080/api/Web_SearchPatients';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        // <List>\r\n        <ListItem button style={style} key={index} >\r\n            <ListItem >\r\n                <ListItemText\r\n                    style={{ borderBottom: '1px solid #F0F0F0' }}\r\n                    primary={`Title : Regular Checkup`}\r\n                    secondary={\r\n                        <React.Fragment>\r\n                            <Typography\r\n                                component={'span'}\r\n                                variant={\"body2\"}\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {`Date : 2021-09-11`}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n            <Divider />\r\n        </ListItem>\r\n        // </List>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DoctorClinicPatients() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(9);\r\n    const [counterbtn, setCounterBtn] = React.useState(0);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n    const [patientData, setpatientData] = useState([]);\r\n    const [patientDetails, setpatientDetails] = useState([]);\r\n    // const [firstnm, setfirstnm] = useState('');\r\n    // const [lastnm, setlastnm] = useState('');\r\n    // const [mobile, setmobile] = useState('');\r\n    // const [email, setemail] = useState('');\r\n    // const [dob, setdob] = useState('');\r\n    // const [password, setpassword] = useState('');\r\n    // const [gender, setgender] = useState('');\r\n    // const [address, setaddress] = useState('');\r\n    // const [city, setcity] = useState('');\r\n    // const [pincode, setpincode] = useState('');\r\n    // const [state, setstate] = useState('');\r\n    // const [country, setcountry] = useState('');\r\n    // const [height, setheight] = useState('');\r\n    // const [weight, setweight] = useState('');\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n    const [opendeletemodal, setOpenDeletemodal] = React.useState(false);\r\n    const [patientsearch, setpatientsearch] = useState([]);\r\n\r\n    // const PatientRegistration = async () => {\r\n    //     var data = await localStorage.getItem(\"userdata\");\r\n    //     let parsed = JSON.parse(data);\r\n    //     let clinicid = parsed.ClinicId;\r\n    //     const date = new Date();\r\n    //     const now = date.toISOString().split('T')[0];\r\n    //     if (firstnm.trim() == '' || lastnm.trim() == '' || mobile.trim() == '' || password.trim() == '' || dob.trim() == '' || gender.trim() == '') {\r\n    //         alert('Please Enter Mandatory fields')\r\n    //         return;\r\n    //     }\r\n    //     const obj = {\r\n    //         ClinicId: clinicid,\r\n    //         FirstName: firstnm,\r\n    //         LastName: lastnm,\r\n    //         MobileNo: mobile,\r\n    //         Password: password,\r\n    //         Email: email,\r\n    //         DOB: dob,\r\n    //         Gender: gender,\r\n    //         Address: address,\r\n    //         City: city,\r\n    //         Pincode: pincode,\r\n    //         State: state,\r\n    //         Country: country,\r\n    //         Height: height,\r\n    //         Weight: weight,\r\n    //         createdDate: now\r\n    //     }\r\n\r\n    //     try {\r\n    //         const registration = await Register_Patient(obj);\r\n    //         let parse = JSON.parse(registration);\r\n    //         if (parse.success === \"200\") {\r\n    //             alert(parse.message);\r\n    //             setOpenmodal(false);\r\n    //             window.location.reload()\r\n    //         } else {\r\n    //             alert(parse.message);\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    const fetchPatientData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const patientInfo = await axios.post(getPatientDataApi, { ClinicId: clinicid });\r\n        setpatientData(patientInfo?.data?.Patients);\r\n    }\r\n\r\n    const searchPatient = async (patientsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const patientsInfo = await axios.post(getPatientSearchApi, { ClinicId: clinicid, Name: patientsearch });\r\n            setpatientData(patientsInfo?.data?.Patients);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPatientData();\r\n    }, [])\r\n\r\n    const handleCellClick = async (userid) => {\r\n        const patientDetailedInfo = await axios.post(getPatientDetailsApi, { UserId: userid });\r\n        setpatientDetails(patientDetailedInfo?.data?.PatientDetails);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Clinic Patients\r\n                        <Button className={classes.btnregister} onClick={() => setOpenmodal(true)} style={{ float: 'right', marginRight: 20, width: '150px', fontFamily: 'Poppins', fontSize: 12.5, fontWeight: 400 }}>New Registration</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: theme.spacing(2) }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    placeholder=\"Search by Name\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n\r\n                                    }}\r\n                                    value={patientsearch}\r\n                                    onChange={(e) => setpatientsearch(e.target.value)}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button className={classes.btnview} onClick={() => searchPatient(patientsearch)} size=\"small\" style={{ fontSize: 12 }}>View</Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <DataGrid\r\n                            style={{ height: 370, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                            rows={patientData}\r\n                            rowHeight={30}\r\n                            columns={columns}\r\n                            columnWidth={10}\r\n                            pageSize={10}\r\n                            onRowClick={(newSelection) => {\r\n                                handleCellClick(newSelection.row.UserId);\r\n                            }}\r\n                        />\r\n\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={8} >\r\n                    <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20, padding: theme.spacing(2) }}>\r\n                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                            fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins', textDecorationLine: 'underline', textUnderlineOffset: '1px', textDecorationThickness: '1px',\r\n                            fontStyle: 'normal',\r\n\r\n                        }}>\r\n                            Profile\r\n                        </Typography>\r\n                        <center>\r\n                            <div style={{ paddingBottom: 10 }}>\r\n                                {patientDetails.ProfileImage ?\r\n                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={patientDetails.ProfileImage} /> :\r\n                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                                {/* <img src=\"Pallavi Kale.jpg\" style={{ borderRadius: 50, height: 100 }}></img> */}\r\n                            </div>\r\n\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 16,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 600\r\n                            }}>\r\n                                {patientDetails.FirstName ? patientDetails.FirstName : \"NA\"}   {patientDetails.LastName ? patientDetails.LastName : \"\"}\r\n\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 14,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 400\r\n                            }}>\r\n                                PID- {patientDetails.PatientId}\r\n                            </Typography>\r\n                            <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Mobile Number\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.MobileNo ? patientDetails.MobileNo : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Email ID\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', marginLeft: 10, marginRight: 10, fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.Email ? patientDetails.Email : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Date Of Birth\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.DOB ? patientDetails.DOB : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Age\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.Age ? patientDetails.Age : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12}>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Gender\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.Gender ? patientDetails.Gender : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Address\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                        {patientDetails.Address ? patientDetails.Address : 'NA'} {patientDetails.City} {patientDetails.State} {patientDetails.Country} {patientDetails.Pincode} \r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Medical History\r\n                                    </Typography>\r\n                                    <a onClick={() => navigate('/DoctorPatientMedicalHistory', {\r\n                                        state: { Details: patientDetails }\r\n                                    })} style={{ fontSize: 12, color: '#2C7FB2', fontFamily: 'Poppins', cursor: 'pointer', textDecoration: 'underline' }}>Patient History</a>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 15 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={() => setOpenDeletemodal(true)} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={() => setOpenEditmodal(true)} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </center>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                {/* Add new Patient Dialog */}\r\n                {openmodal ? <Add_Patinet show={openmodal} handleclose={() => setOpenmodal(false)} /> : null}\r\n\r\n\r\n                {openeditmodal ? <Edit_Patient show={openeditmodal} data={patientDetails} handleCloseEditmodal={() => setOpenEditmodal(false)} /> : null}\r\n\r\n\r\n                {/* for Delete User */}\r\n\r\n                {opendeletemodal ? <Delete_Patient show={opendeletemodal} data={patientDetails} handleclose={() => setOpenDeletemodal(false)} /> : null}\r\n\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControl, Radio, InputLabel, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Service Name', minWidth: 100 },\r\n    {\r\n        id: 'price',\r\n        label: 'Price',\r\n        minWidth: 50,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'discount',\r\n        label: 'Discount',\r\n        minWidth: 50,\r\n        align: 'right',\r\n    },\r\n];\r\n\r\nfunction createData(name, price, discount) {\r\n    return { name, price, discount };\r\n}\r\n\r\nconst rows = [\r\n    createData('Sonography', '1000', '10%'),\r\n    createData('Colposcopy', '2000', '20%'),\r\n    createData('Follicular Monitoring', '5000', '10%'),\r\n    createData('Blood Test', '200', '2%'),\r\n    createData('ECG', '2000', '10%'),\r\n    createData('X-RAY', '1000', '20%'),\r\n    createData('Sonography', '1000', '10%'),\r\n    createData('Colposcopy', '2000', '20%'),\r\n    createData('Follicular Monitoring', '5000', '10%'),\r\n    createData('Blood Test', '200', '2%'),\r\n    createData('ECG', '2000', '10%'),\r\n    createData('X-RAY', '1000', '20%'),\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        fontSize: 11\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n    description: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 145,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function ClinicServices() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <Navbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        Clinic Services\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            label=\"Search by Name/City\"\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>View Service</Button>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                            {/* <Grid item xs={12} sm={12}>\r\n                            <Paper className={classes.paper}> */}\r\n                            <TableContainer style={{ paddingTop: 20 }} >\r\n                                <Table className={classes.tbl} size=\"small\" stickyHeader aria-label=\"sticky table\" style={{ borderRadius: 5 }}>\r\n                                    <TableHead style={{}}>\r\n                                        <TableRow style={{ borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\r\n                                            {columns.map((column) => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{\r\n                                                        minWidth: column.minWidth,\r\n                                                        backgroundColor: '#78B088',\r\n                                                        color: '#fff',\r\n                                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                                        fontStyle: 'normal',\r\n                                                        fontWeight: 600,\r\n                                                        overflow: 'hidden',\r\n                                                        whiteSpace: 'nowrap',\r\n                                                        textOverflow: 'ellipsis',\r\n                                                    }}\r\n\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody >\r\n                                        {rows\r\n                                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            .map((row) => {\r\n                                                return (\r\n                                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                        {columns.map((column) => {\r\n                                                            const value = row[column.id];\r\n                                                            return (\r\n                                                                <TableCell key={column.id} align={column.align} style={{\r\n                                                                    color: '#2C7FB2',\r\n                                                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                                                    fontStyle: 'normal',\r\n                                                                    fontWeight: 600,\r\n                                                                    overflow: 'hidden',\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    textOverflow: 'ellipsis',\r\n                                                                    justifyContent: 'center',\r\n                                                                    fontSize: 12\r\n                                                                }}>\r\n                                                                    {column.format && typeof value === 'number'\r\n                                                                        ? column.format(value)\r\n                                                                        : value}\r\n\r\n                                                                </TableCell>\r\n                                                            );\r\n                                                        })}\r\n\r\n                                                    </TableRow>\r\n                                                );\r\n                                            })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 15, 25]}\r\n                                component=\"div\"\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            />\r\n\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={6} style={{marginLeft: 130, marginRight: 40, }}>\r\n                        <Paper className={classes.paper} elevation={6} style={{ padding: 20}}>\r\n                            <Typography variant=\"h6\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#00318B',\r\n\r\n                                }}>\r\n                                Facility\r\n                            </Typography>\r\n\r\n\r\n                            <Grid container spacing={2} style={{ paddingTop: 20 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>Sonography</Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>1000 Rs</Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} className={classes.facilitiesInput}>UltraSound</Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item sm={6} style={{ marginTop: '-40px'}}>\r\n                                    <Paper elevation={3} className={classes.groupreports}>\r\n                                        Sonography \r\n                                    </Paper>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            <Divider style={{ marginTop: 20, border: '1px solid #F0F0F0' }} />\r\n\r\n                            <Grid container spacing={2} style={{ paddingTop: 30, paddingRight: 20 }}>\r\n                                <Grid item sm={12} >\r\n                                    <Typography style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 500,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#00318B',\r\n\r\n                                    }}>\r\n                                        Description\r\n                                    </Typography>\r\n                                </Grid>\r\n                                   <Grid item xs={12}>\r\n                                   <p className={classes.description}>Description</p>\r\n\r\n                                   </Grid>\r\n\r\n       \r\n                            </Grid>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Box, FormControl, Radio, InputLabel, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 55\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function PatientDetails_SendIn() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleCancle = () => {\r\n        navigate(\"/dashboard\");\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <Navbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        Patient Details\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginRight: 20 }} >\r\n                            <center>\r\n                                <div style={{ paddingBottom: 20 }}>\r\n                                    <img src=\"Pallavi Kale.jpg\" style={{ borderRadius: 50, height: 90 }}></img>\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    color: 'gray'\r\n\r\n                                }}>\r\n                                    Pallavi Kale\r\n                                </Typography>\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 20 }}>\r\n                                    <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray' }}>\r\n                                            Status\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 18, color: 'gray' }}>\r\n                                            Send In\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray' }}>\r\n                                            Channel\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 18, color: 'gray' }}>\r\n                                            Walk-In\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 30 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray', marginBottom: 15 }}>\r\n                                            Location :\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray', marginBottom: 15 }}>\r\n                                            Contact :\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray', marginBottom: 15 }}>\r\n                                            Email Id :\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray', marginBottom: 15 }}>\r\n                                            Wakad, Pune\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray', marginBottom: 15 }}>\r\n                                            9095009797\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: 'gray', marginBottom: 15 }}>\r\n                                            pallavi.kale@rajyugsolutions.com\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={8}>\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginRight: 50, marginLeft: 40 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: 'gray', marginBottom: 15, color: '#00318B' }}>\r\n                                Reason\r\n                            </Typography>\r\n                            <p className={classes.reason}>Regular Checkup</p>\r\n\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: 'gray', marginBottom: 15, color: '#00318B', marginTop: 30 }}>\r\n                                Vitals\r\n                            </Typography>\r\n\r\n                            <Grid container xs={12} style={{ color: 'gray' , marginTop: 20}}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Blood Pressure:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    125\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Height:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    5.5\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    SpO2:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    99\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 30, color: 'gray' }}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Temperature:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    99.5\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Weight:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    55\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Pulse Rate:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    131\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ paddingTop: 20, color: 'gray' }}>\r\n                                <Grid item xs={12}>\r\n                                    <center>\r\n                                    <Button onClick={handleCancle} variant=\"contained\" className={classes.btnCancle}  >\r\n                                        Cancle\r\n                                    </Button>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, DialogTitle, DialogContentText, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { change_password } from '../../../Apis/Profile/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const Change_Password = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = useState(true);\r\n    const [showPassword, setshowPassword] = useState(false);\r\n    const [showConfirmPassword, setshowConfirmPassword] = useState(false);\r\n\r\n    const [currentpass, setcurrentpass] = useState('');\r\n    const [newpass, setnewpass] = useState('');\r\n    const [confirmpass, setconfirmpass] = useState('');\r\n\r\n    const handleClickShowPassword = () => {\r\n        setshowPassword(!showPassword);\r\n    };\r\n\r\n    const handleClickShowConfirmPassword = () => {\r\n        setshowConfirmPassword(!showConfirmPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    const handleMouseDownConfirmPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    const changePassword = async () => {\r\n\r\n        if (newpass == confirmpass) {\r\n            const obj = {\r\n                UserId: data.DoctorId,\r\n                CurrentPassword: currentpass,\r\n                NewPassword: newpass,\r\n                ConfirmPassword: confirmpass\r\n            }\r\n            const changepass = await change_password(obj);\r\n            let parse = JSON.parse(changepass);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                handlemodal()\r\n            }\r\n        } else {\r\n            alert('New Password & Confirm Password does not Match');\r\n        }\r\n\r\n}\r\n\r\nreturn (\r\n    <>\r\n        <Dialog\r\n            fullWidth={fullWidth}\r\n            maxWidth={maxWidth}\r\n            open={show}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Change Password\"}\r\n                <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <center>\r\n                                <TextField size='small' className={classes.inputFields} onChange={(e) => setcurrentpass(e.target.value)} id=\"outlined-basic\" label=\"Current Password\" variant=\"outlined\" />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    className={classes.inputFields}\r\n                                    id=\"password\"\r\n                                    required\r\n                                    label=\"Password\"\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    size='small'\r\n                                    onChange={(e) => setnewpass(e.target.value)}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                >\r\n                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    className={classes.inputFields}\r\n                                    id=\"password\"\r\n                                    required\r\n                                    label=\"Password\"\r\n                                    type={showConfirmPassword ? 'text' : 'password'}\r\n                                    size='small'\r\n                                    onChange={(e) => setconfirmpass(e.target.value)}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowConfirmPassword}\r\n                                                    onMouseDown={handleMouseDownConfirmPassword}\r\n                                                >\r\n                                                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={() => handlemodal(false)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button onClick={() => changePassword()} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </center>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n\r\n    </>\r\n);\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        width: 400,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, TextField, Avatar, Typography, IconButton, Button, Grid, Paper, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport axios from 'axios';\r\nimport ip from '../ipaddress/ip';\r\nimport { Change_Password } from './Profile/Change_Password/index';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function DoctorProfile() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [openChangePassDialog, setOpenChangePassDialog] = React.useState(false);\r\n    const [doctordata, setdoctordata] = useState({});\r\n    const [Clinicdetails, setClinicdetails] = useState([]);\r\n    const [openchangepassmodal, setopenchangepassmodal] = useState(false);\r\n\r\n    console.log(Clinicdetails)\r\n    useEffect(() => {\r\n        fetchDoctorProfile();\r\n        fetchClinicDetails();\r\n    }, [])\r\n\r\n    const fetchDoctorProfile = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let userid = parsed.userid;\r\n        const doctorInfo = await axios.post(ip + 'ShowDoctorDetailUsingId', { DoctorId: userid });\r\n        setdoctordata(doctorInfo?.data?.Doctor);\r\n\r\n    }\r\n\r\n    const fetchClinicDetails = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let ClinicId = parsed.ClinicId;\r\n        const doctorInfo = await axios.post(ip + 'ShowClinicDetailsUsingId', { ClinicId: ClinicId });\r\n        setClinicdetails(doctorInfo?.data?.Doctor);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n            {openchangepassmodal ? <Change_Password show={openchangepassmodal} data={doctordata} handlemodal={() => setopenchangepassmodal(false)} /> : null}\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        Profile\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} style={{ marginTop: 5 }}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginLeft: 10, marginRight: 25, marginBottom: 10, borderRadius: 20 }}>\r\n                        <Grid container style={{ marginTop: 10 }}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <div>\r\n                                        <Button onClick={() => navigate(\"/DoctorEditProfile\", {\r\n                                            state: { details: doctordata }\r\n                                        })} style={{ textTransform: 'capitalize', textDecoration: \"underline\", float: 'left', fontSize: '14px', fontWeight: 400, color: '#2C7FB2' }}>Edit Profile</Button>\r\n                                        <Button onClick={() => setopenchangepassmodal(true)} style={{ textTransform: 'capitalize', textDecoration: \"underline\", float: 'right', fontSize: '14px', fontWeight: 400, color: '#2C7FB2', marginRight: 10 }}>Change Password</Button>\r\n                                    </div>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12} style={{ marginTop: '-20px' }}>\r\n                                            <center>\r\n                                                {doctordata.ProfileImage ?\r\n                                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={doctordata.ProfileImage} /> :\r\n                                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <div style={{ paddingBottom: 20 }}>\r\n                                    </div>\r\n\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Dr. {doctordata.FirstName} {doctordata.LastName}\r\n                                    </Typography>\r\n\r\n                                    <Grid item xs={12} >\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                            }}>\r\n                                                DID - {doctordata.DoctorId}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n\r\n                                    <Grid container style={{ marginTop: 10, borderTop: '1px solid lightgray' }}>\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600,\r\n                                                marginTop: 10,\r\n                                            }}>\r\n                                                Category\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 10\r\n                                            }}>\r\n                                                Education\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5\r\n                                            }}>\r\n                                                {doctordata.Category}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5\r\n                                            }}>\r\n                                                {doctordata.Education}\r\n                                            </Typography>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 15,\r\n                                            }}>\r\n                                                Email\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 15\r\n                                            }}>\r\n                                                Date Of Birth\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5\r\n                                            }}>\r\n                                                {doctordata.Email ? doctordata.Email : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5\r\n                                            }}>\r\n                                                {doctordata.DOB ? doctordata.DOB : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 15,\r\n                                            }}>\r\n                                                Mobile No\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 15,\r\n                                            }}>\r\n                                                Experience\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5, paddingBottom: 5\r\n                                            }}>\r\n                                                {doctordata.MobileNo}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5, paddingBottom: 5\r\n                                            }}>\r\n                                                {doctordata.Experience ? doctordata.Experience : 'Not Provided'} years\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ borderLeft: '1px solid lightgray' }}>\r\n                                <center>\r\n                                    <div>\r\n                                        <Button\r\n                                            onClick={() => navigate(\"/DoctorEditClinicDetails\", {\r\n                                                state: { details: Clinicdetails }\r\n                                            })}\r\n                                            style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                textTransform: 'capitalize',\r\n                                                textDecoration: 'underline',\r\n                                                color: '#2C7FB2',\r\n                                                float: 'right'\r\n                                            }}>Edit Clinic Details</Button>\r\n                                    </div>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            {Clinicdetails.Logo ? <img src={Clinicdetails.Logo} style={{ height: '130px', width: '240px' }} /> : <img src=\"default-image.png\" style={{ height: '130px', width: '240px' }} />}\r\n                                        </Grid>\r\n                                        <Grid item xs={6} >\r\n                                            <center>\r\n                                                <LocalHospitalIcon style={{ fontSize: 40, color: '#2C7FB2',  marginTop: 10 }} />\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 18,\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    color: '#707070',\r\n                                                    fontWeight: 600,                                                  \r\n\r\n                                                }}>\r\n                                                    {doctordata.ClinicName}\r\n                                                </Typography>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14,\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    color: '#707070',\r\n                                                    fontWeight: 600\r\n\r\n                                                }}>\r\n                                                    REGNO:- {doctordata.ClinicRegistrationNumber ? doctordata.ClinicRegistrationNumber : 'Not Provided'}\r\n                                                </Typography>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14,\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    color: '#707070',\r\n                                                    fontWeight: 600\r\n\r\n                                                }}>\r\n                                                    GSTIN:- {doctordata.ClinicGstNumber ? doctordata.ClinicGstNumber : 'Not Provided'}\r\n                                                </Typography>\r\n\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600,\r\n                                                marginTop: 10\r\n                                            }}>\r\n                                                Email\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600,\r\n                                                marginTop: 10\r\n                                            }}>\r\n                                                Mobile\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 400\r\n                                            }}>\r\n                                                {Clinicdetails.ClinicEmail ? Clinicdetails.ClinicEmail : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 400\r\n\r\n                                            }}>\r\n                                                {Clinicdetails.ClinicMobileNo ? Clinicdetails.ClinicMobileNo : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} style={{ marginTop: 15 }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 400,\r\n                                                marginLeft: 20,\r\n                                                marginRight: 20\r\n                                            }}>\r\n                                                {doctordata.ClinicAddress != '' ? doctordata.ClinicAddress : 'Not Provided'} <br /> {doctordata.ClinicCity != '' ? doctordata.ClinicCity : 'Not Provided'} {doctordata.ClinicState != '' ? doctordata.ClinicState : 'Not Provided'} {doctordata.ClinicCountry != '' ? doctordata.ClinicCountry : 'Not Provided'} {doctordata.ClinicPincode}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n\r\n                                    <Grid container style={{ marginTop: 20 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <DateRangeIcon style={{ fontSize: 30, color: '#2C7FB2' }} />\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <DateRangeIcon style={{ fontSize: 30, color: '#2C7FB2' }} />\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                Morning Shift\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                Evening Shift\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                {doctordata.MorningStartTime != null ? doctordata.MorningStartTime : 'Not Provided'} - {doctordata.MorningEndTime != null ? doctordata.MorningEndTime : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                {doctordata.EveningStartTime != null ? doctordata.EveningStartTime : 'Not Provided'} - {doctordata.EveningEndTime != null ? doctordata.EveningEndTime : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n\r\n                                    {/* <Grid item xs={12} style={{ paddingTop: 10 }}>\r\n                                        <center>\r\n                                            <Button variant=\"contained\" onClick={handleClickOpen} className={classes.changepass}  >\r\n                                                Change Password\r\n                                            </Button>\r\n                                            <Dialog\r\n                                                open={openChangePassDialog}\r\n                                                onClose={handleClose}\r\n                                                aria-labelledby=\"alert-dialog-title\"\r\n                                                aria-describedby=\"alert-dialog-description\"\r\n                                            >\r\n                                                <DialogTitle id=\"alert-dialog-title\">{\"Do you want to Change Password?\"}</DialogTitle>\r\n                                                <DialogContent>\r\n                                                    <DialogContentText id=\"alert-dialog-description\">\r\n                                                        <center>\r\n                                                            <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Current Password\" variant=\"outlined\" size=\"small\" />\r\n                                                            <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"New Password\" variant=\"outlined\" size=\"small\" />\r\n                                                            <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Confirm Password\" variant=\"outlined\" size=\"small\" />\r\n                                                        </center>\r\n                                                    </DialogContentText>\r\n                                                </DialogContent>\r\n                                                <DialogActions>\r\n                                                    <Button className={classes.btnCancle} onClick={handleClose}>\r\n                                                        Cancle\r\n                                                    </Button>\r\n                                                    <Button className={classes.btnSubmit} onClick={handleClose} autoFocus>\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </DialogActions>\r\n                                            </Dialog>\r\n                                        </center>\r\n                                    </Grid> */}\r\n                                </center>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid xs={12} style={{ borderTop: '1px solid lightgray' }}>\r\n                            <center>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal', fontSize: 14, color: '#707070', fontWeight: 400, marginTop: 15, paddingBottom: 0, marginBottom: '-10px'\r\n                                }}>\r\n                                    Help : In the case of any issues please mail us at info@Health97.com\r\n                                </Typography>\r\n                            </center>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    changepass: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 160,\r\n        marginTop: 30,\r\n        fontSize: '12px'\r\n\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 30,\r\n        fontSize: '12px'\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginTop: 15\r\n    },\r\n    btnSubmit: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Avatar, Typography, Button, Divider, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Pdf from '../Prescription_VinayH7B8_38 (1).pdf';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport ip from '../ipaddress/ip';\r\nimport axios from 'axios';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n}));\r\n\r\n\r\nfunction createData(title, date, treatedby) {\r\n    return { title, date, treatedby };\r\n}\r\n\r\nconst rows = [\r\n    createData('Fever', '07/11/2021', 'Dr. Pradeep Musale'),\r\n    createData('Regular Checkup', '11/12/2021', 'Dr. Pradeep Musale'),\r\n    createData('Sonography', '09/10/2021', 'Dr. Kirti Virnak'),\r\n    createData('Flu', '07/12/2021', 'Dr. Akshaya Joshi'),\r\n    createData('Headache', '07/12/2021', 'Dr. Komal Mhetre'),\r\n];\r\n\r\nexport default function DoctorPatientMedicalHistory() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [counterbtn, setCounterBtn] = React.useState(0);\r\n    const [details, setdetails] = useState([location.state.Details]);\r\n    const [medicalhistory, setmedicalhistory] = useState([]);\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const medicalhistoryInfo = await axios.post(ip + 'Web_PatientMedicalHistory', { ClinicId: clinicid, UserId: details[0].UserId });\r\n        setmedicalhistory(medicalhistoryInfo?.data?.Appointment);\r\n    }\r\n    const columns = [\r\n        {\r\n            field: 'Title',\r\n            headerName: 'Appointment Title',\r\n            width: 220,\r\n            editable: true,\r\n        },\r\n        {\r\n            field: 'AppointmentDate',\r\n            headerName: 'Date',\r\n            width: 150,\r\n            editable: true,\r\n            align: 'center'\r\n        },\r\n        {\r\n            field: \"fullName\",\r\n            headerName: 'Treated By',\r\n            width: 150,\r\n            editable: true,\r\n            valueGetter: (params) =>\r\n                `${params.getValue(params.id, 'DFName') || params.getValue(params.id, 'HFName')} ${params.getValue(params.id, 'DLName') || params.getValue(params.id, 'HLName')\r\n                }`,\r\n        },\r\n        {\r\n            field: 'PrescriptionURL',\r\n            headerName: 'View Prescription',\r\n            width: 200,\r\n            // valueGetter: (params) =>\r\n            // `${params.getValue(params.id, 'PrescriptionURL') || params.getValue(params.id, 'PdfPrescription')} \r\n            // }`,\r\n            renderCell: (params) => (\r\n                params.row.PrescriptionURL ?\r\n                    <>\r\n                        <Button\r\n                            onClick={() => {\r\n                                window.open(params.getValue(params.row.id, 'PrescriptionURL'), '_blank')\r\n                                console.log(params.row)\r\n                            }}\r\n                            size=\"small\"\r\n                            style={{ color: '#2C7FB2', fontSize: '12px', fontFamily: 'Poppins', fontWeight: 600 }}\r\n                        >\r\n                            View Prescription\r\n                        </Button>\r\n                    </>\r\n                    :\r\n                    <Button\r\n                        onClick={() => {\r\n                            window.open(params.getValue(params.id, 'PdfPrescription'), '_blank')\r\n                            console.log(params.row)\r\n                        }}\r\n                        size=\"small\"\r\n                        style={{ color: '#2C7FB2', fontSize: '12px', fontFamily: 'Poppins', fontWeight: 600 }}\r\n                    >\r\n                        View Prescription\r\n                    </Button>\r\n            ),\r\n        },\r\n    ];\r\n    console.log(medicalhistory)\r\n\r\n    useEffect(() => {\r\n        fetchMedicalHistory();\r\n    }, [])\r\n\r\n    const handleIncrement = (event) => {\r\n        setCounterBtn(counterbtn + 1);\r\n    };\r\n\r\n    const handleDecrement = (event) => {\r\n        setCounterBtn(counterbtn - 1);\r\n    };\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const viewprescription = () => {\r\n        window.open(Pdf);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Patient Medical History\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} style={{ marginTop: 10 }}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: 30 }}>\r\n                        <Grid item sm={12} >\r\n                            <center>\r\n                                <div style={{ paddingBottom: 10 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#00318B', fontFamily: 'Poppins' }}>\r\n                                        Profile\r\n                                    </Typography>\r\n                                    {details[0].ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} src={details[0].ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 15,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: 'gray',\r\n                                    fontWeight: 400\r\n                                }}>\r\n                                    {details[0].FirstName} {details[0].LastName}\r\n                                </Typography>\r\n                                <Grid container style={{ marginTop: 15 }}>\r\n                                    <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Patient ID\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Age\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                {details[0].UserId}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                {details[0].Age}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container style={{ marginTop: 25 }}>\r\n                                    <Grid item xs={6} >\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Address :\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {details[0].Address} {details[0].City}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ marginTop: 20 }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Mobile No :\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ marginTop: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {details[0].MobileNo}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ marginTop: 20 }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Email :\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ marginTop: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {details[0].Email != null ? details[0].Email : 'Not Provided'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </center>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n                <Grid item sm={12} sm={8} style={{ marginTop: 10, }} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: theme.spacing(2), paddingRight: 0, marginRight: 20 }}>\r\n                        <Grid container xs spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 16, color: '#00318B', fontFamily: 'Poppins' }}>\r\n                                    Details\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={1.5}>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                    From :\r\n                                </Typography>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={3} style={{ float: 'left' }}>\r\n                                <input id=\"fromdate\" type=\"date\" style={{ border: '1px solid #F0F0F0', height: 35, fontFamily: 'Poppins', color: '#707070' }} />\r\n                            </Grid>\r\n                            <Grid item xs={1.5}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                    To :\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <input id=\"todate\" type=\"date\" style={{ border: '1px solid #F0F0F0', height: 35, color: '#707070' }} />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Button className={classes.btnview}>View</Button>\r\n                            </Grid>\r\n\r\n                            <Grid item sm={12} style={{ marginTop: '-10px' }}>\r\n                                <DataGrid\r\n                                    style={{ height: 250, fontSize: 12, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}\r\n                                    rows={medicalhistory}\r\n                                    rowHeight={40}\r\n                                    columns={columns}\r\n                                    columnWidth={10}\r\n                                    pageSize={10}\r\n\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const Times = async () => {\r\n    const times = await axios.post(ip + 'GetSlots');\r\n    return times?.data?.Slots;\r\n}\r\n\r\nexport const Doctor_Category = async () => {\r\n    const category = await axios.post(ip + 'GetDoctorsCategory');\r\n    return category?.data?.DoctorsCategory;\r\n}\r\n\r\nexport const Add_HomeVisitor = async (obj) => {\r\n    try {\r\n        const registerHomeVisitor = await axios.post(ip + 'AddHomeVisitorDoctors', obj);\r\n        return JSON.stringify(registerHomeVisitor?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}\r\n\r\nexport const Delete_home_visitor_Details_by_id = async (UserId, Role) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'Web_DeleteStaff', { UserId: UserId, Role: 'Home Visitor' });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const Edit_HomeVisitor = async (obje) => {\r\n    try {\r\n        const editHomeVisitor = await axios.patch(ip + 'Web_EditHomeVisitorDoctor', obje)\r\n        return JSON.stringify(editHomeVisitor?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, Form, View, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, InputLabel, Radio, Typography, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ip from '../../../ipaddress/ip';\r\nimport Axios from 'axios';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function EditImage({ show,  handleCloseEditmodal }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [file, setFile] = useState({});\r\n        \r\n    const fetchDoctorImage = async () => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n        let clinicid = parsed.ClinicId;\r\n        let DoctorId = parsed.userid;\r\n\r\n        const data =  new FormData();\r\n        data.append(\"file\", file);\r\n        data.append(\"UserId\", DoctorId);\r\n        data.append(\"ClinicId\", clinicid);\r\n        Axios.patch(ip + 'UploadDoctorProfileImageUsingS3', data )\r\n        .then(res => {\r\n            handleCloseEditmodal();\r\n            navigate('/DoctorProfile')\r\n        })\r\n        .catch(err => console.log(err));\r\n     }\r\n    return (\r\n        <>\r\n            {/* Edit Patient Details */}\r\n\r\n            <Dialog\r\n                open={show}\r\n                onClose={handleCloseEditmodal}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 'bold',\r\n                                    textAlign: 'center',\r\n                                    alignItems: 'center',\r\n                                    marginTop: '20px',\r\n                                    marginLeft: '-60px'\r\n                                }}>\r\n                                    Logo:\r\n                                </Typography>\r\n                                <center>\r\n\r\n                                    {/* <input type='file' />  */}\r\n\r\n                                     <FormControl variant=\"outlined\"   >\r\n\r\n                                        <TextField id=\"outlined-basic\" enctype=\"multipart/form-data\" onChange={(e)=>{const file= e.target.files[0];setFile(file); }} type=\"file\" size=\"small\" label=\"\"   variant=\"outlined\" style={{ width: '100%', position: 'relative', marginLeft: '200px', marginTop: '-30px', border: '1px solid #F0F0F0' }} />\r\n                                        {/* const file = event.target.files[0];\r\n                                        setfile (file);  */}\r\n                                    </FormControl> \r\n\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20, marginTop: 40 }}>\r\n                                        Cancle\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={fetchDoctorImage} autoFocus style={{ float: 'left', marginLeft: 20, marginTop: 40 }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Select, InputLabel, FormControl, TextField, Typography, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { EditDoctordata } from '../Apis/Profile/index';\r\nimport axios from 'axios';\r\nimport ip from '../ipaddress/ip';\r\nimport { connect } from 'react-redux';\r\nimport { Times, Doctor_Category } from '../Apis/Home_Visitors/index';\r\nimport EditImage from './Profile/Edit_Profile/Doctor_EditProfileImage';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst getDoctorsdata = 'http://13.233.217.107:8080/api/Web_AddStaff'\r\n\r\nconst drawerWidth = 220;\r\n\r\nexport default function DoctorEditProfile() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [doctordata, setdoctordata] = useState([location.state.details]);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [editmodal, seteditmodal] = useState(false);\r\n    const [openChangePassDialog, setOpenChangePassDialog] = React.useState(false);\r\n    const [FirstName, setFirstName] = useState(doctordata[0].FirstName);\r\n    const [LastName, setLastName] = useState(doctordata[0].LastName);\r\n    const [MobileNo, setMobileNo] = useState(doctordata[0].MobileNo);\r\n    const [Email, setEmail] = useState(doctordata[0].Email);\r\n    const [Education, setEducation] = useState(doctordata[0].Education);\r\n    const [DOB, setDOB] = useState(doctordata[0].DOB);\r\n    const [Category, setCategory] = useState(doctordata[0].Category);\r\n    const [Address, setAddress] = useState(doctordata[0].Address);\r\n    const [City, setCity] = useState(doctordata[0].City);\r\n    const [Pincode, setPincode] = useState(doctordata[0].Pincode);\r\n    const [State, setState] = useState(doctordata[0].State);\r\n    const [Country, setCountry] = useState(doctordata[0].Country);\r\n    const [MorningStartTime, setMorningStartTime] = useState(doctordata[0].MorningStartTime);\r\n    const [MorningEndTime, setMorningEndTime] = useState(doctordata[0].MorningEndTime);\r\n    const [EveningStartTime, setEveningStartTime] = useState(doctordata[0].EveningStartTime);\r\n    const [EveningEndTime, setEveningEndTime] = useState(doctordata[0].EveningEndTime);\r\n    const [Experience, setExperience] = useState(doctordata[0].Experience);\r\n    const [Gender, setGender] = useState(doctordata[0].Gender);\r\n    const [times, setTimes] = useState([]);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n\r\n    const Edit_DoctorData = async (FirstName, LastName, MobileNo, Email, Address, Category, City, Pincode, State, Country, Education, DOB, MorningStartTime, MorningEndTime, EveningStartTime, EveningEndTime, Experience, Gender) => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n        let DoctorId = parsed.userid;\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const editDoctorRequest = await EditDoctordata(DoctorId, clinicid, FirstName, LastName, MobileNo, Email, Address, Category, City, Pincode, State, Country, Education, DOB, MorningStartTime, MorningEndTime, EveningStartTime, EveningEndTime, Experience, Gender);\r\n            let response = JSON.parse(editDoctorRequest);\r\n            if (response.success == '200') {\r\n                alert(response.message);\r\n                navigate(-1)\r\n            }\r\n            else {\r\n                alert(response.message);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        setTimes(times);\r\n    }\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n    useEffect(() => {\r\n        fetchTimes();\r\n        fetchDoctorCategory();\r\n    }, []);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenChangePassDialog(true);\r\n    };\r\n\r\n    const handleclickOpenEditmodal = () => {\r\n        seteditmodal(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenChangePassDialog(false);\r\n    };\r\n\r\n    const handleClickOpenEditmodal = () => {\r\n        seteditmodal(true);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleChangePass = () => {\r\n        navigate(\"/DoctorTreatPatient\");\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorProfile\");\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button> Profile\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginLeft: 5, marginRight: 20, borderRadius: 20, marginTop: -15 }}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: '-10px',\r\n                                    textDecoration: 'underline',\r\n\r\n                                }}>\r\n                                    Profile\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                {editmodal ? <EditImage show={editmodal} data={doctordata} handleCloseEditmodal={() => seteditmodal(false)} /> : null}\r\n                                <center>\r\n                                    <div style={{ paddingBottom: 10 }}>\r\n                                        <img src={doctordata[0].ProfileImage} style={{ borderRadius: '50%', height: 80, width: 80 }}></img>\r\n                                        <div style={{ marginTop: '-15px', marginRight: '-50px' }}>\r\n                                            <CreateIcon size='small' onClick={handleclickOpenEditmodal} style={{ borderRadius: '50%', backgroundColor: '#707070', color: '#fff', padding: 2 }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070'\r\n\r\n                                    }}>\r\n                                        Dr. {doctordata[0].FirstName} {doctordata[0].LastName}\r\n                                    </Typography>\r\n                                </center>\r\n                                <Grid item xs={12} style={{ paddingTop: 10 }}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 14,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            fontWeight: 600\r\n\r\n                                        }}>\r\n                                            Experience (in years)\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ paddingTop: 5 }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" type='number' placeholder=\"Experience (Yrs)\" onChange={(e) => setExperience(e.target.value)} value={Experience ? Experience : doctordata.Experience} variant=\"outlined\" size=\"small\" />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ paddingTop: 5 }}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 14,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            fontWeight: 600\r\n\r\n                                        }}>\r\n                                            Education\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ paddingTop: 5 }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" placeholder=\"Education\" value={Education} onChange={(e) => setEducation(e.target.value)} variant=\"outlined\" size=\"small\" />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ paddingTop: 5 }}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 14,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            fontWeight: 600\r\n\r\n                                        }}>\r\n                                            Category\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ paddingTop: 5 }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '60%' }} >\r\n                                            <InputLabel htmlFor=\"outlined-age-native-simple\" value={Category ? Category : doctordata.Category} onChange={(e) => setCategory(e.target.value)} ></InputLabel>\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='medium'\r\n                                                native\r\n                                                value={Category}\r\n                                                onChange={(e) => setCategory(e.target.value)}\r\n                                                placeholder=\"Category\"\r\n                                                inputProps={{\r\n                                                    name: 'category',\r\n                                                    id: 'outlined-category-native-simple',\r\n                                                }}\r\n                                                style={{ width: '100%', fontSize: 14 }}\r\n                                            >\r\n                                                {doctorCategory.map((item) => {\r\n                                                    return (\r\n                                                        <option value={item.Category}>{item.Category}</option>\r\n                                                    )\r\n                                                })}\r\n\r\n                                                {/* <option aria-label=\"None\" value=\"\" /> */}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={4}>\r\n                                <center>\r\n                                    <div style={{ paddingTop: 5 }}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" size=\"small\" value={FirstName} label=\"First Name\" onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setFirstName(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" label=\"Last Name\" value={LastName} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setLastName(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='number' label=\"Mobile No\" value={MobileNo} onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setMobileNo(e.target.value)\r\n                                                }\r\n                                            }} onInput={(e) => {\r\n                                                e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='email' label=\"Email ID\" value={Email} onChange={(e) => setEmail(e.target.value)} variant=\"outlined\" size=\"small\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" label=\"DOB\" value={DOB} onChange={(e) => setDOB(e.target.value)} type=\"date\" variant=\"outlined\" size=\"small\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '73%', }} >\r\n                                            <InputLabel htmlFor=\"outlined-age-native-simple\" onChange={(e) => setGender(e.target.value)} value={Gender ? Gender : doctordata.Gender}  ></InputLabel>\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='medium'\r\n                                                native\r\n                                                value={Gender ? Gender : doctordata.Gender} onChange={(e) => setGender(e.target.value)}\r\n                                                // label=\"Gender\"\r\n                                                inputProps={{\r\n                                                    name: 'gender',\r\n                                                    id: 'outlined-gender-native-simple',\r\n                                                }}\r\n\r\n\r\n                                                style={{ width: '100%', fontSize: 14 }}\r\n                                            >\r\n                                                <option value={1}>Male</option>\r\n                                                <option value={2}>Female</option>\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={5}>\r\n                                <Grid item xs={12}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, marginTop: -10, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            OPD Morning Time\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container style={{ padding: 5 }}>\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                                Start Time\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                                End Time\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\"></InputLabel>\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    native\r\n                                                    value={MorningStartTime}\r\n                                                    onChange={(e) => setMorningStartTime(e.target.value)}\r\n                                                    inputProps={{\r\n                                                        name: 'start time',\r\n                                                        id: 'outlined-start-time-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '90%', fontSize: 14 }}\r\n                                                >\r\n                                                    {times.map((item) => {\r\n                                                        return (\r\n                                                            <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </center>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\"></InputLabel>\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    native\r\n                                                    onChange={(e) => setMorningEndTime(e.target.value)} value={MorningEndTime}\r\n                                                    inputProps={{\r\n                                                        name: 'end time',\r\n                                                        id: 'outlined-end-time-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '90%', fontSize: 14 }}\r\n                                                >\r\n                                                    {times.map((item) => {\r\n                                                        return (\r\n                                                            <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                        )\r\n                                                    })}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} style={{ marginTop: '-12px' }}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            OPD Evening Time\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container style={{ padding: 5 }}>\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" value={EveningStartTime} onChange={(e) => setEveningStartTime(e.target.value)} noWrap={true} style={{ fontSize: 13, marginTop: -5, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                                Start Time\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" value={EveningEndTime} onChange={(e) => setEveningEndTime(e.target.value)} noWrap={true} style={{ fontSize: 13, marginTop: -5, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                                End Time\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container >\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\"></InputLabel>\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    native\r\n                                                    onChange={(e) => setEveningStartTime(e.target.value)} value={EveningStartTime}\r\n                                                    inputProps={{\r\n                                                        name: 'start time',\r\n                                                        id: 'outlined-start-time-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '90%', fontSize: 14 }}\r\n                                                >\r\n                                                    {times.map((item) => {\r\n                                                        return (\r\n                                                            <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </center>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6}>\r\n                                        <center>\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\"></InputLabel>\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    native\r\n                                                    onChange={(e) => setEveningEndTime(e.target.value)} value={EveningEndTime}\r\n                                                    inputProps={{\r\n                                                        name: 'end time',\r\n                                                        id: 'outlined-end-time-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '90%', fontSize: 14 }}\r\n                                                >\r\n                                                    {times.map((item) => {\r\n                                                        return (\r\n                                                            <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                        )\r\n                                                    })}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} style={{ marginTop: 1 }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                            <TextField className={classes.textField} multiline rows={2.5} rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" value={Address} onChange={(e) => setAddress(e.target.value)} variant=\"outlined\" style={{ width: '180%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 30 }}>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} style={{ float: 'right', marginLeft: 40 }}>\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"City\" value={City} onChange={(e) => { setCity(e.target.value) }}\r\n                                                variant=\"outlined\" />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} style={{ marginRight: 40 }}>\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" value={Pincode} onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setPincode(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 3 }}>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} style={{ float: 'right', marginLeft: 40 }}>\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"State\" value={State} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setState(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} style={{ marginRight: 40 }}>\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"Country\" value={Country} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setCountry(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container >\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={() => handleGoBack(false)} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={() => Edit_DoctorData(FirstName, LastName, MobileNo, Email, Address, Category, City, Pincode, State, Country, Education, DOB, MorningStartTime, MorningEndTime, EveningStartTime, EveningEndTime, Experience, Gender)} style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n            {/* {editmodal? <EditImage show={editmodal} data={doctordata} handleCloseEditmodal ={()=>seteditmodal(false)}/>:null} */}\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: 'Poppins;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(3.1),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: -5,\r\n        fontSize: '11px'\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginTop: 10\r\n    },\r\n    btnSubmit: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, Slide, Button, } from \"@material-ui/core\";\r\nimport { Delete_home_visitor_Details_by_id } from '../../../Apis/Home_Visitors/index';\r\n\r\nconst Delete_Home_Vistor_Modal = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (PatientId) => {\r\n\r\n        const request = await Delete_home_visitor_Details_by_id(PatientId);\r\n        let response = JSON.parse(request);\r\n        if (response.success == '200') {\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Home Visitor's Details?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data[0].UserId)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Home_Vistor_Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, Switch, InputLabel, FormControlLabel, DialogTitle, Typography, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Edit_HomeVisitor } from '../../../Apis/Home_Visitors/index';\r\nimport { Times, Doctor_Category } from '../../../Apis/Home_Visitors/index';\r\nimport axios from 'axios';\r\nconst getHomevisitors = 'http://13.233.217.107:8080/api/GetHomeVisitorDoctorsforClinic';\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n    description: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 145,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(1.2),\r\n\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 8,\r\n    },\r\n\r\n}));\r\n\r\nexport default function EditHomeVisitors({ show, data, handleCloseEditmodal }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    let obj = JSON.stringify(data);\r\n    let parse = JSON.parse(obj);\r\n    console.log(data);\r\n    const [homevisitorData, sethomevisitorData] = useState([]);\r\n    const [homevisitorDetails, sethomevisitorDetails] = useState({});\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [firstName, setfirstName] = useState(parse[0].FirstName);\r\n    const [lastName, setlastName] = useState(parse[0].LastName);\r\n    const [mobileno, setmobileno] = useState(parse[0].MobileNo);\r\n    const [email, setemail] = useState(parse[0].Email);\r\n    const [address, setaddress] = useState(parse[0].Address);\r\n    const [education, seteducation] = useState(parse[0].Education);\r\n    const [category, setcategory] = useState(parse[0].Category);\r\n    const [From_AvailabilityTime, setFrom_AvailabilityTime] = useState(parse[0].From_AvailabilityTime);\r\n    const [To_AvailabilityTime, setTo_AvailabilityTime] = useState(parse[0].To_AvailabilityTime);\r\n    const [monday, setmonday] = useState(data[0].Monday);\r\n    const [tuesday, settuesday] = useState(data[0].Tuesday);\r\n    const [wednesday, setwednesday] = useState(data[0].Wednesday);\r\n    const [thursday, setthursday] = useState(data[0].Thursday);\r\n    const [friday, setfriday] = useState(data[0].Friday);\r\n    const [saturday, setsaturday] = useState(data[0].Saturday);\r\n    const [sunday, setsunday] = useState(data[0].Sunday);\r\n    const [password, setpassword] = useState('');\r\n    const [editstate, seteditstate] = useState('');\r\n    const [Pincode, setPincode] = useState('');\r\n    const [City, setCity] = useState('');\r\n    const [Country, setCountry] = useState('');\r\n    const [Gender, setGender] = useState('');\r\n    const [DOB, setDOB] = useState('');\r\n    const [Experience, setExperience] = useState('');\r\n    const [times, setTimes] = useState([]);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n\r\n    const handlemonday = () => {\r\n        setmonday(previousState => !previousState);\r\n    }\r\n    const handletuesday = () => {\r\n        settuesday(previousState => !previousState);\r\n    }\r\n    const handlewednesday = () => {\r\n        setwednesday(previousState => !previousState);\r\n    }\r\n    const handlethursday = () => {\r\n        setthursday(previousState => !previousState);\r\n    }\r\n    const handlefriday = () => {\r\n        setfriday(previousState => !previousState);\r\n    }\r\n    const handlesaturday = () => {\r\n        setsaturday(previousState => !previousState);\r\n    }\r\n    const handlesunday = () => {\r\n        setsunday(previousState => !previousState);\r\n    }\r\n    const handleAll = async () => {\r\n        setmonday(previousState => !previousState);\r\n        settuesday(previousState => !previousState);\r\n        setwednesday(previousState => !previousState);\r\n        setthursday(previousState => !previousState);\r\n        setfriday(previousState => !previousState);\r\n        setsaturday(previousState => !previousState);\r\n        setsunday(previousState => !previousState);\r\n    }\r\n\r\n\r\n    const EditHomeVisitor = async () => {\r\n        var sessiondata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(sessiondata);\r\n        let clinicid = parsed.ClinicId;\r\n        console.log(data[0].UserId)\r\n        const obje = {\r\n            ClinicId: clinicid,\r\n            UserId: data[0].UserId,\r\n            FirstName: firstName,\r\n            LastName: lastName,\r\n            MobileNo: mobileno,\r\n            Password: password,\r\n            Email: email,\r\n            Address: address,\r\n            Education: education,\r\n            From_AvailabilityTime: From_AvailabilityTime,\r\n            To_AvailabilityTime: To_AvailabilityTime,\r\n            Sunday: sunday,\r\n            Monday: monday,\r\n            Tuesday: tuesday,\r\n            Wednesday: wednesday,\r\n            Thursday: thursday,\r\n            Friday: friday,\r\n            Saturday: saturday,\r\n            Pincode: Pincode,\r\n            EditState: editstate,\r\n            City: City,\r\n            Country: Country,\r\n            Gender: Gender,\r\n            DOB: DOB,\r\n            Experience: Experience,\r\n            // Role: 'Home Visitor'\r\n        }\r\n        const edithomevisitorrequest = await Edit_HomeVisitor(obje);\r\n        let parse = JSON.parse(edithomevisitorrequest);\r\n        if (parse.success === \"200\") {\r\n            alert('Home Visitor Details Edited Successfully');\r\n            handleCloseEditmodal();\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(parse.message);\r\n        }\r\n    }\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeAllDays = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHomeVisitors\");\r\n    };\r\n\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        setTimes(times);\r\n    }\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n    useEffect(() => {\r\n        fetchTimes();\r\n        fetchDoctorCategory();\r\n    }, []);\r\n    console.log(thursday)\r\n\r\n    return (\r\n        <>\r\n\r\n            <Dialog\r\n                open={show}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={5} style={{ marginLeft: 10 }}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal', textDecorationLine: 'underline', textUnderlineOffset: '1px',\r\n                                    position: 'relative', bottom: 14\r\n\r\n                                }}>\r\n                                    Details\r\n                                </Typography>\r\n\r\n                                <div style={{ marginTop: 13 }}>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" size=\"small\" label=\"First Name\"\r\n                                            value={firstName}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setfirstName(e.target.value)\r\n                                                }\r\n                                            }\r\n                                            } variant=\"outlined\" style={{ width: '160%' }} />\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" label=\"Last Name\"\r\n                                            value={lastName} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setlastName(e.target.value)\r\n                                                }\r\n\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '160%', marginTop: 12 }} />\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm} >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" type=\"text\" label=\"Education\"\r\n                                            value={education} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    seteducation(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '160%', marginTop: 10 }} />\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} >\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='number' label=\"Mobile No\"\r\n                                            value={mobileno}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setmobileno(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '115%', marginLeft: 98, marginTop: 40 }}\r\n                                            onInput={(e) => {\r\n                                                e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n\r\n                                            }} />\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='email' value={email} onChange={(e) => setemail(e.target.value)} label=\"Email ID\" variant=\"outlined\" size=\"small\" style={{ width: '115%', marginLeft: 98, marginTop: 12, }} />\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '102%', marginLeft: '64px', marginTop: 16 }} >\r\n                                    <InputLabel htmlFor=\"outlined-category-native-simple\"></InputLabel>\r\n                                    <Select\r\n                                        className={classes.textFieldForm}\r\n                                        size='large'\r\n                                        native\r\n                                        value={category}\r\n                                        onChange={(e) => setcategory(e.target.value)}\r\n                                        label=\"Category\"\r\n                                        inputProps={{\r\n                                            name: 'category',\r\n                                            id: 'outlined-category-native-simple',\r\n                                        }}\r\n                                        style={{ width: '80%', height: 40, fontSize: 14, marginTop: '-7px', marginLeft: 34 }}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" >Category</option>\r\n                                        {doctorCategory.map((item) => {\r\n                                            return (\r\n                                                <option value={item.Category}>{item.Category}</option>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} multiline rows={2} rowsMax={4} id=\"outlined-basic\" type='text' value={address} onChange={(e) => setaddress(e.target.value)} label=\"Add\" variant=\"outlined\" size=\"small\" style={{ width: '395%', marginTop: 10, marginLeft: 10 }} />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <Grid container style={{ marginTop: 10 }}>\r\n                                    <Grid item xs={2}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            marginLeft: 22\r\n                                        }}>\r\n                                            From\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='medium'\r\n                                                native\r\n                                                value={From_AvailabilityTime}\r\n                                                onChange={(e) => setFrom_AvailabilityTime(e.target.value)}\r\n                                                inputProps={{\r\n                                                    name: 'fromtime',\r\n                                                    id: 'outlined-from-time-native-simple',\r\n                                                }}\r\n                                                style={{ width: '90%', fontSize: 12, marginLeft: 117 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value='' >From</option>\r\n\r\n                                                {times.map((item) => {\r\n                                                    return (\r\n                                                        <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            textAlign: 'center',\r\n                                            justifyContent: 'center',\r\n                                            fontWeight: 600,\r\n                                            position: 'relative',\r\n                                            left: 250\r\n\r\n                                        }}>\r\n                                            To\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='medium'\r\n                                                native\r\n                                                value={To_AvailabilityTime}\r\n                                                onChange={(e) => setTo_AvailabilityTime(e.target.value)}\r\n                                                inputProps={{\r\n                                                    name: 'totime',\r\n                                                    id: 'outlined-to-time-native-simple',\r\n                                                }}\r\n                                                style={{ width: '90%', fontSize: 12, marginLeft: 385 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value='' >To</option>\r\n                                                {times.map((item) => {\r\n                                                    return (\r\n                                                        <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                        <Grid container style={{ marginLeft: 30 }}>\r\n\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', position: 'relative', right: 327,\r\n                                                textDecorationLine: 'underline', textUnderlineOffset: '1px',\r\n                                            }}>\r\n                                                Availability\r\n                                            </Typography>\r\n                                            <Grid container style={{ marginTop: 10 }}>\r\n                                                <Grid item xs={8}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        position: 'relative',\r\n                                                        right: 323,\r\n                                                        top: 10\r\n\r\n                                                    }}>\r\n                                                        All Days\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch\r\n                                                                onClick={(e) => handleAll(e.target.value)}\r\n                                                                name=\"checkedA\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#78B088', float: 'right', }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#78B088', float: 'right', paddingRight: 20, position: 'relative', right: 205, top: 8 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -34,\r\n                                                        position: 'relative',\r\n                                                        right: 320,\r\n                                                        top: 16\r\n                                                    }}>\r\n                                                        Monday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -34,\r\n                                                        position: 'relative',\r\n                                                        right: 356,\r\n                                                        top: 60\r\n                                                    }}>\r\n                                                        Tuesday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -64,\r\n                                                        position: 'relative',\r\n                                                        right: 106,\r\n                                                        top: -30\r\n                                                    }}>\r\n                                                        Wednesday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n\r\n                                                            <Switch checked={monday}\r\n                                                                onChange={handlemonday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', right: 149, bottom: 6 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={tuesday}\r\n                                                                onChange={handletuesday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', right: 187, top: 38 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={wednesday}\r\n                                                                onChange={handlewednesday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', right: -95, bottom: 54 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -64,\r\n                                                        position: 'relative',\r\n                                                        right: 40,\r\n                                                        top: -40\r\n                                                    }}>\r\n                                                        Thursday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -64,\r\n                                                        position: 'relative',\r\n                                                        right: 86,\r\n                                                        top: 0\r\n                                                    }}>\r\n                                                        Friday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -64,\r\n                                                        position: 'relative',\r\n                                                        right: -186,\r\n                                                        bottom: 92\r\n                                                    }}>\r\n                                                        Saturday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={thursday}\r\n                                                                onChange={handlethursday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', left: 170, bottom: 65 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={friday}\r\n                                                                onChange={handlefriday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', left: 133, bottom: 22 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={saturday}\r\n                                                                onChange={handlesaturday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', left: 380, bottom: 118 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={12}>\r\n                                                    <center>\r\n                                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                            fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            textAlign: 'center',\r\n                                                            justifyContent: 'center',\r\n                                                            fontWeight: 600,\r\n                                                            marginRight: -64,\r\n                                                            position: 'relative',\r\n                                                            right: -216,\r\n                                                            bottom: 103\r\n                                                        }}>\r\n                                                            Sunday\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={12}>\r\n                                                    <center>\r\n                                                        <FormControlLabel\r\n                                                            control={\r\n                                                                <Switch checked={sunday}\r\n                                                                    onChange={handlesunday}\r\n                                                                    name=\"checkedB\"\r\n                                                                    color='primary'\r\n                                                                    style={{\r\n                                                                        color: '#2C7FB2',\r\n                                                                    }}\r\n                                                                />\r\n                                                            }\r\n                                                            style={{ color: '#2C7FB2', float: 'center', marginLeft: 40, position: 'relative', left: 362, bottom: 129 }}\r\n                                                        />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: -40 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={EditHomeVisitor} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControl, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide, Switch, FormControlLabel, Select, InputLabel, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Times, Doctor_Category, Add_HomeVisitor } from '../Apis/Home_Visitors/index';\r\nimport Delete_Home_Vistor_Modal from '../components/Home_Visitors/Delete_Home_Visitor/index';\r\nimport Edit_Home_Visitor from './Home_Visitors/Edit_Details/index'\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst getHomeVisitorSearchApi = 'http://13.233.217.107:8080/api/Web_SearchHomeVisitor';\r\nconst getHomevisitors = 'http://13.233.217.107:8080/api/GetHomeVisitorDoctorsforClinic';\r\nconst getHomeVisitorDoctorById = 'http://13.233.217.107:8080/api/GetHomeVisitorDoctorById';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DoctorHomeVisitors() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n    const [opendeletemodal, setOpendeletemodal] = React.useState(false);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [homevisitorData, sethomevisitorData] = useState([]);\r\n    const [homevisitorDetails, sethomevisitorDetails] = useState({});\r\n    const [firstName, setfirstName] = useState('');\r\n    const [lastName, setlastName] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [education, seteducation] = useState('');\r\n    const [category, setcategory] = useState('');\r\n    const [startTime, setstartTime] = useState('');\r\n    const [endTime, setendTime] = useState('');\r\n    const [monday, setmonday] = useState(false);\r\n    const [tuesday, settuesday] = useState(false);\r\n    const [wednesday, setwednesday] = useState(false);\r\n    const [thursday, setthursday] = useState(false);\r\n    const [friday, setfriday] = useState(false);\r\n    const [saturday, setsaturday] = useState(false);\r\n    const [sunday, setsunday] = useState(false);\r\n    const [times, setTimes] = useState([]);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n    const [homevisitorsearch, sethomevisitorsearch] = useState([]);\r\n    const [showPassword, setshowPassword] = useState(false)\r\n\r\n    const handlemonday = () => {\r\n        setmonday(previousState => !previousState);\r\n    }\r\n    const handletuesday = () => {\r\n        settuesday(previousState => !previousState);\r\n    }\r\n    const handlewednesday = () => {\r\n        setwednesday(previousState => !previousState);\r\n    }\r\n    const handlethursday = () => {\r\n        setthursday(previousState => !previousState);\r\n    }\r\n    const handlefriday = () => {\r\n        setfriday(previousState => !previousState);\r\n    }\r\n    const handlesaturday = () => {\r\n        setsaturday(previousState => !previousState);\r\n    }\r\n    const handlesunday = () => {\r\n        setsunday(previousState => !previousState);\r\n    }\r\n    const handleAll = async () => {\r\n        setmonday(previousState => !previousState);\r\n        settuesday(previousState => !previousState);\r\n        setwednesday(previousState => !previousState);\r\n        setthursday(previousState => !previousState);\r\n        setfriday(previousState => !previousState);\r\n        setsaturday(previousState => !previousState);\r\n        setsunday(previousState => !previousState);\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setshowPassword(!showPassword);\r\n    }\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const fetchHomeVisitorData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const homevisitorInfo = await axios.post(getHomevisitors, { ClinicId: clinicid });\r\n        sethomevisitorData(homevisitorInfo?.data?.HomeVisitors);\r\n    }\r\n\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        setTimes(times);\r\n    }\r\n\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n\r\n\r\n    const searchHomeVisitor = async (homevisitorsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const hvDoctorInfo = await axios.post(getHomeVisitorSearchApi, { ClinicId: clinicid, Name: homevisitorsearch });\r\n            sethomevisitorData(hvDoctorInfo?.data?.HomeVisitor);\r\n            console.log(homevisitorData)\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n \r\n    const Register_HomeVisitor = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const obj = {\r\n            ClinicId: clinicid,\r\n            FirstName: firstName,\r\n            LastName: lastName,\r\n            Password: password,\r\n            MobileNo: mobile,\r\n            Email: email,\r\n            Address: address,\r\n            Category: category,\r\n            Education: education,\r\n            Monday: monday,\r\n            Tuesday: tuesday,\r\n            Wednesday: wednesday,\r\n            Thursday: thursday,\r\n            Friday: friday,\r\n            Saturday: saturday,\r\n            Sunday: sunday,\r\n            From_AvailabilityTime: startTime,\r\n            To_AvailabilityTime: endTime,\r\n            Role: 'Home Visitor'\r\n        }\r\n        try {\r\n            const registration = await Add_HomeVisitor(obj);\r\n            let parse = JSON.parse(registration);\r\n            if (parse.success === \"200\") {\r\n                alert('Home Visitor Profile Details Added Successfully');\r\n                setOpenmodal(false);\r\n                window.location.reload()\r\n            } else {\r\n                alert(parse.message);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleEditModal = async () => {\r\n        if (homevisitorDetails.length > 0) {\r\n            setOpenEditmodal(true)\r\n        }\r\n        else {\r\n            alert(\"Please Select Home Visitor from List\");\r\n        }\r\n    }\r\n\r\n    const handleContinue = async  () => {\r\n\r\n        if (homevisitorDetails.length > 0) {\r\n            setOpendeletemodal(true) \r\n         }\r\n            \r\n\r\n           else { \r\n               alert('Please select Home visitors from list'); \r\n            }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchHomeVisitorData();\r\n        fetchTimes();\r\n        fetchDoctorCategory();\r\n    }, []);\r\n\r\n\r\n    const handleRowClick = async (userid) => {\r\n        var hvDoctorInfo = await axios.post(getHomeVisitorDoctorById, { UserId: userid });\r\n        sethomevisitorDetails(hvDoctorInfo?.data?.HomeVisitor)\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    const handleHomeVisitRequest = () => {\r\n        navigate(\"/DoctorHomeVisitRequest\");\r\n    };\r\n\r\n\r\n    const handleHomeVisitHistory = () => {\r\n        navigate(\"/DoctorHomeVisitHistory\");\r\n    };\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeAllDays = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Home Visitors\r\n                        <Button className={classes.btnregister} onClick={(e) => setOpenmodal(true)} style={{ float: 'right', marginRight: 20, fontFamily: 'Poppins', fontSize: 12, width: 160 }}>Add New Home Visitor</Button>\r\n                        <Button className={classes.btnregister} onClick={handleHomeVisitRequest} style={{ float: 'right', marginRight: 20, fontFamily: 'Poppins', fontSize: 12, width: 160 }}>Home Visitor Requests</Button>\r\n                        <Button className={classes.btnregister} onClick={handleHomeVisitHistory} style={{ float: 'right', marginRight: 20, fontFamily: 'Poppins', fontSize: 12, width: 160 }}>Home Visitor History</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            label=\"Search by Name\"\r\n                                            placeholder='Search by Home Visitor'\r\n                                            onChange={(e) => sethomevisitorsearch(e.target.value)}\r\n                                            value={homevisitorsearch}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} onClick={() => searchHomeVisitor(homevisitorsearch)} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>Search</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <DataGrid\r\n                                style={{ height: 350, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                                rows={homevisitorData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={5}\r\n                                onRowClick={(newSelection) => {\r\n                                    handleRowClick(newSelection.row.UserId);\r\n                                }}\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins', textDecorationLine: 'underline', textUnderlineOffset: '1px', textDecorationThickness: '1px',\r\n                                fontStyle: 'normal',\r\n\r\n                            }}>\r\n                                Profile\r\n                            </Typography>\r\n                            <center>\r\n                                <div style={{ paddingBottom: 5 }}>\r\n                                    {homevisitorDetails[0] ? homevisitorDetails[0].ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} src={homevisitorDetails[0].ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} /> : <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {homevisitorDetails[0] ? homevisitorDetails[0].FirstName : \"NA\"} {homevisitorDetails[0] ? homevisitorDetails[0].LastName : null}\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 14,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 400\r\n                                }}>\r\n                                    {homevisitorDetails[0] ? homevisitorDetails[0].Education : \"NA\"}\r\n                                  <span> ({homevisitorDetails[0] ? homevisitorDetails[0].Category : \"NA\"})</span>\r\n                                </Typography>\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: \"Poppins\" }}>\r\n                                            Mobile Number\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].MobileNo : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            From\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].From_AvailabilityTime : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            To\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].To_AvailabilityTime : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Email Id\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].Email : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12}>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Address\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].Address : \"NA\"} {homevisitorDetails[0] ? homevisitorDetails[0].City : null} {homevisitorDetails[0] ? homevisitorDetails[0].State : null} {homevisitorDetails[0] ? homevisitorDetails[0].Pincode : null} {homevisitorDetails[0] ? homevisitorDetails[0].Country : null}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Availability\r\n                                        </Typography>\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Mon\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Tue\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Wed\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Thu\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Fri\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Sat\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Sun\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Monday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Tuesday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Wednesday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Thursday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Friday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Saturday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Sunday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 10 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={handleContinue} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={() => handleEditModal()} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                {/* For add new visitor form */}\r\n\r\n                <Dialog\r\n                    open={openmodal}\r\n                    maxWidth={maxWidth}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Add New Home Visitor\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={() => setOpenmodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Grid container style={{ overflow: 'hidden', height: 585 }}>\r\n\r\n                                <Grid container style={{ overflow: 'hidden' }}>\r\n                                    <Grid container  >\r\n                                        <Grid item sm={6} style={{ marginLeft: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 17, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600,\r\n                                                textDecorationLine: 'underline', textUnderlineOffset: '1px',\r\n\r\n                                            }}>\r\n                                                Details\r\n                                            </Typography>\r\n\r\n                                            <div style={{ marginTop: 13 }}>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={firstName}\r\n                                                        onChange={(e) => {\r\n                                                            const re = /^[A-Za-z]+$/;\r\n\r\n                                                            // if value is not blank, then test the regex\r\n\r\n                                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                                setfirstName(e.target.value)\r\n                                                            }\r\n                                                        }\r\n                                                        } id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" style={{ width: '155%', position: 'relative', top: 3 }} />\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            <div>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={lastName} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n\r\n                                                        // if value is not blank, then test the regex\r\n\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setlastName(e.target.value)\r\n                                                        }\r\n\r\n                                                    }} id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" size=\"small\" style={{ width: '155%', position: 'relative', top: 12 }} />\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            <div>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm} >\r\n                                                    <TextField className={classes.textFieldForm} value={education} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n\r\n                                                        // if value is not blank, then test the regex\r\n\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            seteducation(e.target.value)\r\n                                                        }\r\n                                                    }} id=\"outlined-basic\" type=\"text\" label=\"Education\" variant=\"outlined\" size=\"small\" style={{ width: '155%', position: 'relative', top: 25 }} />\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                        </Grid>\r\n                                        <div>\r\n                                            <Grid item xs={6} >\r\n\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={mobile}\r\n                                                        onChange={(e) => {\r\n                                                            const re = /^[0-9\\b]+$/;\r\n                                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                                setmobile(e.target.value)\r\n                                                            }\r\n                                                        }} id=\"outlined-basic\" type='number' label=\"Mobile No\" variant=\"outlined\" size=\"small\" style={{ width: '248%', marginLeft: 45, position: 'relative', top: 38 }}\r\n                                                        onInput={(e) => {\r\n                                                            e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n\r\n                                                        }} />\r\n                                                </FormControl>\r\n\r\n\r\n                                                <div>\r\n                                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                        <TextField className={classes.textFieldForm} onChange={(e) => setemail(e.target.value)} id=\"outlined-basic\" type='email' label=\"Email ID\" variant=\"outlined\" size=\"small\" style={{ width: '250%', marginTop: 51, marginLeft: 43 }} />\r\n                                                    </FormControl>\r\n                                                </div>\r\n\r\n\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%', marginLeft: '-25px' }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={category}\r\n                                                        onChange={(e) => setcategory(e.target.value)}\r\n                                                        label=\"Category\"\r\n                                                        inputProps={{\r\n                                                            name: 'category',\r\n                                                            id: 'outlined-category-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '188%', fontSize: 14, marginTop: '5px', marginLeft: 67 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">Category</option>\r\n                                                        {doctorCategory.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.Category}>{item.Category}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </div>\r\n\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <div>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setaddress(e.target.value)} multiline rows={2} rowsMax={4} id=\"outlined-basic\" type='text' label=\"Address\" variant=\"outlined\" size=\"small\" style={{ width: '405%', position: 'relative', top: 15, left: 10 }} />\r\n                                                </FormControl>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 0 }}>\r\n                                        <Grid item xs={6}>\r\n\r\n                                            <div>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    position:'relative',\r\n                                                    top:35,\r\n                                                    left:5\r\n                                                }}>\r\n                                                    From\r\n                                                    </Typography>\r\n\r\n                                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                        <Select\r\n                                                            className={classes.textFieldForm}\r\n                                                            size='medium'\r\n                                                            native\r\n                                                            value={startTime}\r\n                                                            onChange={(e) => setstartTime(e.target.value)}\r\n                                                            inputProps={{\r\n                                                                name: 'fromtime',\r\n                                                                id: 'outlined-from-time-native-simple',\r\n                                                            }}\r\n                                                            style={{ width: '50%', fontSize: 12, marginLeft: 26, marginBottom: 14, position:'relative',\r\n                                                            left:23 }}\r\n                                                        >\r\n                                                            <option aria-label=\"None\" value='' >From</option>\r\n\r\n                                                            {times.map((item) => {\r\n                                                                return (\r\n                                                                    <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                )\r\n                                                            })}\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        position: 'relative',\r\n                                                        bottom:53,\r\n                                                        right:22\r\n                                                    }}>\r\n                                                        To\r\n                                                    </Typography>\r\n\r\n                                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                        <Select\r\n                                                            className={classes.textFieldForm}\r\n                                                            size='medium'\r\n                                                            native\r\n                                                            value={endTime}\r\n                                                            onChange={(e) => setendTime(e.target.value)}\r\n                                                            inputProps={{\r\n                                                                name: 'totime',\r\n                                                                id: 'outlined-to-time-native-simple',\r\n                                                            }}\r\n                                                            style={{ width: '50%', fontSize: 12, position: 'relative', left: 220, bottom: 88 }}\r\n                                                        >\r\n                                                            <option aria-label=\"None\" value='' >To</option>\r\n\r\n                                                            {times.map((item) => {\r\n                                                                return (\r\n                                                                    <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                )\r\n                                                            })}\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                \r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <div>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField\r\n\r\n                                                        variant=\"outlined\"\r\n\r\n                                                        margin=\"normal\"\r\n\r\n                                                        fullWidth\r\n\r\n                                                        id=\"password\"\r\n\r\n                                                        required\r\n\r\n                                                        label=\"Password\"\r\n\r\n                                                        type={showPassword ? 'text' : 'password'}\r\n\r\n                                                        size='small'\r\n                                                        style={{ width: '105%', marginLeft: 49, marginTop: 26 }}\r\n\r\n                                                        onChange={(e) => setpassword(e.target.value)}\r\n\r\n                                                        InputProps={{\r\n\r\n                                                            endAdornment: (\r\n\r\n                                                                <InputAdornment position=\"end\">\r\n\r\n                                                                    <IconButton\r\n\r\n                                                                        aria-label=\"toggle password visibility\"\r\n\r\n                                                                        onClick={handleClickShowPassword}\r\n\r\n                                                                        onMouseDown={handleMouseDownPassword}\r\n\r\n                                                                    >\r\n\r\n                                                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n\r\n                                                                    </IconButton>\r\n\r\n                                                                </InputAdornment>\r\n\r\n                                                            ),\r\n\r\n                                                        }}\r\n\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container style={{ marginLeft: 350, position: 'relative', bottom: 70 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 17, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal', position: 'relative',\r\n                                                    right: 348, fontWeight: 600,\r\n                                                    textDecorationLine: 'underline', textUnderlineOffset: '1px',\r\n                                                }}>\r\n                                                    Availability\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container style={{ marginTop: 20, position: 'relative', bottom: 70 }}>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    marginRight: 80\r\n                                                }}>\r\n                                                    All Days\r\n                                                </Typography>\r\n\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            onClick={(e) => handleAll(e.target.value)}\r\n\r\n                                                            color='primary'\r\n                                                            style={{ color: '#78B088', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#78B088', float: 'right', paddingRight: 20, position: 'relative', bottom: 25, right: -84 }}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    marginRight: -185\r\n                                                }}>\r\n                                                    Wednesday\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    position: 'relative',\r\n                                                    left: 224\r\n                                                }}>\r\n                                                    Saturday\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    marginRight: 80,\r\n                                                    position: 'relative',\r\n                                                    bottom: 90\r\n                                                }}>\r\n                                                    Monday\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    position: 'relative',\r\n                                                    bottom: 90,\r\n                                                    left: 82\r\n                                                }}>\r\n                                                    Thursday\r\n                                                </Typography>\r\n\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <center>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        position: 'relative',\r\n                                                        bottom: 90,\r\n                                                        left: 220\r\n                                                    }}>\r\n                                                        Sunday\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    marginRight: 80,\r\n                                                    position: 'relative',\r\n                                                    bottom: 70\r\n                                                }}>\r\n                                                    Tuesday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    position: 'relative',\r\n                                                    bottom: 70,\r\n                                                    right: 5\r\n                                                }}>\r\n                                                    Friday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch checked={monday}\r\n                                                            onChange={handlemonday}\r\n                                                            // name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 134, right: 68 }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch checked={tuesday}\r\n                                                            onChange={handletuesday}\r\n                                                            // name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 94, right: 372 }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={wednesday}\r\n                                                            onChange={handlewednesday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 176, right: 370 }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n\r\n\r\n                                    </Grid>\r\n\r\n                                    <Grid container>\r\n                                        <Grid item xs={4}>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch checked={thursday}\r\n\r\n                                                        onChange={handlethursday}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 172, left: 238 }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch checked={friday}\r\n\r\n                                                        onChange={handlefriday}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 132, right: 64 }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch checked={saturday}\r\n\r\n                                                        onChange={handlesaturday}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 215, right: 83 }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container>\r\n\r\n\r\n                                        <Grid item xs={12}>\r\n                                            <center>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={sunday}\r\n                                                            onChange={handlesunday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{\r\n                                                                color: '#2C7FB2',\r\n                                                            }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'center', marginLeft: 10, position: 'relative', bottom: 215, left: 312 }}\r\n                                                />\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid container style={{ marginTop: -155, paddingBottom: 0, marginBottom: 0 }}>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={()=> setOpenmodal(false)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                        </Grid>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={Register_HomeVisitor} style={{ float: 'left', marginLeft: 20 }}>Register</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n\r\n\r\n                {/* For Edit Visitor Details */}\r\n                {openeditmodal ? <Edit_Home_Visitor show={openeditmodal} data={homevisitorDetails} handleCloseEditmodal={() => setOpenEditmodal(false)} /> : null}\r\n\r\n\r\n                {/* for Delete User */}\r\n                {opendeletemodal ? <Delete_Home_Vistor_Modal show={opendeletemodal} data={homevisitorDetails} handleclose={() => setOpendeletemodal(false)} /> : null}\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n    description: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 145,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(1.2),\r\n\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 8,\r\n    },\r\n\r\n}));\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const HomeVisitorRequest = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const res = await axios.post(ip + 'Web_GetHomeVisitorRequest', { ClinicId: clinicid });\r\n        return res?.data?.HomeVisitorRequest;\r\n\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const ApprovedHomeVisitorRequest = async (object, hvobject) => {\r\n\r\n    const date = new Date();\r\n    const now = date.toISOString().split('T')[0];\r\n    const time = date.getHours() + \":\" + date.getMinutes() +\":\" + date.getSeconds();\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const res = await axios.post(ip + 'ApprovedHomeVisitorRequest', {\r\n            id: object.id,\r\n            ClinicId: clinicid,\r\n            FirstName: object.FirstName,\r\n            LastName: object.LastName,\r\n            Title: object.HomeVisitReason,\r\n            RequesterId: object.RequesterId,\r\n            HomeVisitorId: hvobject,\r\n            AppointmentDate: now,\r\n            BookedDate: now,\r\n            AppointmentTime: time,\r\n            AppointmentStatus: 'Booked'\r\n        })\r\n\r\n        return res?.data;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n\r\n}\r\n","import axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\n\r\nexport const Delete_Home_Visitor_Request = async (id) => {\r\n    try {\r\n        const deleterequest = await axios.delete(ip + 'Web_DeleteHomeVisitorRequest', { data: { id: id } });\r\n        return JSON.stringify(deleterequest?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Delete_Home_Visitor_Request } from '../../../Apis/HomeVisitorRequest/DeleteHomeVisitorRequest/index';\r\n\r\nconst Delete_HV_Request = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (id) => {\r\n        const request = await Delete_Home_Visitor_Request(id);\r\n        let response = JSON.parse(request);\r\n        if (response.success == '200') {\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Home Visitor Request Details?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={() => Delete_Api(data.id)} className={classes.btnregister} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_HV_Request;\r\n","import axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\n\r\nexport const AddHomeVisitorRequest = async (RequesterId, HomeVisitorId, ClinicId, RequestStatus, MobileNo, Address, PreferedTime, PreferedDate, HomeVisitReason) => {\r\n    const body = {\r\n        RequesterId: RequesterId,\r\n        HomeVisitorId: HomeVisitorId,\r\n        ClinicId: ClinicId,\r\n        RequestStatus: RequestStatus,\r\n        MobileNo: MobileNo,\r\n        Address: Address,\r\n        PreferedTime: PreferedDate + \" \" + PreferedTime,\r\n        HomeVisitReason: HomeVisitReason,\r\n    }\r\n    try {\r\n        const res = await axios.post(ip + 'Web_AddHomeVisitorRequest', body);\r\n        return JSON.stringify(res?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Time } from '../../../Apis/Dashboard/Edit_Appointment_From_PatientIn/index';\r\nimport {AddHomeVisitorRequest} from '../../../Apis/HomeVisitorRequest/AddHVRequest/index';\r\n\r\nimport axios from 'axios';\r\nconst drawerWidth = 240;\r\n\r\nconst Add_HV_Request = ({ show, data, handleclose }) => {\r\n    const getClinicPatients = 'http://13.233.217.107:8080/api/Web_GetPatients';\r\n    const getHomevisitors = 'http://13.233.217.107:8080/api/GetHomeVisitorDoctorsforClinic';\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [firstnm, setfirstnm] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [slots, setslots] = useState([]);\r\n    const [requestfor, setrequestfor] = useState('');\r\n    const [MobileNo, setMobileNo] = useState('');\r\n    const [date, setdate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [Address, setAddress] = useState('');\r\n    const [text, settext] = useState('');\r\n    const [PatientUserid, setPatientUserid] = useState('')\r\n    const [hvuserid, sethvuserid] = useState('');\r\n    const [homevisitorsearch, sethomevisitorsearch] = useState([]);\r\n    var arr = [];\r\n    const [patient, setpatient] = useState(arr);\r\n    useEffect(() => {\r\n        fetchtimings();\r\n        fetchclinicpatientsdata();\r\n        fetchHomeVisitorData();\r\n    }, [])\r\n\r\n    const fetchtimings = async () => {\r\n        try {\r\n            const timingInfo = await Time()\r\n            setslots(timingInfo);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const fetchHomeVisitorData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const homevisitorInfo = await axios.post(getHomevisitors, { ClinicId: clinicid });\r\n            sethomevisitorsearch(homevisitorInfo?.data?.HomeVisitors);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    const fetchclinicpatientsdata = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const clinicpatientInfo = await axios.post(getClinicPatients, { ClinicId: clinicid })\r\n            setpatient(clinicpatientInfo?.data?.Patients);\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const addRequest = async (PatientUserid, hvuserid, MobileNo, Address, time, date, requestfor) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let ClinicId = parsed.ClinicId;\r\n        try {\r\n            const registration = await AddHomeVisitorRequest(PatientUserid, hvuserid, ClinicId, \"Pending\", MobileNo, Address, time, date, requestfor);\r\n            let parse = JSON.parse(registration);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                handleclose();\r\n                window.location.reload()\r\n            }\r\n            else {\r\n                alert(parse.message);\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    console.log(homevisitorsearch)\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Home Visitor Request\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                {/* <Autocomplete\r\n                                    disablePortal\r\n                                    id=\"combo-box-demo\"\r\n                                    options={patient}\r\n                                    sx={{ width: 300 }}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Movie\" />}\r\n                                /> */}\r\n                                <Select\r\n                                    className={classes.textField}\r\n                                    onChange={(e) => setPatientUserid(e.target.value)}\r\n                                    native\r\n                                    label=\"select doctor\"\r\n                                    inputProps={{\r\n                                        name: 'select doctor',\r\n                                        id: 'outlined-appointment-native-simple',\r\n                                    }}\r\n\r\n                                    style={{ width: '400px', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                >\r\n                                    <option aria-label=\"None\" value=\"\" >Select Patient</option>\r\n                                    {patient.map(v => (<option value={v.UserId}>{v.FirstName} {v.LastName}</option>))}\r\n                                </Select>\r\n\r\n                            </FormControl>\r\n                            <TextField className={classes.inputFields}\r\n                                value={requestfor}\r\n                                onChange={(e) =>\r\n                                    setrequestfor(e.target.value)\r\n                                }\r\n                                id=\"outlined-basic\"\r\n                                size=\"small\"\r\n                                placeholder=\"Requesting For*\"\r\n                                variant=\"outlined\"\r\n                                style={{ marginTop: '20px' }}\r\n                            />\r\n\r\n                            <TextField\r\n                                className={classes.inputFields}\r\n                                value={MobileNo}\r\n                                onChange={(e) => {\r\n                                    const re = /^[0-9\\b]+$/;\r\n                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                        setMobileNo(e.target.value)\r\n                                    }\r\n                                }}\r\n                                id=\"outlined-basic\"\r\n                                type=\"number\"\r\n                                size=\"small\"\r\n                                placeholder=\"Mobile Number*\"\r\n                                variant=\"outlined\"\r\n                                onInput={(e) => {\r\n                                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6} >\r\n\r\n                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                <Select\r\n                                    className={classes.textField}\r\n                                    native\r\n                                    label=\"select doctor\"\r\n                                    value={hvuserid}\r\n                                    onChange={(e) => sethvuserid(e.target.value)}\r\n                                    inputProps={{\r\n                                        name: 'select doctor',\r\n                                        id: 'outlined-appointment-native-simple',\r\n                                    }}\r\n\r\n                                    style={{ width: '400px', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                >\r\n                                    <option aria-label=\"None\" value=\"\" >Select Doctor</option>\r\n                                    {homevisitorsearch.map(v => (<option value={v.UserId}>{v.FirstName} {v.LastName}</option>))}\r\n                                    {/* {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))} */}\r\n                                </Select>\r\n\r\n                            </FormControl>                            <TextField\r\n                                className={classes.inputFields}\r\n                                id=\"outlined-basic\"\r\n                                size=\"small\"\r\n                                value={date}\r\n                                onChange={(e) => setdate(e.target.value)}\r\n                                type='date'\r\n                                variant=\"outlined\"\r\n                                style={{ marginTop: '20px' }}\r\n                            />\r\n                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                <Select\r\n                                    className={classes.textField}\r\n                                    native\r\n                                    value={time}\r\n                                    onChange={(e) => setTime(e.target.value)}\r\n                                    label=\"time\"\r\n                                    inputProps={{\r\n                                        name: 'time',\r\n                                        id: 'outlined-appointment-native-simple',\r\n                                    }}\r\n\r\n                                    style={{ width: '400px', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                >\r\n                                    <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                    {slots.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                    {/* {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))} */}\r\n                                </Select>\r\n\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField className={classes.inputFields} multiline\r\n                                value={Address}\r\n                                onChange={(e) => {\r\n                                    setAddress(e.target.value)\r\n                                }}\r\n                                rows={2}\r\n                                rowsMax={6} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                style={{ width: 855 }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid xs={12} sm={6}>\r\n                                <Button className={classes.btnCancle} onClick={handleclose} style={{ float: 'right', marginRight: 20 }}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid xs={12} sm={6}>\r\n                                <Button onClick={() => addRequest(PatientUserid, hvuserid, MobileNo, Address, time, date, requestfor)} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>\r\n                                    Add\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 400,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}))\r\n\r\nexport default Add_HV_Request;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogTitle, DialogContentText, DialogActions, DialogContent, Typography, Button, IconButton, Grid, Paper, InputBase, Avatar, TextField, FormControl, Select, Slide } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { HomeVisitorRequest } from '../Apis/HomeVisitorRequest/GetHomeVisitorRequest/index';\r\nimport { ApprovedHomeVisitorRequest } from '../Apis/HomeVisitorRequest/ApprovedRequest/index';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Delete_HV_Request from './HomeVisitor_Request/Delete_Request/index';\r\nimport Add_HV_Request from './HomeVisitor_Request/Add_HV_Request/index';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\n\r\n\r\nconst getHomeVisitorRequestSearchApi = 'http://13.233.217.107:8080/api/Web_SearchHomeVisitorRequest';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n    description: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 145,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n    buttonProgress: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft: 350\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DoctorHomeVisitRequest() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [requestData, setrequestData] = useState([]);\r\n    const [requestorDetails, setrequestorDetails] = useState([]);\r\n    const [openapprovedmodal, setOpenApprovedmodal] = React.useState(false);\r\n    const [approvedRequest, setapprovedRequest] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [openDeleteModal, setopenDeleteModal] = useState(false);\r\n    const [homevisitorrequestsearch, sethomevisitorrequestsearch] = useState('');\r\n    const [openhvmodal, setopenhvmodal] = useState(false);\r\n\r\n    const fetchRequestData = async () => {\r\n        const requestInfo = await HomeVisitorRequest();\r\n        setrequestData(requestInfo);\r\n    }\r\n\r\n    const searchHomeVisitorsRequest = async (homevisitorrequestsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const requestInfo = await axios.post(getHomeVisitorRequestSearchApi, { ClinicId: clinicid, Name: homevisitorrequestsearch });\r\n            setrequestData(requestInfo?.data?.HomeVisitorRequest);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleRowClick = async (id) => {\r\n        setrequestorDetails(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            fetchRequestData()\r\n        }, 10000);\r\n        fetchRequestData();\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    const handleClickOpenApprovedmodal = async (obj) => {\r\n        setLoading(true);\r\n        const res = await ApprovedHomeVisitorRequest(obj)\r\n\r\n        if (res) {\r\n            setapprovedRequest(obj)\r\n            setOpenApprovedmodal(true);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleContinue = () => {\r\n        if (requestorDetails == '') {\r\n            alert('Please select request from list');\r\n            return;\r\n        }\r\n        navigate('/DoctorAssignHomeVisitor', {\r\n            state: { details: requestorDetails }\r\n        })\r\n    };\r\n\r\n    const handlesContinue = () => {\r\n        if (requestorDetails == '') {\r\n            alert('Please select request from list');\r\n            return;\r\n        }\r\n        else { (setopenDeleteModal(true)) }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHomeVisitors\");\r\n    };\r\n\r\n    const [opendatemodal, setOpenDatemodal] = React.useState(false);\r\n\r\n    const handleClickOpenDatemodal = () => {\r\n        setOpenDatemodal(true);\r\n    };\r\n\r\n    const handleCloseDatemodal = () => {\r\n        setOpenDatemodal(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Home Visitor Requests\r\n                        <Button onClick={() => setopenhvmodal(true)} className={classes.btnregister} style={{ float: 'right', marginRight: 20, fontFamily: 'Poppins', fontSize: 12, width: 190 }}>Add Home Visitor Request</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            label=\"Search by Name\"\r\n                                            placeholder='Search by Patient Name'\r\n                                            onChange={(e) => sethomevisitorrequestsearch(e.target.value)}\r\n                                            value={homevisitorrequestsearch}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} onClick={() => searchHomeVisitorsRequest(homevisitorrequestsearch)} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>Search</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            <DataGrid\r\n                                style={{ height: 350, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                                rows={requestData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={5}\r\n                                onRowClick={(newSelection) => {\r\n                                    handleRowClick(newSelection.row);\r\n                                }}\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins', textDecorationLine: 'underline', textUnderlineOffset: '1px', textDecorationThickness: '1px',\r\n                                fontStyle: 'normal',\r\n\r\n                            }}>\r\n                                Profile\r\n                            </Typography>\r\n                            <div><Button style={{ position: 'relative', marginTop: -55, left: 700, fontWeight: 'normal', color: '#707070' }} onClick={handlesContinue}><DeleteIcon /></Button> </div>\r\n                            <center>\r\n                                <div style={{paddingBottom:10,height:50,position:'relative',bottom:15 }}>\r\n                                    {requestorDetails.ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80,position:'relative',bottom:12 }} src={requestorDetails.ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80,position:'relative',bottom:12 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {requestorDetails.FirstName ? requestorDetails.FirstName : \"NA\"} {requestorDetails.LastName ? requestorDetails.LastName : \"\"}\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 14,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 400\r\n                                }}>\r\n                                    Requester Id: {requestorDetails.RequesterId ? requestorDetails.RequesterId : \"NA\"}\r\n                                    <div><span style={{position:'relative',left:3}}>Request for Dr. </span> <span> {requestorDetails.HFName?requestorDetails.HFName:'NA'} {requestorDetails.HLName}</span>\r\n                                    </div>\r\n                                </Typography>\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: \"Poppins\" }}>\r\n                                            Mobile Number\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {requestorDetails.MobileNo ? requestorDetails.MobileNo : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Prefered Date\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {requestorDetails.PreferedTime ? `${(requestorDetails.PreferedTime).split(' ')[0]}` : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Prefered Time\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {requestorDetails.PreferedTime ? requestorDetails.PreferedTime && `${(requestorDetails.PreferedTime).split(' ')[1]}` : \"NA\"}\r\n                                        </Typography>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Email Id\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {requestorDetails.Email ? requestorDetails.Email : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12}>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Address\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {requestorDetails.address ? requestorDetails.address : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Home Visit Reason\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {requestorDetails.HomeVisitReason ? requestorDetails.HomeVisitReason : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 20 }}>\r\n                                    {!loading ? <>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={handleGoBack}style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                        </Grid>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} disabled={loading} onClick={() => handleContinue(requestorDetails)} style={{ float: 'left', marginLeft: 20 }}>Continue</Button>\r\n                                            {/* <Button className={classes.btnregister} disabled={loading} onClick={() => handleClickOpenApprovedmodal(requestorDetails)} style={{ float: 'left', marginLeft: 20 }}>Continue</Button> */}\r\n                                        </Grid>\r\n                                    </> :\r\n                                        <CircularProgress size={20} className={classes.buttonProgress} />\r\n                                    }\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {openDeleteModal ? <Delete_HV_Request show={openDeleteModal} data={requestorDetails} handleclose={() => setopenDeleteModal(false)} /> : null}\r\n\r\n                {openhvmodal ? <Add_HV_Request show={openhvmodal} handleclose={() => setopenhvmodal(false)} /> : null}\r\n\r\n                {/* for Approve Request*/}\r\n\r\n                <Dialog\r\n                    open={openapprovedmodal}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#78B088' }}>\r\n                        <center>\r\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"close\" style={{ color: '#fff', backgroundColor: '#78B088' }}>\r\n                                <CheckIcon style={{ fontSize: 35, fontWeight: 600 }} />\r\n                            </IconButton>\r\n                        </center>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#78B088', fontSize: 20 }}>\r\n                            Home Visitor Request Has Been Approved!\r\n                        </DialogContentText>\r\n                        <Grid item xs={12} style={{ marginTop: 40 }}>\r\n                            <center>\r\n                                <Button className={classes.btnregister} onClick={handleContinue} style={{ width: 100, fontSize: 14, fontFamily: 'Poppins' }}>\r\n                                    OK\r\n                                </Button>\r\n                            </center>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions >\r\n\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n\r\n                {/* for Change Date Time */}\r\n\r\n                <Dialog\r\n                    open={opendatemodal}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleCloseDatemodal}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#00318B' }}>{\"Edit Date/Time\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseDatemodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#2C7FB2', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n                                        Date\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#2C7FB2', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50, marginTop: 15 }}>\r\n                                        Time\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" style={{ width: '100%', marginTop: 20 }} >\r\n                                        <Select\r\n                                            size='large'\r\n                                            native\r\n                                            inputProps={{\r\n                                                name: 'start time',\r\n                                                id: 'outlined-start-time-native-simple',\r\n                                            }}\r\n                                            style={{ width: '90%', fontSize: 12 }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\">Select Time</option>\r\n                                            <option value={1}>08:00</option>\r\n                                            <option value={2}>09:00</option>\r\n                                            <option value={3}>10:00</option>\r\n                                            <option value={4}>11:00</option>\r\n                                            <option value={5}>12:00</option>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <Grid container style={{ paddingBottom: 20 }}>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnregister} onClick={handleCloseDatemodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnregister} onClick={handleCloseDatemodal} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Dialog>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Select, FormControl, FormControlLabel, Switch, Radio, InputLabel, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 100 },\r\n    {\r\n        id: 'mobile',\r\n        label: 'Mobile No',\r\n        minWidth: 50,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    // {\r\n    //     id: 'email',\r\n    //     label: 'Email',\r\n    //     minWidth: 50,\r\n    //     align: 'right',\r\n    // },\r\n];\r\n\r\nfunction createData(name, mobile) {\r\n    return { name, mobile };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pradeep Musale', '90334567893',),\r\n    createData('Kirti Virnak', '9877234561',),\r\n    createData('Akshay Joshi', '8799034567'),\r\n    createData('Vinay Jichkar', '9012345678'),\r\n    createData('Kadir Pathan', '7890123456'),\r\n    createData('Ashwin Bagul', '8823123456'),\r\n    createData('Manisha Chaudhari', '8922345678'),\r\n    createData('Radha Pingle', '9912786453'),\r\n    createData('Raj Varma', '8934526789'),\r\n    createData('Kausturi Mahatme', '7822364785'),\r\n    createData('Shweta Wankhade', '8766456372'),\r\n    createData('Piyush Umale', '8523448946'),\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(1.2),\r\n\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 8,\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function DoctorAddHomeVisitors() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeAllDays = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const [statemon, setStateMon] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeMonday = (event) => {\r\n        setStateMon({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const [statetue, setStateTue] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeTuesday = (event) => {\r\n        setStateTue({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const [statewed, setStateWed] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeWednesday = (event) => {\r\n        setStateWed({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n    const [statethu, setStateThu] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeThursday = (event) => {\r\n        setStateThu({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const [statefri, setStateFri] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeFriday = (event) => {\r\n        setStateFri({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n    const [statesat, setStateSat] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeSaturday = (event) => {\r\n        setStateSat({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const [statesun, setStateSun] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeSunday = (event) => {\r\n        setStateSun({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    const [category, setCategory] = React.useState(\"\");\r\n\r\n    function handleChangedCategory(event) {\r\n        setCategory(event.target.value);\r\n    }\r\n\r\n    const [fromtime, setFromTime] = React.useState(\"\");\r\n\r\n    function handleChangedFrom(event) {\r\n        setFromTime(event.target.value);\r\n    }\r\n\r\n    const [totime, setToTime] = React.useState(\"\");\r\n\r\n    function handleChangedTo(event) {\r\n        setToTime(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Home Visitors\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            label=\"Search by Name\"\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>Search</Button>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                            {/* <Grid item xs={12} sm={12}>\r\n                            <Paper className={classes.paper}> */}\r\n                            <TableContainer style={{ paddingTop: 20 }} >\r\n                                <Table className={classes.tbl} size=\"small\" stickyHeader aria-label=\"sticky table\" style={{ borderRadius: 5 }}>\r\n                                    <TableHead style={{}}>\r\n                                        <TableRow style={{ borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\r\n                                            {columns.map((column) => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{\r\n                                                        minWidth: column.minWidth,\r\n                                                        backgroundColor: '#78B088',\r\n                                                        color: '#fff',\r\n                                                        fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        fontWeight: 600,\r\n                                                        overflow: 'hidden',\r\n                                                        whiteSpace: 'nowrap',\r\n                                                        textOverflow: 'ellipsis',\r\n                                                    }}\r\n\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody >\r\n                                        {rows\r\n                                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            .map((row) => {\r\n                                                return (\r\n                                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                        {columns.map((column) => {\r\n                                                            const value = row[column.id];\r\n                                                            return (\r\n                                                                <TableCell key={column.id} align={column.align} style={{\r\n                                                                    color: '#2C7FB2',\r\n                                                                    fontFamily: 'Poppins',\r\n                                                                    fontStyle: 'normal',\r\n                                                                    fontWeight: 600,\r\n                                                                    overflow: 'hidden',\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    textOverflow: 'ellipsis',\r\n                                                                    justifyContent: 'center',\r\n                                                                    fontSize: 12\r\n                                                                }}>\r\n                                                                    {column.format && typeof value === 'number'\r\n                                                                        ? column.format(value)\r\n                                                                        : value}\r\n\r\n                                                                </TableCell>\r\n                                                            );\r\n                                                        })}\r\n\r\n                                                    </TableRow>\r\n                                                );\r\n                                            })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 15, 25]}\r\n                                component=\"div\"\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            />\r\n\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n\r\n                            <Grid container >\r\n                                <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 18, color: '#00318B', fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n\r\n                                    }}>\r\n                                        Details\r\n                                    </Typography>\r\n\r\n                                    <div style={{ marginTop: 13 }}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" style={{ width: '140%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" size=\"small\" style={{ width: '140%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='number' label=\"Mobile No\" variant=\"outlined\" size=\"small\" style={{ width: '140%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='email' label=\"Email ID\" variant=\"outlined\" size=\"small\" style={{ width: '140%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} multiline rows={2} rowsMax={4} id=\"outlined-basic\" type='text' label=\"Address\" variant=\"outlined\" size=\"small\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Grid container>\r\n                                            <Grid item xs={6} >\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm} >\r\n                                                    <TextField className={classes.textFieldForm} id=\"outlined-basic\" type=\"text\" label=\"Education\" variant=\"outlined\" size=\"small\" style={{ width: '80%' }} />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%', marginLeft: '-25px' }} >\r\n                                                    <InputLabel htmlFor=\"outlined-category-native-simple\">Category</InputLabel>\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={category}\r\n                                                        onChange={handleChangedCategory}\r\n                                                        label=\"Category\"\r\n                                                        inputProps={{\r\n                                                            name: 'category',\r\n                                                            id: 'outlined-category-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '80%', fontSize: 14, marginTop: '-7px' }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\" />\r\n                                                        <option value={1}>Gynecologist</option>\r\n                                                        <option value={2}>Orthopedist</option>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container style={{ marginLeft: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 18, color: '#00318B', fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                        }}>\r\n                                            Availability\r\n                                        </Typography>\r\n                                        <Grid container style={{ marginTop: 20 }}>\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    All Days\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={state.checkedB}\r\n                                                            onChange={handleChangeAllDays}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#78B088', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#78B088', float: 'right', paddingRight: 20 }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={4}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    Monday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    Tuesday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    Wednesday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={statemon.checkedB}\r\n                                                            onChange={handleChangeMonday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20 }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={statetue.checkedB}\r\n                                                            onChange={handleChangeTuesday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20 }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={statewed.checkedB}\r\n                                                            onChange={handleChangeWednesday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20 }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={4}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    Thrusday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    Friday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    Saturday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={statethu.checkedB}\r\n                                                            onChange={handleChangeThursday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20 }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={statefri.checkedB}\r\n                                                            onChange={handleChangeFriday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20 }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={statesat.checkedB}\r\n                                                            onChange={handleChangeSaturday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20 }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={12}>\r\n                                                <center>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600\r\n                                                    }}>\r\n                                                        Sunday\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <center>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch\r\n                                                                checked={statesun.checkedB}\r\n                                                                onChange={handleChangeSunday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{\r\n                                                                    color: '#2C7FB2',\r\n                                                                }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'center', marginLeft: 10 }}\r\n                                                    />\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 18, color: '#00318B', fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                        }}>\r\n                                            Timings\r\n                                        </Typography>\r\n\r\n                                        <Grid container style={{ marginTop: 10 }}>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    From\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={3}>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='medium'\r\n                                                        native\r\n                                                        value={fromtime}\r\n                                                        onChange={handleChangedFrom}\r\n                                                        inputProps={{\r\n                                                            name: 'fromtime',\r\n                                                            id: 'outlined-from-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '50%', fontSize: 12 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value='' />\r\n                                                        <option value={1}>08:00</option>\r\n                                                        <option value={2}>09:00</option>\r\n                                                        <option value={3}>10:00</option>\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={3}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600\r\n                                                }}>\r\n                                                    To\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={3}>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='medium'\r\n                                                        native\r\n                                                        value={totime}\r\n                                                        onChange={handleChangedTo}\r\n                                                        inputProps={{\r\n                                                            name: 'totime',\r\n                                                            id: 'outlined-to-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '50%', fontSize: 12 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value='' />\r\n                                                        <option value={1}>08:00</option>\r\n                                                        <option value={2}>09:00</option>\r\n                                                        <option value={3}>10:00</option>\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <center>\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 10 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","// import React, { useState, useEffect } from 'react';\r\n// import { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, InputLabel, Radio, Typography, Paper, Link } from \"@material-ui/core\";\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n// import { EditPatient } from '../../../Apis/Clinic_Patients/Edit_Patient';\r\n// import { EditStaffdata } from '../../../Apis/Clinic_Staff/index';\r\n// import { Doctor_Category} from '../../../Apis/Clinic_Staff/index';\r\n// import { Times} from '../../../Apis/Clinic_Staff/index';\r\n// const drawerWidth = 240;\r\n\r\n// const Transition = React.forwardRef(function Transition(props, ref) {\r\n//     return <Slide direction=\"up\" ref={ref} {...props} />;\r\n// });\r\n\r\n\r\n\r\n// export default function Edit_staff({ show, data, handleCloseEditmodal }) {\r\n//     const classes = useStyles();\r\n//     const theme = useTheme();\r\n//     const navigate = useNavigate();\r\n//     let obj = JSON.stringify(data);\r\n//     let parse=JSON.parse(obj)\r\n    \r\n//     const [maxWidth, setMaxWidth] = React.useState('md');\r\n//     const [firstnm, setfirstnm] = useState(parse[0].FirstName);\r\n//     const [lastnm, setlastnm] = useState(obj ? obj.LastName : '');\r\n//     const [mobile, setmobile] = useState(obj ? obj.MobileNo : '');\r\n//     const [email, setemail] = useState(obj ? obj.Email : '');\r\n\r\n//     // const [gender, setgender] = useState(obj ? obj?.Gender : '');\r\n//     // const [address, setaddress] = useState(obj ? obj?.Address : '');\r\n//     // const [city, setcity] = useState(obj ? obj?.City : '');\r\n//     // const [pincode, setpincode] = useState(obj ? obj?.Pincode : '');\r\n//     // const [state, setstate] = useState(obj ? obj?.State : '');\r\n//     // const [country, setcountry] = useState(obj ? obj?.Country : '');\r\n//     // const [height, setheight] = useState(obj ? obj?.Height : '');\r\n//     // const [weight, setweight] = useState(obj ? obj?.Weight : '');\r\n\r\n//     const [editfirstName, seteditfirstName] = useState(parse[0].FirstName);\r\n//     const [editlastName, seteditlastName] = useState(parse[0].LastName);\r\n//     const [editmobile, seteditmobile] = useState(parse[0]. MobileNo);\r\n//     const [editaddress, seteditaddress] = useState(parse[0]. Address);\r\n//     const [editeducation, setediteducation] = useState(parse[0].Education);\r\n//     const [editemail, seteditemail] = useState(parse[0].Email);\r\n//     const [editgender, seteditgender] = useState(parse[0].Gender);\r\n//     const [editpassword, seteditpassword] = useState(parse[0]. Password);\r\n//     const [editcategory, seteditcategory] = useState(parse[0]. Category);\r\n//     const [editrole, seteditrole] = useState(parse[0].role);\r\n//     const [doctorCategory, setdoctorCategory] = useState([]);\r\n//     const [times, settimes] = useState([]);\r\n//     const [editmorningStartTime, seteditmorningStartTime] = useState(parse[0]. morningStartTime);\r\n//     const [editmorningEndTime, seteditmorningEndTime] = useState(parse[0].morningEndTime);\r\n//     const [editeveningStartTime, setediteveningStartTime] = useState(parse[0]. eveningStartTime);\r\n//     const [editeveningEndTime, setediteveningEndTime] = useState(parse[0]. eveningEndTime);\r\n\r\n//     const fetchClinicStaffData = async () => {\r\n//         var cdata = await localStorage.getItem(\"userdata\");\r\n//         let parsed = JSON.parse(cdata);\r\n//         let clinicid = parsed.ClinicId;\r\n       \r\n        \r\n//         const object = {\r\n//             ClinicId: clinicid,\r\n//             UserId: parse[0].UserId,\r\n//             FirstName: editfirstName,\r\n//             LastName: editlastName,\r\n//             MobileNo: editmobile,\r\n//             Education: editeducation,\r\n//             Email: editemail,\r\n//             Password: editpassword,\r\n//             Gender: editgender,\r\n//             Category: editcategory,\r\n//             role: editrole,\r\n//             Address: editaddress,\r\n//             morningStartTime: editmorningStartTime,\r\n//             morningEndTime: editmorningEndTime,\r\n//             eveningStartTime: editeveningStartTime,\r\n//             eveningEndTime: editeveningEndTime,\r\n\r\n\r\n//             // City: city,\r\n//             // Pincode: pincode,\r\n//             // State: state,\r\n//             // Country: country,\r\n//             // Height: height,\r\n//             // Weight: weight\r\n//         }\r\n//         const editPatientRequest = await EditStaffdata(object);\r\n//         alert(editPatientRequest);\r\n//         window.location.reload();\r\n\r\n        \r\n\r\n//     }\r\n//     const fetchDoctorCategory = async () => {\r\n//         const category = await Doctor_Category();\r\n//         setdoctorCategory(category);\r\n//     }\r\n//     const fetchTimes = async () => {\r\n//         const times = await Times();\r\n//         settimes(times);\r\n//     }\r\n\r\n//     useEffect(() => {\r\n\r\n        \r\n//         fetchDoctorCategory();\r\n//         fetchTimes();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <>\r\n//             {/* Edit Patient Details */}\r\n\r\n//             <Dialog\r\n//                 open={show}\r\n//                 onClose={handleCloseEditmodal}\r\n//                 maxWidth={maxWidth}\r\n//                 aria-labelledby=\"alert-dialog-title\"\r\n//                 aria-describedby=\"alert-dialog-description\"\r\n//             >\r\n//                 <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n//                     <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n//                         <CloseIcon />\r\n//                     </IconButton>\r\n//                 </DialogTitle>\r\n//                 <DialogContent>\r\n//                     <DialogContentText id=\"alert-dialog-description\">\r\n//                         <Grid container>\r\n//                             <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n//                                 <center>\r\n//                                     <div>\r\n//                                         <TextField className={classes.inputFields} value={editfirstName} onChange={(e) => seteditfirstName(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n//                                         <TextField className={classes.inputFields} value={editlastName} onChange={(e) => seteditlastName(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n//                                         <TextField className={classes.inputFields} value={editmobile} onChange={(e) => seteditmobile(e.target.value)} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Mobile Number\" variant=\"outlined\" />\r\n//                                         <TextField className={classes.inputFields} value={editemail} onChange={(e) => seteditemail(e.target.value)} id=\"outlined-basic\" type=\"email\" size=\"small\" label=\"Email Id\" variant=\"outlined\" />\r\n//                                         <TextField className={classes.inputFields} value={editpassword} onChange={(e) => seteditpassword(e.target.value)} type=\"password\" id=\"outlined-basic\" size=\"small\" label=\"Password\" variant=\"outlined\" />\r\n//                                         <TextField className={classes.inputFields} multiline\r\n//                                             rows={3}\r\n//                                             rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\" value={editaddress} onChange={(e) => seteditaddress(e.target.value)}\r\n//                                         />\r\n//                                     </div>\r\n//                                 </center>\r\n//                             </Grid>\r\n\r\n\r\n//                             <Grid item xs={6}>\r\n//                                 <center>\r\n//                                     <Grid container style={{ marginTop: '-15px' }}>\r\n//                                         <Grid item xs={12} sm={6}>\r\n//                                             <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ marginLeft: 20 }}>Doctor\r\n//                                                 <Radio\r\n//                                                     checked={editrole === 'Doctor'}\r\n//                                                     color='primary'\r\n//                                                     onChange={(e) => seteditrole(e.target.value)} \r\n//                                                     value={editrole}\r\n//                                                     name=\"radio-button-demo\"\r\n//                                                     inputProps={{ 'aria-label': 'Doctor' }}\r\n\r\n//                                                 /></InputLabel>\r\n//                                         </Grid>\r\n\r\n//                                         <Grid item xs={12} sm={6}>\r\n\r\n//                                             <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ marginRight: 30 }}>Receptionist\r\n\r\n//                                                 <Radio\r\n//                                                     checked={editrole === 'Receptionist'}\r\n//                                                     onChange={(e) => seteditrole(e.target.value)} value={editrole}\r\n//                                                     color='primary'\r\n//                                                     name=\"radio-button-demo\"\r\n//                                                     inputProps={{ 'aria-label': 'Receptionist' }}\r\n//                                                 /></InputLabel>\r\n\r\n//                                         </Grid>\r\n//                                         <Grid xs={12} style={{ marginTop: 5 }}>\r\n//                                             <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '73%' }} >\r\n//                                                 <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ marginLeft: 20 }}>Gender</InputLabel>\r\n//                                                 <Select\r\n//                                                     className={classes.textFieldForm}\r\n//                                                     size='large'\r\n//                                                     native\r\n//                                                     value={editgender}\r\n//                                                     onChange={(e) => seteditgender(e.target.value)}\r\n//                                                     label=\"Gender\"\r\n//                                                     inputProps={{\r\n//                                                         name: 'gender',\r\n//                                                         id: 'outlined-gender-native-simple',\r\n//                                                     }}\r\n//                                                     style={{ width: '90%', fontSize: 14 }}\r\n//                                                 >\r\n//                                                     <option aria-label=\"None\" value=\"\" />\r\n//                                                     <option value={\"Male\"}>Male</option>\r\n//                                                     <option value={\"Female\"}>Female</option>\r\n\r\n//                                                 </Select>\r\n//                                             </FormControl>\r\n//                                         </Grid>\r\n//                                     </Grid>\r\n\r\n//                                     <div >\r\n//                                         <TextField className={classes.inputFields} value={editeducation} onChange={(e) => setediteducation(e.target.value)} id=\"outlined-basic\" label=\"Education\" variant=\"outlined\" size=\"small\" />\r\n//                                         {/* <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Category\" variant=\"outlined\" size=\"small\" />  */}\r\n//                                         <Grid xs={12} >\r\n//                                             <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '73%' }} >\r\n//                                                 <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ marginLeft: 20 }}>Category</InputLabel>\r\n//                                                 <Select\r\n//                                                     className={classes.textFieldForm}\r\n//                                                     size='large'\r\n//                                                     native\r\n//                                                     value={editcategory}\r\n//                                                     onChange={(e) => seteditcategory(e.target.value)}\r\n//                                                     label=\"Category\"\r\n//                                                     inputProps={{\r\n//                                                         name: 'category',\r\n//                                                         id: 'outlined-category-native-simple',\r\n//                                                     }}\r\n//                                                     style={{ width: '90%', fontSize: 14 }}\r\n//                                                 >\r\n//                                                     <option aria-label=\"None\" value=\"\" >Category</option>\r\n//                                                     {doctorCategory.map((item) => {\r\n//                                                         return (\r\n//                                                             <option value={item.Category}>{item.Category}</option>\r\n//                                                         )\r\n//                                                     })}\r\n//                                                 </Select>\r\n//                                             </FormControl>\r\n//                                         </Grid>\r\n//                                         <Grid item xs={12}>\r\n//                                             <center>\r\n//                                                 <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n//                                                     Morning Shift Time\r\n//                                                 </Typography>\r\n//                                             </center>\r\n//                                         </Grid>\r\n\r\n//                                         <Grid container style={{ padding: 5 }}>\r\n//                                             <Grid item xs={6}>\r\n//                                                 <center>\r\n//                                                     <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n//                                                         Start Time\r\n//                                                     </Typography>\r\n//                                                 </center>\r\n//                                             </Grid>\r\n//                                             <Grid item xs={6}>\r\n//                                                 <center>\r\n//                                                     <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginRight: 50 }}>\r\n//                                                         End Time\r\n//                                                     </Typography>\r\n//                                                 </center>\r\n//                                             </Grid>\r\n//                                         </Grid>\r\n//                                         <Grid container>\r\n//                                             <Grid item xs={6}>\r\n//                                                 <center>\r\n//                                                     <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'right', marginRight: 10 }} >\r\n\r\n//                                                         <Select\r\n//                                                             className={classes.textFieldForm}\r\n//                                                             size='large'\r\n//                                                             native\r\n//                                                             value={editmorningStartTime}\r\n//                                                             onChange={(e) => seteditmorningStartTime(e.target.value)}\r\n//                                                             label=\"Start Time\"\r\n//                                                             inputProps={{\r\n//                                                                 name: 'start time',\r\n//                                                                 id: 'outlined-start-time-native-simple',\r\n//                                                             }}\r\n//                                                             style={{ width: '90%', fontSize: 12 }}\r\n//                                                         >\r\n//                                                             <option aria-label=\"None\" value=\"\" >Start Time</option>\r\n//                                                             {times.map((item) => {\r\n//                                                                 return (\r\n//                                                                     <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n//                                                                 )\r\n//                                                             })}\r\n\r\n//                                                         </Select>\r\n//                                                     </FormControl>\r\n//                                                 </center>\r\n//                                             </Grid>\r\n\r\n//                                             <Grid item xs={6}>\r\n//                                                 <center>\r\n//                                                     <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'left', marginLeft: 10 }} >\r\n\r\n//                                                         <Select\r\n//                                                             className={classes.textFieldForm}\r\n//                                                             size='large'\r\n//                                                             native\r\n//                                                             value={editmorningEndTime}\r\n//                                                             onChange={(e) => seteditmorningEndTime(e.target.value)}\r\n//                                                             label=\"End Time\"\r\n//                                                             inputProps={{\r\n//                                                                 name: 'end time',\r\n//                                                                 id: 'outlined-end-time-native-simple',\r\n//                                                             }}\r\n//                                                             style={{ width: '90%', fontSize: 12 }}\r\n//                                                         >\r\n//                                                             <option aria-label=\"None\" value=\"\" >End Time</option>\r\n//                                                             {times.map((item) => {\r\n//                                                                 return (\r\n//                                                                     <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n//                                                                 )\r\n//                                                             })}\r\n//                                                         </Select>\r\n//                                                     </FormControl>\r\n//                                                 </center>\r\n//                                             </Grid>\r\n//                                         </Grid>\r\n//                                         <Grid item xs={12} style={{ marginTop: '-10px' }}>\r\n//                                             <center>\r\n//                                                 <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n//                                                     Evening Shift Time\r\n//                                                 </Typography>\r\n//                                             </center>\r\n//                                         </Grid>\r\n\r\n//                                         <Grid container style={{ padding: 5 }}>\r\n//                                             <Grid item xs={6}>\r\n//                                                 <center>\r\n//                                                     <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n//                                                         Start Time\r\n//                                                     </Typography>\r\n//                                                 </center>\r\n//                                             </Grid>\r\n//                                             <Grid item xs={6}>\r\n//                                                 <center>\r\n//                                                     <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginRight: 50 }}>\r\n//                                                         End Time\r\n//                                                     </Typography>\r\n//                                                 </center>\r\n//                                             </Grid>\r\n//                                         </Grid>\r\n\r\n//                                         <Grid container >\r\n//                                             <Grid item xs={6}>\r\n//                                                 <center>\r\n//                                                     <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'right', marginRight: 10 }} >\r\n\r\n//                                                         <Select\r\n//                                                             className={classes.textFieldForm}\r\n//                                                             size='large'\r\n//                                                             native\r\n//                                                             value={editeveningStartTime}\r\n//                                                             onChange={(e) => setediteveningStartTime(e.target.value)}\r\n//                                                             label=\"Start Time\"\r\n//                                                             inputProps={{\r\n//                                                                 name: 'start time',\r\n//                                                                 id: 'outlined-start-time-native-simple',\r\n//                                                             }}\r\n//                                                             style={{ width: '90%', fontSize: 12 }}\r\n//                                                         >\r\n//                                                             <option aria-label=\"None\" value=\"\" >Start Time</option>\r\n//                                                             {times.map((item) => {\r\n//                                                                 return (\r\n//                                                                     <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n//                                                                 )\r\n//                                                             })}\r\n\r\n//                                                         </Select>\r\n//                                                     </FormControl>\r\n//                                                 </center>\r\n//                                             </Grid>\r\n\r\n//                                             <Grid item xs={6}>\r\n//                                                 <center>\r\n//                                                     <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'left', marginLeft: 10 }} >\r\n\r\n//                                                         <Select\r\n//                                                             className={classes.textFieldForm}\r\n//                                                             size='large'\r\n//                                                             native\r\n//                                                             value={editeveningEndTime}\r\n//                                                             onChange={(e) => setediteveningEndTime}\r\n//                                                             label=\"End Time\"\r\n//                                                             inputProps={{\r\n//                                                                 name: 'end time',\r\n//                                                                 id: 'outlined-end-time-native-simple',\r\n//                                                             }}\r\n//                                                             style={{ width: '90%', fontSize: 12 }}\r\n//                                                         >\r\n//                                                             <option aria-label=\"None\" value=\"\" >End Time</option>\r\n//                                                             {times.map((item) => {\r\n//                                                                 return (\r\n//                                                                     <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n//                                                                 )\r\n//                                                             })}\r\n//                                                         </Select>\r\n//                                                     </FormControl>\r\n//                                                 </center>\r\n//                                             </Grid>\r\n//                                         </Grid>\r\n\r\n//                                     </div>\r\n//                                 </center>\r\n//                             </Grid>\r\n//                             <Grid container>\r\n//                                 <Grid xs={12} sm={6}>\r\n//                                     <Button className={classes.btnCancle} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20 }}>\r\n//                                         Cancle\r\n//                                     </Button>\r\n//                                 </Grid>\r\n//                                 <Grid xs={12} sm={6}>\r\n//                                     <Button className={classes.btnCancle} onClick={fetchClinicStaffData} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n//                                         Submit\r\n//                                     </Button>\r\n//                                 </Grid>\r\n//                             </Grid>\r\n\r\n//                         </Grid>\r\n//                     </DialogContentText>\r\n//                 </DialogContent>\r\n\r\n//             </Dialog>\r\n\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         flexGrow: 1,\r\n//         backgroundColor: 'white',\r\n//     },\r\n//     title: {\r\n//         flexGrow: 1,\r\n//     },\r\n//     hide: {\r\n//         display: 'none',\r\n//     },\r\n//     content: {\r\n//         flexGrow: 1,\r\n//         padding: theme.spacing(2),\r\n//     },\r\n//     paper: {\r\n//         padding: theme.spacing(1),\r\n//         color: '#78B088',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 800,\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//     },\r\n//     grid: {\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//         marginTop: 70,\r\n//         marginLeft: 25,\r\n//         marginRight: 1\r\n//     },\r\n//     gridShift: {\r\n//         marginLeft: drawerWidth,\r\n//         width: `calc(100% - ${drawerWidth}px)`,\r\n//         transition: theme.transitions.create(['width', 'margin'], {\r\n//             easing: theme.transitions.easing.sharp,\r\n//             duration: theme.transitions.duration.enteringScreen,\r\n//         }),\r\n//     },\r\n//     griditem: {\r\n//         color: '#2C7FB2',\r\n//     },\r\n//     paperServices: {\r\n//         padding: theme.spacing(1),\r\n//         color: '#00318B',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 800,\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//         textAlign: 'center',\r\n\r\n//     },\r\n//     gridServices: {\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 800,\r\n//         textAlign: 'center',\r\n\r\n//     },\r\n//     search: {\r\n//         position: 'relative',\r\n//         borderRadius: theme.shape.borderRadius,\r\n//         backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n//         '&:hover': {\r\n//             backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n//         },\r\n//         marginRight: theme.spacing(2),\r\n//         marginLeft: 0,\r\n//         width: '100%',\r\n//         [theme.breakpoints.up('sm')]: {\r\n//             marginLeft: theme.spacing(3),\r\n//             width: 'auto',\r\n//         },\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 800,\r\n\r\n//     },\r\n//     searchIcon: {\r\n//         paddingTop: 10,\r\n//         position: 'absolute',\r\n//         pointerEvents: 'none',\r\n//         display: 'flex',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center',\r\n//         color: \"gray\",\r\n//     },\r\n//     inputRoot: {\r\n//         color: 'inherit',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 200,\r\n//     },\r\n//     inputInput: {\r\n//         padding: theme.spacing(0, 0, 0, 0),\r\n//         // vertical padding + font size from searchIcon\r\n//         paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n//         transition: theme.transitions.create('width'),\r\n//         width: '100%',\r\n//         [theme.breakpoints.up('md')]: {\r\n//             width: '30ch',\r\n//             height: '30px'\r\n//         },\r\n//         border: '1px solid lightgray',\r\n//         borderRadius: 20,\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         fontSize: 11,\r\n//         color: 'gray'\r\n//     },\r\n//     btnview: {\r\n//         backgroundColor: '#2C7FB2 !important',\r\n//         color: '#fff !important',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         textAlign: 'center',\r\n//         borderRadius: 25,\r\n//         paddingLeft: 35,\r\n//         paddingRight: 35,\r\n//         float: 'right'\r\n//     },\r\n//     headingAddMedicine: {\r\n//         color: '#00318B !important',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         overflow: 'hidden',\r\n//         whiteSpace: 'nowrap',\r\n//         textOverflow: 'ellipsis',\r\n//     },\r\n//     inputFields: {\r\n//         // [`& fieldset`]: {\r\n//         //     borderRadius: 25,\r\n//         // },\r\n//         width: 300,\r\n//         fontFamily: 'Poppins',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 200,\r\n//         marginBottom: 20\r\n//     },\r\n//     formControl: {\r\n//         margin: theme.spacing(1),\r\n//         minWidth: 180,\r\n//     },\r\n//     btnAdd: {\r\n//         backgroundColor: '#2C7FB2 !important',\r\n//         color: '#fff !important',\r\n//         fontFamily: '\"Poppins\", san-serif;',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         textAlign: 'center',\r\n//         borderRadius: 28,\r\n//         width: 130,\r\n//     },\r\n//     btnCancle: {\r\n//         backgroundColor: '#2C7FB2 !important',\r\n//         color: '#fff !important',\r\n//         fontFamily: 'Poppins',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         textAlign: 'center',\r\n//         borderRadius: 28,\r\n//         width: 120,\r\n//         marginTop: 10,\r\n//         fontSize: 12\r\n//     },\r\n//     btnregister: {\r\n//         backgroundColor: '#2C7FB2 !important',\r\n//         color: '#fff !important',\r\n//         fontFamily: 'Poppins',\r\n//         fontStyle: 'normal',\r\n//         fontWeight: 400,\r\n//         textAlign: 'center',\r\n//         borderRadius: 28,\r\n//         width: 120,\r\n//         marginTop: 10,\r\n//         fontSize: 12\r\n//     },\r\n// }));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, InputLabel, Radio, Typography, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { EditPatient } from '../../../Apis/Clinic_Patients/Edit_Patient';\r\nimport { EditStaffdata } from '../../../Apis/Clinic_Staff/index';\r\nimport { Doctor_Category} from '../../../Apis/Clinic_Staff/index';\r\nimport { Times} from '../../../Apis/Clinic_Staff/index';\r\nconst drawerWidth = 240;\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\n\r\nexport default function Edit_staff({ show, data, handleCloseEditmodal }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    let obj = JSON.stringify(data);\r\n    let parse=JSON.parse(obj)\r\n    \r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [firstnm, setfirstnm] = useState(parse[0].FirstName);\r\n    const [lastnm, setlastnm] = useState(obj ? obj.LastName : '');\r\n    const [mobile, setmobile] = useState(obj ? obj.MobileNo : '');\r\n    const [email, setemail] = useState(obj ? obj.Email : '');\r\n\r\n    // const [gender, setgender] = useState(obj ? obj?.Gender : '');\r\n    // const [address, setaddress] = useState(obj ? obj?.Address : '');\r\n    // const [city, setcity] = useState(obj ? obj?.City : '');\r\n    // const [pincode, setpincode] = useState(obj ? obj?.Pincode : '');\r\n    // const [state, setstate] = useState(obj ? obj?.State : '');\r\n    // const [country, setcountry] = useState(obj ? obj?.Country : '');\r\n    // const [height, setheight] = useState(obj ? obj?.Height : '');\r\n    // const [weight, setweight] = useState(obj ? obj?.Weight : '');\r\n\r\n    const [editfirstName, seteditfirstName] = useState(parse[0].FirstName);\r\n    const [editlastName, seteditlastName] = useState(parse[0].LastName);\r\n    const [editmobile, seteditmobile] = useState(parse[0]. MobileNo);\r\n    const [editaddress, seteditaddress] = useState(parse[0]. Address);\r\n    const [editeducation, setediteducation] = useState(parse[0].Education);\r\n    const [editemail, seteditemail] = useState(parse[0].Email);\r\n    const [editgender, seteditgender] = useState(parse[0].Gender);\r\n    // const [editpassword, seteditpassword] = useState(parse[0]. Password);\r\n    const [editcategory, seteditcategory] = useState(parse[0]. Category);\r\n    const [editrole, seteditrole] = useState(parse[0].role);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n    const [times, settimes] = useState([]);\r\n    const [editmorningStartTime, seteditmorningStartTime] = useState(parse[0]. morningStartTime);\r\n    const [editmorningEndTime, seteditmorningEndTime] = useState(parse[0].morningEndTime);\r\n    const [editeveningStartTime, setediteveningStartTime] = useState(parse[0]. eveningStartTime);\r\n    const [editeveningEndTime, setediteveningEndTime] = useState(parse[0]. eveningEndTime);\r\n \r\n    const [openModal, setopenModal] = React.useState(false);\r\n\r\n   \r\n\r\n    const fetchClinicStaffData = async () => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n        let clinicid = parsed.ClinicId;\r\n       \r\n        \r\n        const object = {\r\n            ClinicId: clinicid,\r\n            UserId: parse[0].UserId,\r\n            FirstName: editfirstName,\r\n            LastName: editlastName,\r\n            MobileNo: editmobile,\r\n            Education: editeducation,\r\n            Email: editemail,\r\n            // Password: editpassword,\r\n            Gender: editgender,\r\n            Category: editcategory,\r\n            role: editrole,\r\n            Address: editaddress,\r\n            morningStartTime: editmorningStartTime,\r\n            morningEndTime: editmorningEndTime,\r\n            eveningStartTime: editeveningStartTime,\r\n            eveningEndTime: editeveningEndTime,\r\n\r\n\r\n            // City: city,\r\n            // Pincode: pincode,\r\n            // State: state,\r\n            // Country: country,\r\n            // Height: height,\r\n            // Weight: weight\r\n        }\r\n        \r\n    const editPatientRequest = await EditStaffdata(object);\r\n    let par = JSON.parse(editPatientRequest);\r\n    if (par.success === \"200\") {\r\n        alert('clinic Staff Details Edited Successfully');\r\n        handleCloseEditmodal();\r\n        window.location.reload();\r\n    }\r\n    else {\r\n        alert(par.message);\r\n    }\r\n}\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        settimes(times);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorClinicStaff\");\r\n    };\r\n\r\n    function disableBtn() {\r\n        document.getElementById(\"outlined-category-native-simple\").hidden= true;\r\n        document.getElementById(\"mybtn\").hidden= true;\r\n        document.getElementById(\"mybtn2\").hidden= true;\r\n       \r\n        document.getElementById(\"mybtn3\").hidden= true;\r\n        document.getElementById(\"mybtn4\").hidden= true;\r\n        document.getElementById(\"mybtn5\").hidden= true;\r\n        document.getElementById(\"mybtn6\").hidden= true;\r\n        document.getElementById(\"mybtn7\").hidden= true;\r\n        document.getElementById(\"mybtn8\").hidden= true;\r\n        document.getElementById(\"mybtn9\").hidden= true;\r\n        document.getElementById(\"mybtn10\").hidden= true;\r\n        document.getElementById(\"mybtn11\").hidden= true;\r\n        // document.getElementById(\"outlined-start-time-native-simple\").disabled= true;\r\n        // document.getElementById(\"outlined-end-time-native-simple\").disabled= true;\r\n        // document.getElementById(\"outlined-start1-time-native-simple\").disabled= true;\r\n        // document.getElementById(\"outlined-end1-time-native-simple\").disabled= true;\r\n      }\r\n      function enableBtn() {\r\n        document.getElementById(\"outlined-category-native-simple\").hidden= false;\r\n        document.getElementById(\"mybtn\").hidden= false;\r\n        document.getElementById(\"mybtn2\").hidden= false;\r\n        document.getElementById(\"mybtn3\").hidden= false;\r\n        document.getElementById(\"mybtn4\").hidden= false;\r\n        document.getElementById(\"mybtn5\").hidden= false;\r\n        document.getElementById(\"mybtn6\").hidden= false;\r\n        document.getElementById(\"mybtn7\").hidden= false;\r\n        document.getElementById(\"mybtn8\").hidden= false;\r\n        document.getElementById(\"mybtn9\").hidden= false;\r\n        document.getElementById(\"mybtn10\").hidden= false;\r\n        document.getElementById(\"mybtn11\").hidden= false;\r\n        // document.getElementById(\"mybtn\").hidden= false;\r\n        // document.getElementById(\"outlined-start-time-native-simple\").disabled= false;\r\n        // document.getElementById(\"outlined-end-time-native-simple\").disabled= false;\r\n        // document.getElementById(\"outlined-start1-time-native-simple\").disabled= false;\r\n        // document.getElementById(\"outlined-end1-time-native-simple\").disabled= false;\r\n      }\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n        fetchDoctorCategory();\r\n        fetchTimes();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {/* Edit Patient Details */}\r\n\r\n            <Dialog\r\n                open={show}\r\n                onClose={handleCloseEditmodal}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                <center>\r\n                                    <div>\r\n                                        <TextField className={classes.inputFields} label=\"FirstName\" \r\n                                        value={editfirstName} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n\r\n                                            // if value is not blank, then test the regex\r\n\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                seteditfirstName(e.target.value)\r\n                                            }\r\n\r\n                                        }}\r\n                                        id=\"outlined-basic\" size=\"small\" placeholder=\"First Name\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} label=\"LastName\"\r\n                                         value={editlastName} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n\r\n                                            // if value is not blank, then test the regex\r\n\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                seteditlastName(e.target.value)\r\n                                            }\r\n\r\n                                        }} id=\"outlined-basic\" size=\"small\" placeholder=\"Last Name\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} label=\"Mobile\"\r\n                                        value={mobile}\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setmobile(e.target.value)\r\n                                            }\r\n                                        }}id=\"outlined-basic\" type=\"number\" size=\"small\" placeholder=\"Mobile Number\" variant=\"outlined\"\r\n                                        onInput={(e) => {\r\n                                            e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n\r\n                                        }} />\r\n                                        <TextField className={classes.inputFields} label=\"Email\" \r\n                                        value={editemail} onChange={(e) => seteditemail(e.target.value)} id=\"outlined-basic\" type=\"email\" size=\"small\" placeholder=\"Email Id\" variant=\"outlined\" />\r\n                                        {/* <TextField className={classes.inputFields} value={editpassword} onChange={(e) => seteditpassword(e.target.value)} type=\"password\" id=\"outlined-basic\" size=\"small\" label=\"Password\" variant=\"outlined\" /> */}\r\n                                        <TextField className={classes.inputFields} multiline\r\n                                            rows={3}\r\n                                            rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" placeholder=\"Address\" variant=\"outlined\" value={editaddress} onChange={(e) => seteditaddress(e.target.value)}\r\n                                        />\r\n\r\n                                         <Grid item xs={12} sm={6}>\r\n                                            <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ marginLeft: -210 }}>Doctor\r\n                                                <Radio\r\n                                                    checked={editrole === 'Doctor'}\r\n                                                    color='primary'\r\n                                                    onChange={(e) => seteditrole(e.target.value)} value={editrole}\r\n                                                  onClick={enableBtn}\r\n                                                    value=\"Doctor\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'Doctor' }}\r\n\r\n                                                /></InputLabel>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={6}>\r\n\r\n                                            <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ marginRight: -50, marginTop: -40 }}>Receptionist\r\n\r\n                                                <Radio\r\n                                                    checked={editrole === 'Receptionist'}\r\n                                                    onChange={(e) => seteditrole(e.target.value)} value={editrole}\r\n                                                    onClick={disableBtn}\r\n                                                    value=\"Receptionist\"\r\n                                                    color='primary'\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'Receptionist' }}\r\n                                                /></InputLabel>\r\n\r\n                                        </Grid>\r\n\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={6}>\r\n                                <center>\r\n                                    <Grid container style={{ marginTop: '-5px' }}>\r\n                                \r\n                                        <Grid xs={12} style={{ marginTop: 5 }}>\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '73%' }} >\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\"  style={{ marginLeft: 20}}>Gender</InputLabel>\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    native\r\n                                                    value={editgender}\r\n                                                    onChange={(e) => seteditgender(e.target.value)} value={editgender}\r\n                                                    placeholder='gender'\r\n                                                    inputProps={{\r\n                                                        name: 'gender',\r\n                                                        id: 'outlined-gender-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '90%', fontSize: 14,}}\r\n                                                >\r\n                                                   \r\n                                                    <option value={\"Male\"}>Male</option>\r\n                                                    <option value={\"Female\"}>Female</option>\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <div >\r\n                                        <TextField className={classes.inputFields} label=\"Education\" value={editeducation} \r\n                                        onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n\r\n                                            // if value is not blank, then test the regex\r\n\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setediteducation(e.target.value)\r\n                                            }\r\n\r\n                                        }}\r\n                                         id=\"outlined-basic\" placeholder=\"Education\" variant=\"outlined\" size=\"small\" />\r\n                                        {/* <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Category\" variant=\"outlined\" size=\"small\" />  */}\r\n                                        <Grid xs={12} >\r\n                                            <FormControl  id='mybtn' variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '73%' }} >\r\n                                                <InputLabel  htmlFor=\"outlined-age-native-simple\"style={{ marginLeft: 20 }}>Category</InputLabel>\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    native\r\n                                                    value={editcategory} \r\n                                                    \r\n                                                    onChange={(e) => seteditcategory(e.target.value)}\r\n\r\n                                                    placeholder='Category'\r\n                                                    inputProps={{\r\n                                                        name: 'category',\r\n                                                        id: 'outlined-category-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '90%', fontSize: 14 }}\r\n                                                >\r\n                                                    \r\n                                                    {doctorCategory.map((item) => {\r\n                                                        return (\r\n                                                            <option value={item.Category}>{item.Category}</option>\r\n                                                        )\r\n                                                    })}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        \r\n                                        <Grid item xs={12}>\r\n                                            <center  id='mybtn2'>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                                    Morning Shift Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid container style={{ padding: 5 }}>\r\n                                            <Grid item xs={6}>\r\n                                                <center id='mybtn3' >\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n                                                        Start Time\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <center id='mybtn4'>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginRight: 50 }}>\r\n                                                        End Time\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container>\r\n                                            <Grid item xs={6}>\r\n                                                <center id='mybtn5'>\r\n                                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'right', marginRight: 10 }} >\r\n\r\n                                                        <Select\r\n                                                            className={classes.textFieldForm}\r\n                                                            size='large'\r\n                                                            native\r\n                                                            value={editmorningStartTime}\r\n                                                            onChange={(e) => seteditmorningStartTime(e.target.value)}\r\n                                                            label=\"Start Time\"\r\n                                                            inputProps={{\r\n                                                                name: 'start time',\r\n                                                                id: 'outlined-start-time-native-simple',\r\n                                                            }}\r\n                                                            style={{ width: '90%', fontSize: 12 }}\r\n                                                        >\r\n                                                            <option aria-label=\"None\" value=\"\" >Start Time</option>\r\n                                                            {times.map((item) => {\r\n                                                                return (\r\n                                                                    <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                )\r\n                                                            })}\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </center>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <center id='mybtn6'>\r\n                                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'left', marginLeft: 10 }} >\r\n\r\n                                                        <Select\r\n                                                            className={classes.textFieldForm}\r\n                                                            size='large'\r\n                                                            native\r\n                                                            value={editmorningEndTime}\r\n                                                            onChange={(e) => seteditmorningEndTime(e.target.value)}\r\n                                                            label=\"End Time\"\r\n                                                            inputProps={{\r\n                                                                name: 'end time',\r\n                                                                id: 'outlined-end-time-native-simple',\r\n                                                            }}\r\n                                                            style={{ width: '90%', fontSize: 12 }}\r\n                                                        >\r\n                                                            <option aria-label=\"None\" value=\"\" >End Time</option>\r\n                                                            {times.map((item) => {\r\n                                                                return (\r\n                                                                    <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                )\r\n                                                            })}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} style={{ marginTop: '-10px' }}>\r\n                                            <center id='mybtn7'>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                                    Evening Shift Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid container style={{ padding: 5 }}>\r\n                                            <Grid item xs={6}>\r\n                                                <center id='mybtn8'>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n                                                        Start Time\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <center id='mybtn9'>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginRight: 50 }}>\r\n                                                        End Time\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container >\r\n                                            <Grid item xs={6}>\r\n                                                <center id='mybtn10'>\r\n                                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'right', marginRight: 10 }} >\r\n\r\n                                                        <Select\r\n                                                            className={classes.textFieldForm}\r\n                                                            size='large'\r\n                                                            native\r\n                                                            value={editeveningStartTime}\r\n                                                            onChange={(e) => setediteveningStartTime(e.target.value)}\r\n                                                            label=\"Start Time\"\r\n                                                            inputProps={{\r\n                                                                name: 'start time',\r\n                                                                id: 'outlined-start1-time-native-simple',\r\n                                                            }}\r\n                                                            style={{ width: '90%', fontSize: 12 }}\r\n                                                        >\r\n                                                            <option aria-label=\"None\" value=\"\" >Start Time</option>\r\n                                                            {times.map((item) => {\r\n                                                                return (\r\n                                                                    <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                )\r\n                                                            })}\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </center>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <center id='mybtn11'>\r\n                                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'left', marginLeft: 10 }} >\r\n\r\n                                                        <Select\r\n                                                            className={classes.textFieldForm}\r\n                                                            size='large'\r\n                                                            native\r\n                                                            value={editeveningEndTime}\r\n                                                            onChange={(e) => setediteveningEndTime}\r\n                                                            label=\"End Time\"\r\n                                                            inputProps={{\r\n                                                                name: 'end time',\r\n                                                                id: 'outlined-end1-time-native-simple',\r\n                                                            }}\r\n                                                            style={{ width: '90%', fontSize: 12 }}\r\n                                                        >\r\n                                                            <option aria-label=\"None\" value=\"\" >End Time</option>\r\n                                                            {times.map((item) => {\r\n                                                                return (\r\n                                                                    <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                )\r\n                                                            })}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={() => handleCloseEditmodal(false)} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={fetchClinicStaffData} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n    },\r\n}));\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//api\r\nimport { Delete_Staff_Details_by_id } from '../../../Apis/Clinic_Staff/index'\r\n\r\nconst Delete_Staff_Details = ({ show, data, handleclose }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (UserId, Role) => {\r\n        console.log(UserId)\r\n        const request = await Delete_Staff_Details_by_id(UserId, Role);\r\n        let response = JSON.parse(request);\r\n        if (response.success == '200') {\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete User's Details?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data[0].UserId, data[0].Role)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Staff_Details\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Switch, Avatar, Select, FormControl, InputLabel, Radio, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography, Button, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Grid, Paper, Link, Slide } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\nimport { DataGrid, gridColumnLookupSelector } from '@material-ui/data-grid';\r\nimport { Add_Staff, Doctor_Category, Times, EditStaffdata } from '../Apis/Clinic_Staff/index';\r\nimport ip from '../ipaddress/ip';\r\n\r\n//components\r\nimport Edit_Patient from './Clinic_Patients/Edit_Patient';\r\nimport Edit_staff from './EditStaffDetails/Editstaff';\r\nimport Delete_Staff_Details from './EditStaffDetails/Delele_Staff/index';\r\n\r\nconst getStaffData = 'http://13.233.217.107:8080/api/GetAllUsers';\r\nconst getStaffDetails = 'http://13.233.217.107:8080/api/ShowUserDetailUsingId';\r\nconst getStaffSearchApi = 'http://13.233.217.107:8080/api/Web_SearchStaff';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DoctorClinicStaff() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [counterbtn, setCounterBtn] = React.useState(0);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n    const [staffData, setstaffData] = useState([]);\r\n    const [staffDetails, setstaffDetails] = useState('');\r\n    const [firstName, setfirstName] = useState('');\r\n    const [lastName, setlastName] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [gender, setgender] = useState('');\r\n    const [role, setrole] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [category, setcategory] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [education, seteducation] = useState('');\r\n    const [morningStartTime, setmorningStartTime] = useState('');\r\n    const [morningEndTime, setmorningEndTime] = useState('');\r\n    const [eveningStartTime, seteveningStartTime] = useState('');\r\n    const [eveningEndTime, seteveningEndTime] = useState('');\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n    const [times, settimes] = useState([]);\r\n    const [editmodal, seteditmodal] = useState(false);\r\n    const [editrole, seteditrole] = useState();\r\n    const [staffsearch, setstaffsearch] = useState([]);\r\n\r\n\r\n    const fetchStaffData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const staffInfo = await axios.post(getStaffData, { ClinicId: clinicid });\r\n        setstaffData(staffInfo?.data?.NewUser);\r\n    }\r\n\r\n\r\n    const searchStaff = async (staffsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const staffInfo = await axios.post(getStaffSearchApi, { ClinicId: clinicid, Name: staffsearch });\r\n            setstaffData(staffInfo?.data?.Staff);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        settimes(times);\r\n    }\r\n\r\n    const Register_Staff = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const obj = {\r\n            ClinicId: clinicid,\r\n            FirstName: firstName,\r\n            LastName: lastName,\r\n            Role: editrole,\r\n            Password: password,\r\n            MobileNo: mobile,\r\n            Email: email,\r\n            Address: address,\r\n            Education: education,\r\n            CodeValueCategory: category,\r\n            Gender: gender\r\n        }\r\n        const registration = await Add_Staff(obj);\r\n        let parse = JSON.parse(registration);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            setOpenmodal(false);\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n\r\n    function disableBtn() {\r\n        // document.getElementById(\"outlined-category-native-simple\").hidden= true;\r\n        document.getElementById(\"mybtn\").hidden = true;\r\n        document.getElementById(\"mybtn2\").hidden = true;\r\n\r\n        document.getElementById(\"mybtn3\").hidden = true;\r\n        document.getElementById(\"mybtn4\").hidden = true;\r\n        document.getElementById(\"mybtn5\").hidden = true;\r\n        document.getElementById(\"mybtn6\").hidden = true;\r\n        document.getElementById(\"mybtn7\").hidden = true;\r\n        document.getElementById(\"mybtn8\").hidden = true;\r\n        document.getElementById(\"mybtn9\").hidden = true;\r\n        document.getElementById(\"mybtn10\").hidden = true;\r\n        document.getElementById(\"mybtn11\").hidden = true;\r\n\r\n\r\n    }\r\n\r\n    function enableBtn() {\r\n        //   document.getElementById(\"outlined-category-native-simple\").hidden= false;\r\n        document.getElementById(\"mybtn\").hidden = false;\r\n        document.getElementById(\"mybtn2\").hidden = false;\r\n        document.getElementById(\"mybtn3\").hidden = false;\r\n        document.getElementById(\"mybtn4\").hidden = false;\r\n        document.getElementById(\"mybtn5\").hidden = false;\r\n        document.getElementById(\"mybtn6\").hidden = false;\r\n        document.getElementById(\"mybtn7\").hidden = false;\r\n        document.getElementById(\"mybtn8\").hidden = false;\r\n        document.getElementById(\"mybtn9\").hidden = false;\r\n        document.getElementById(\"mybtn10\").hidden = false;\r\n        document.getElementById(\"mybtn11\").hidden = false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchStaffData();\r\n        fetchDoctorCategory();\r\n        fetchTimes();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const handleCellClick = async (userid, role) => {\r\n        const staffDetailedInfo = await axios.post(getStaffDetails, { UserId: userid, Role: role });\r\n        setstaffDetails(staffDetailedInfo?.data?.NewUser);\r\n    }\r\n\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n\r\n    const handleClickOpenEditmodal = () => {\r\n        if (staffDetails.length > 0) {\r\n            seteditmodal(true);\r\n        }\r\n        else {\r\n            alert('Please Select Staff from List');\r\n        }\r\n    };\r\n\r\n    const handleCloseEditmodal = () => {\r\n        setOpenEditmodal(false);\r\n    };\r\n\r\n    const [opendeletemodal, setOpenDeletemodal] = React.useState(false);\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Clinic Staff\r\n                        <Button className={classes.btnregister} onClick={() => setOpenmodal(true)} style={{ float: 'right', marginRight: 20, width: '200px', fontFamily: 'Poppins', fontSize: 12.5, fontWeight: 400 }}>New Staff Registration</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: 30, paddingBottom: 10 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    placeholder=\"Search by Name\"\r\n                                    onChange={(e) => setstaffsearch(e.target.value)}\r\n                                    value={staffsearch}\r\n                                    placeholder='Search by Name'\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button className={classes.btnview} onClick={() => searchStaff(staffsearch)} size=\"small\" style={{ fontSize: 12 }}>View</Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <DataGrid\r\n                            style={{ height: 340, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                            rows={staffData}\r\n                            rowHeight={30}\r\n                            columns={columns}\r\n                            columnWidth={10}\r\n                            pageSize={10}\r\n                            onRowClick={(newSelection) => {\r\n                                handleCellClick(newSelection.row.UserId, newSelection.row.Role)\r\n                            }}\r\n                        />\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={8} >\r\n                    <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                            fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins', textDecorationLine: 'underline', textUnderlineOffset: '1px', textDecorationThickness: '1px',\r\n                            fontStyle: 'normal',\r\n\r\n                        }}>\r\n                            Profile\r\n                        </Typography>\r\n                        <center>\r\n                            <div style={{paddingBottom:0,height:84,position:'relative',bottom:15 }}>\r\n                                {staffDetails[0] ? staffDetails[0].ProfileImage ?\r\n                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={staffDetails[0].ProfileImage} /> :\r\n                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} /> : <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                            </div>\r\n\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 16,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 600\r\n                            }}>\r\n                                {staffDetails[0] ? staffDetails[0].FirstName : \"NA\"} {staffDetails[0] ? staffDetails[0].LastName : \"\"}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 14,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 400\r\n                            }}>\r\n                                UID- {staffDetails[0] ? staffDetails[0].UserId : null}\r\n                                <div>\r\n                                {staffDetails[0] ? staffDetails[0].Role : null}\r\n                                </div>\r\n                            </Typography>\r\n                            <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Mobile Number\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {staffDetails[0] ? staffDetails[0].MobileNo : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Email ID\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', marginLeft: 10, marginRight: 10, fontFamily: 'Poppins', }}>\r\n                                        {staffDetails[0] ? staffDetails[0].Email : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Education\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {staffDetails[0] ? staffDetails[0].Education : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Category\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {staffDetails[0] ? staffDetails[0].Category : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12}>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Gender\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {staffDetails[0] ? staffDetails[0].Gender : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Address\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                        {staffDetails[0] ? staffDetails[0].Address : \"NA\"} {staffDetails[0] ? staffDetails[0].City : null} {staffDetails[0] ? staffDetails[0].State : null} {staffDetails[0] ? staffDetails[0].Pincode : null} {staffDetails[0] ? staffDetails[0].Country : null}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Clinic Timing\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                        {staffDetails[0] ? staffDetails[0].From_AvailabilityTime !== null ? staffDetails[0].From_AvailabilityTime : 'Not Provided' : null} - {staffDetails[0] ? staffDetails[0].To_AvailabilityTime !== null ? staffDetails[0].To_AvailabilityTime : 'Not Provided' : null}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 15 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={() => setOpenDeletemodal(true)} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handleClickOpenEditmodal} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </center>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n                {editmodal ? <Edit_staff show={editmodal} data={staffDetails} handleCloseEditmodal={() => seteditmodal(false)} /> : null}\r\n\r\n                {/* Add new staff */}\r\n                <Dialog\r\n                    open={openmodal}\r\n                    onClose={() => setOpenmodal(false)}\r\n                    maxWidth={maxWidth}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Add Staff\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={() => setOpenmodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Grid container>\r\n                                <Grid item xs={6} style={{ borderRight: '3px solid #F0F0F0' }}>\r\n                                    <center>\r\n                                        <div>\r\n                                            <TextField className={classes.inputFields} value={firstName}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[A-Za-z]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) { setfirstName(e.target.value) }\r\n                                                }}\r\n                                                id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} value={lastName}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[A-Za-z]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) { setlastName(e.target.value) }\r\n                                                }}\r\n                                                id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n                                            <TextField\r\n\r\n                                                className={classes.inputFields}\r\n                                                value={mobile}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setmobile(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                                id=\"outlined-basic\"\r\n                                                type=\"number\"\r\n                                                size=\"small\"\r\n                                                placeholder=\"Mobile Number*\"\r\n                                                variant=\"outlined\"\r\n                                                onInput={(e) => {\r\n                                                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n\r\n                                                }}\r\n\r\n                                            />\r\n                                            <TextField className={classes.inputFields}\r\n                                                onChange={(e) => setemail(e.target.value)}\r\n                                                id=\"outlined-basic\" type=\"email\" size=\"small\" label=\"Email Id\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields}\r\n                                                onChange={(e) => setpassword(e.target.value)}\r\n                                                type=\"password\" id=\"outlined-basic\" size=\"small\" label=\"Password\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} multiline\r\n                                                onChange={(e) => setaddress(e.target.value)}\r\n                                                rows={3}\r\n                                                rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                            />\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    <center>\r\n                                        <Grid container style={{ marginTop: '-15px' }}>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ marginLeft: 20 }}>Doctor\r\n                                                    <Radio\r\n                                                        checked={editrole === 'Doctor'}\r\n                                                        color='primary'\r\n                                                        onChange={(e) => seteditrole(e.target.value)} value={editrole}\r\n                                                        onClick={enableBtn}\r\n                                                        value=\"Doctor\"\r\n                                                        name=\"radio-button-demo\"\r\n                                                        inputProps={{ 'aria-label': 'Doctor' }}\r\n\r\n                                                    /></InputLabel>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12} sm={6}>\r\n\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ marginRight: 30 }}>Receptionist\r\n\r\n                                                    <Radio\r\n                                                        checked={editrole === 'Receptionist'}\r\n                                                        onChange={(e) => seteditrole(e.target.value)} value=\"Receptionist\"\r\n                                                        onClick={disableBtn}\r\n                                                        color='primary'\r\n                                                        name=\"radio-button-demo\"\r\n                                                        inputProps={{ 'aria-label': 'Receptionist' }}\r\n                                                    /></InputLabel>\r\n\r\n                                            </Grid>\r\n                                            <Grid xs={12} style={{ marginTop: 5 }}>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '73%' }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={gender}\r\n                                                        onChange={(e) => setgender(e.target.value)}\r\n                                                        label=\"Gender\"\r\n                                                        inputProps={{\r\n                                                            name: 'gender',\r\n                                                            id: 'outlined-gender-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\" >Gender</option>\r\n                                                        <option value='Male'>Male</option>\r\n                                                        <option value='Female'>Female</option>\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <div>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" value={education}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[A-Za-z]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) { seteducation(e.target.value) }\r\n                                                }}\r\n                                                label=\"Education\" variant=\"outlined\" size=\"small\" />\r\n                                            {/* <TextField className={classes.inputFields} id=\"outlined-basic\" label=\"Category\" variant=\"outlined\" size=\"small\" />  */}\r\n                                            <Grid xs={12} >\r\n                                                <FormControl id='mybtn' variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '73%' }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={category}\r\n                                                        onChange={(e) => setcategory(e.target.value)}\r\n                                                        label=\"Category\"\r\n                                                        inputProps={{\r\n                                                            name: 'category',\r\n                                                            id: 'outlined-category-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\" >Category</option>\r\n                                                        {doctorCategory.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.Category}>{item.Category}</option>\r\n                                                            )\r\n                                                        })}\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <center id='mybtn2'>\r\n                                                    <Typography id='mybtn' variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                                        Morning Shift Time\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n\r\n                                            <Grid container style={{ padding: 5 }}>\r\n                                                <Grid item xs={6}>\r\n                                                    <center id='mybtn3'>\r\n                                                        <Typography id='mybtn' variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n                                                            Start Time\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n                                                <Grid item xs={6}>\r\n                                                    <center id='mybtn4'>\r\n                                                        <Typography id='mybtn' variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginRight: 50 }}>\r\n                                                            End Time\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container>\r\n                                                <Grid item xs={6}>\r\n                                                    <center id='mybtn5'>\r\n                                                        <FormControl id='mybtn' variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'right', marginRight: 10 }} >\r\n\r\n                                                            <Select\r\n                                                                className={classes.textFieldForm}\r\n                                                                size='large'\r\n                                                                native\r\n                                                                value={morningStartTime}\r\n                                                                onChange={(e) => setmorningStartTime(e.target.value)}\r\n                                                                label=\"Start Time\"\r\n                                                                inputProps={{\r\n                                                                    name: 'start time',\r\n                                                                    id: 'outlined-start-time-native-simple',\r\n                                                                }}\r\n                                                                style={{ width: '90%', fontSize: 12 }}\r\n                                                            >\r\n                                                                <option aria-label=\"None\" value=\"\" >Start Time</option>\r\n                                                                {times.map((item) => {\r\n                                                                    return (\r\n                                                                        <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                    )\r\n                                                                })}\r\n\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                    </center>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={6}>\r\n                                                    <center id='mybtn6'>\r\n                                                        <FormControl id='mybtn' variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'left', marginLeft: 10 }} >\r\n\r\n                                                            <Select\r\n                                                                className={classes.textFieldForm}\r\n                                                                size='large'\r\n                                                                native\r\n                                                                value={morningEndTime}\r\n                                                                onChange={(e) => setmorningEndTime(e.target.value)}\r\n                                                                label=\"End Time\"\r\n                                                                inputProps={{\r\n                                                                    name: 'end time',\r\n                                                                    id: 'outlined-end-time-native-simple',\r\n                                                                }}\r\n                                                                style={{ width: '90%', fontSize: 12 }}\r\n                                                            >\r\n                                                                <option aria-label=\"None\" value=\"\" >End Time</option>\r\n                                                                {times.map((item) => {\r\n                                                                    return (\r\n                                                                        <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                    )\r\n                                                                })}\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} style={{ marginTop: '-10px' }}>\r\n                                                <center id='mybtn7'>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                                        Evening Shift Time\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n\r\n                                            <Grid container style={{ padding: 5 }}>\r\n                                                <Grid item xs={6}>\r\n                                                    <center id='mybtn8'>\r\n                                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n                                                            Start Time\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n                                                <Grid item xs={6}>\r\n                                                    <center id='mybtn9'>\r\n                                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', marginRight: 50 }}>\r\n                                                            End Time\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container >\r\n                                                <Grid item xs={6}>\r\n                                                    <center id='mybtn10'>\r\n                                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'right', marginRight: 10 }} >\r\n\r\n                                                            <Select\r\n                                                                className={classes.textFieldForm}\r\n                                                                size='large'\r\n                                                                native\r\n                                                                value={eveningStartTime}\r\n                                                                onChange={(e) => seteveningStartTime(e.target.value)}\r\n                                                                label=\"Start Time\"\r\n                                                                inputProps={{\r\n                                                                    name: 'start time',\r\n                                                                    id: 'outlined-start-time-native-simple',\r\n                                                                }}\r\n                                                                style={{ width: '90%', fontSize: 12 }}\r\n                                                            >\r\n                                                                <option aria-label=\"None\" value=\"\" >Start Time</option>\r\n                                                                {times.map((item) => {\r\n                                                                    return (\r\n                                                                        <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                    )\r\n                                                                })}\r\n\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                    </center>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={6}>\r\n                                                    <center id='mybtn11'>\r\n                                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '65%', float: 'left', marginLeft: 10 }} >\r\n\r\n                                                            <Select\r\n                                                                className={classes.textFieldForm}\r\n                                                                size='large'\r\n                                                                native\r\n                                                                value={eveningEndTime}\r\n                                                                onChange={(e) => seteveningEndTime(e.target.value)}\r\n                                                                label=\"End Time\"\r\n                                                                inputProps={{\r\n                                                                    name: 'end time',\r\n                                                                    id: 'outlined-end-time-native-simple',\r\n                                                                }}\r\n                                                                style={{ width: '90%', fontSize: 12 }}\r\n                                                            >\r\n                                                                <option aria-label=\"None\" value=\"\" >End Time</option>\r\n                                                                {times.map((item) => {\r\n                                                                    return (\r\n                                                                        <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                    )\r\n                                                                })}\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnCancle} onClick={() => setOpenmodal(false)} style={{ float: 'right', marginRight: 20 }}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnCancle} onClick={Register_Staff} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n\r\n\r\n                {/* Edit Details  */}\r\n                <Edit_Patient />\r\n\r\n                {/* for Delete User */}\r\n                {opendeletemodal ? <Delete_Staff_Details show={opendeletemodal} data={staffDetails} handleclose={() => setOpenDeletemodal(false)} /> : null}\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../../ipaddress/ip';\r\n\r\nexport const GetHomeVisitorDoctors = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const res = await axios.post(ip + 'Web_GetHomeVisitorDoctorsforClinic', { ClinicId: clinicid });\r\n        return res?.data?.HomeVisitors;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Slide, Typography, FormControl, Select, TextField, Button, InputBase, Grid, Paper, Dialog, DialogContent, DialogContentText, DialogTitle, Avatar } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { ApprovedHomeVisitorRequest } from '../Apis/HomeVisitorRequest/ApprovedRequest/index';\r\nimport { GetHomeVisitorDoctors } from '../Apis/HomeVisitorRequest/AssignHomeVisitor/GetHomeVisitors/index';\r\n\r\n\r\nconst getHomeVisitorSearchApi = 'http://13.233.217.107:8080/api/Web_SearchHomeVisitor';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nfunction createData(name, mobile) {\r\n    return { name, mobile };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DoctorAssignHomeVisitor() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [approvedRequestInfo, setapprovedRequestInfo] = useState([location.state.details]);\r\n    const [hvDoctorData, sethvDoctorData] = useState([]);\r\n    const [hvDoctorDetails, sethvDoctorDetails] = useState([]);\r\n    const [assignHomeVisitor, setassignHomeVisitor] = useState([]);\r\n    const [homevisitorsearch, sethomevisitorsearch] = useState('');\r\n\r\n    const fetchHV_Doctors_Data = async () => {\r\n        const gethvdoctorsInfo = await GetHomeVisitorDoctors();\r\n        sethvDoctorData(gethvdoctorsInfo);\r\n    }\r\n\r\n    const handleRowClick = async (id) => {\r\n        sethvDoctorDetails(id);\r\n    }\r\n    const handleAssign=()=>{\r\n        navigate('/DoctorHomeVisitRequest');\r\n    }\r\n\r\n    const handleAssignHomeVisitor = async (obj, hvid) => {\r\n        if (hvDoctorDetails == '') {\r\n            alert(\"Please select home visitor from list\");\r\n            return;\r\n        }\r\n        const res = await ApprovedHomeVisitorRequest(obj, hvid)\r\n\r\n        if (res) {\r\n            setassignHomeVisitor(obj, hvid)\r\n            alert('Home Visitor Request Approved');\r\n            navigate(\"/DoctorHomeVisitRequest\");\r\n        }\r\n    };\r\n\r\n    const searchHomeVisitor = async (homevisitorsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const hvDoctorInfo = await axios.post(getHomeVisitorSearchApi, { ClinicId: clinicid, Name: homevisitorsearch });\r\n            sethvDoctorData(hvDoctorInfo?.data?.HomeVisitor);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapprovedRequestInfo(location.state.details);\r\n        fetchHV_Doctors_Data();\r\n    }, []);\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    const [opendatemodal, setOpenDatemodal] = React.useState(false);\r\n\r\n    const handleClickOpenDatemodal = () => {\r\n        setOpenDatemodal(true);\r\n    };\r\n\r\n    const handleCloseDatemodal = () => {\r\n        setOpenDatemodal(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleAssign} />  </Button>\r\n                        Assign Home Visitor\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center>\r\n                                        <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            placeholder='Search by Home Visitor'\r\n                                            onChange={(e) => sethomevisitorsearch(e.target.value)}\r\n                                            value={homevisitorsearch}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button onClick={() => searchHomeVisitor(homevisitorsearch)} className={classes.btnview} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>Search</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <DataGrid\r\n                                style={{ height: 350, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}\r\n                                rows={hvDoctorData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={5}\r\n                                onRowClick={(data) => {\r\n                                    handleRowClick(data.row);\r\n                                }}\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 17, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                textDecoration: 'underline',\r\n                                textUnderlineOffset: '1px',\r\n                                fontWeight: 600\r\n                            }}>\r\n                                Profile\r\n                            </Typography>\r\n                            <center>\r\n                                <div style={{ paddingBottom: 5 }}>\r\n                                    {hvDoctorDetails.ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} src={hvDoctorDetails.ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {hvDoctorDetails.FirstName ? hvDoctorDetails.FirstName : 'NA'} {hvDoctorDetails.LastName ? hvDoctorDetails.LastName : ''}\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 14,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 400\r\n                                }}>\r\n                                    {hvDoctorDetails.Education} ( {hvDoctorDetails.Category ? hvDoctorDetails.Category : 'NA'} )\r\n                                </Typography>\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: \"Poppins\" }}>\r\n                                            Mobile Number\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {hvDoctorDetails.MobileNo ? hvDoctorDetails.MobileNo : 'NA'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            From\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {hvDoctorDetails.From_AvailabilityTime ? hvDoctorDetails.From_AvailabilityTime : 'NA'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            To\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {hvDoctorDetails.To_AvailabilityTime ? hvDoctorDetails.To_AvailabilityTime : 'NA'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Email Id\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {hvDoctorDetails.Email ? hvDoctorDetails.Email : 'NA'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12}>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Address\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {hvDoctorDetails.Address ? hvDoctorDetails.Address : 'NA'} <br /> {hvDoctorDetails.City}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Availability\r\n                                        </Typography>\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Mon\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Tue\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Wed\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Thu\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Fri\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Sat\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Sun\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Monday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Tuesday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Wednesday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Thursday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Friday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Saturday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Sunday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 10 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={handleAssign} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={() => handleAssignHomeVisitor(approvedRequestInfo, hvDoctorDetails.UserId)} style={{ float: 'left', marginLeft: 20 }}>Assign</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                {/* for Change Date Time */}\r\n\r\n                <Dialog\r\n                    open={opendatemodal}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleCloseDatemodal}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#00318B' }}>{\"Edit Date/Time\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseDatemodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#2C7FB2', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n                                        Date\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField className={classes.inputFields} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#2C7FB2', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50, marginTop: 15 }}>\r\n                                        Time\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '100%', marginTop: 20 }} >\r\n                                        <Select\r\n                                            className={classes.textFieldForm}\r\n                                            size='large'\r\n                                            native\r\n\r\n                                            inputProps={{\r\n                                                name: 'start time',\r\n                                                id: 'outlined-start-time-native-simple',\r\n                                            }}\r\n                                            style={{ width: '90%', fontSize: 12 }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" />\r\n                                            <option value={1}>08:00</option>\r\n                                            <option value={2}>09:00</option>\r\n                                            <option value={3}>10:00</option>\r\n                                            <option value={4}>11:00</option>\r\n                                            <option value={5}>12:00</option>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <Grid container style={{ paddingBottom: 20 }}>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnregister} onClick={handleCloseDatemodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                Cancle\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnregister} onClick={handleCloseDatemodal} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Dialog>\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n\r\nexport const get_advertisments = async (category) => {\r\n    try {\r\n        const getadvertisements = await axios.post(ip + 'GetAllAdvertisements', { Category: category });\r\n        return (getadvertisements?.data?.Advetisements);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const get_patientinqueue = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const getpatientinqueue = await axios.post(ip + 'Web_ShowPatientInQueueForTV', { ClinicId: clinicid });\r\n        return (getpatientinqueue?.data?.Appointment);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport { get_advertisments } from '../../Apis/TV_Advertisements/index';\r\n\r\n\r\nconst images = [\r\n    {\r\n        id: 1,\r\n        src:\r\n            \"https://images.unsplash.com/photo-1627745193246-1fa1c9404b21?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\",\r\n        alt: \"The world\"\r\n    },\r\n    {\r\n        id: 2,\r\n        src:\r\n            \"https://images.unsplash.com/photo-1631116617822-e100bd7e6e06?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\",\r\n        alt: \"Train\"\r\n    },\r\n    {\r\n        id: 3,\r\n        src:\r\n            \"https://images.unsplash.com/photo-1496181133206-80ce9b88a853?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=751&q=80\",\r\n        alt: \"Laptop\"\r\n    }\r\n];\r\n\r\nconst TV_Slider_Component = () => {\r\n    const [advertisement, setAdvertisement] = useState([]);\r\n\r\n    const fetchAdvertisements = async () => {\r\n        let Category = 'Dashboard';\r\n        const getrequest = await get_advertisments(Category);\r\n        setAdvertisement(getrequest);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAdvertisements();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"TV_Slider_Component\">\r\n            <Slider dots={true} autoplay={true}>\r\n                {advertisement.length != 0 ?\r\n                advertisement.map((item) => (\r\n                    <div key={item.id}>\r\n                        <img src={item.Image} style={{height: '500px', width: '100%'}}/>\r\n                    </div>\r\n                ))\r\n                :\r\n                <>\r\n                <img src='default-image.png' style={{height: '500px', width: '100%'}}></img>\r\n                </>\r\n                }\r\n                </Slider>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TV_Slider_Component;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Avatar, Grid, Paper, } from \"@material-ui/core\";\r\nimport { get_patientinqueue } from '../../Apis/TV_Advertisements/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Patient_In_Queue_TV_Component({data}) {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  \r\n  console.log(data);\r\n\r\n \r\n  // if (patientIn.length !== 0) {\r\n\r\n  return (\r\n    <>\r\n      {data.map((item) => {\r\n        return(<>\r\n       \r\n        <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-40px' }}>\r\n          <div>\r\n            <center>\r\n              <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />\r\n            </center>\r\n          </div>\r\n          <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, }}>\r\n            <Grid item xs={12} style={{\r\n              color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '13px', overflow: 'hidden',\r\n              whiteSpace: 'nowrap',\r\n              textOverflow: 'ellipsis', width: 120,\r\n              marginTop: '-5px'\r\n            }}>\r\n             {item.FirstName} {item.LastName}\r\n            </Grid>\r\n            <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n              {item.AppointmentTime}\r\n            </Grid>\r\n            <Grid item xs={12} noWrap style={{ textAlign: 'center', color: '#2C7FB2', overflow: 'hidden',\r\n              whiteSpace: 'nowrap',\r\n              textOverflow: 'ellipsis', paddingBottom: 10 }}>\r\n              Ref: Dr.{item.DFName} {item.DLName}\r\n            </Grid>\r\n          </Paper>\r\n\r\n        </Grid>\r\n        </>);\r\n      } \r\n      ) }\r\n    </>\r\n  ); //return close\r\n\r\n\r\n\r\n\r\n  // }\r\n  // else {\r\n  //   return (\r\n  //     <>\r\n  //       <Grid item xs={2} style={{ paddingTop: 30, marginLeft: '-30px' }}>\r\n  //         <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n  //           <center>\r\n  //             <Avatar style={{ borderRadius: 50, height: 60, width: 60 }} /> </center>\r\n  //         </Grid>\r\n  //         <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n  //           <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n  //             No Patients\r\n  //           </Grid>\r\n\r\n  //         </Paper>\r\n  //       </Grid>\r\n  //     </>\r\n  //   );\r\n  // }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    color: '#78B088',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  grid: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    marginTop: 70,\r\n    marginLeft: 30,\r\n    marginRight: 1\r\n  },\r\n  gridShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  griditem: {\r\n    color: '#2C7FB2',\r\n  },\r\n  paperServices: {\r\n    padding: theme.spacing(1),\r\n    color: '#00318B',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    textAlign: 'center',\r\n\r\n  },\r\n  gridServices: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    textAlign: 'center',\r\n\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, FormControl, Select, DialogTitle, DialogContentText, Typography, Grid, TextField, Button, Avatar } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { TailSpin } from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Slider from \"react-slick\";\r\nconst drawerWidth = 240;\r\n\r\nexport const Show_Send_In_Details = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullScreen\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                style={{alignItems:'center',justifyContent:'center'}}\r\n                // BackdropProps={{ invisible: true }}\r\n                // PaperProps={{\r\n                //     style: {\r\n                //         backgroundColor: 'transparent',\r\n                //         boxShadow: 'none',\r\n                //     },\r\n                // }}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div style={{marginTop:150}}>\r\n                            <Slider dots={true} autoplay={true}>\r\n                                {data.length != 0 ?\r\n                                    data.map((item) => (\r\n                                        <center>\r\n                                            <div key={item.id}>\r\n                                                <Avatar style={{ borderRadius: 150, height: 70, width: 70 }} />\r\n                                            </div>\r\n                                            <Grid item xs={12}\r\n                                                style={{\r\n                                                    marginTop: 20\r\n                                                }}\r\n                                            >\r\n                                                <center>\r\n                                                    <h4 style={{\r\n                                                        fontFamily: \"Poppins\",\r\n                                                        color: '#78B088',\r\n                                                        fontWeight: 600\r\n                                                    }}>{item.FirstName} {item.LastName}</h4>\r\n                                                </center>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}\r\n                                                style={{\r\n                                                    marginTop: 20\r\n                                                }}\r\n                                            >\r\n                                                <center>\r\n                                                    <h3\r\n                                                        style={{\r\n                                                            fontFamily: \"Poppins\",\r\n                                                            color: '#2C7FB2',\r\n                                                        }}\r\n                                                    >Now it's your turn please visit</h3>\r\n                                                    <h3\r\n                                                        style={{\r\n                                                            marginTop:50,\r\n                                                            fontFamily: \"Poppins\",\r\n                                                            color: '#2C7FB2',\r\n                                                            fontWeight:600\r\n                                                        }}\r\n                                                    >Dr.{item.DFName} {item.DLName}</h3>\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </center>\r\n                                    ))\r\n                                    :\r\n                                    <>\r\n                                        <center>\r\n                                            <h4 style={{\r\n                                                fontFamily: \"Poppins\",\r\n                                                color: '#78B088',\r\n                                                fontWeight: 600\r\n                                            }}>No Patient</h4>\r\n                                        </center>\r\n                                    </>\r\n                                }\r\n                            </Slider>\r\n                            {/* <div>\r\n                                        <center>\r\n                                            {data.ProfileImage ?\r\n                                                <Avatar src={data.ProfileImage} style={{ borderRadius: 150, height: 70, width: 70 }} />\r\n                                                : <Avatar style={{ borderRadius: 150, height: 70, width: 70 }} />}\r\n                                        </center>\r\n                                        <Grid item xs={12}\r\n                                            style={{\r\n                                                marginTop: 20\r\n                                            }}\r\n                                        >\r\n                                            <center>\r\n                                                <h4 style={{\r\n                                                    fontFamily: \"Poppins\",\r\n                                                    color: '#78B088',\r\n                                                    fontWeight: 600\r\n                                                }}>{data.FirstName} {data.LastName}</h4>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}\r\n                                            style={{\r\n                                                marginTop: 20\r\n                                            }}\r\n                                        >\r\n                                            <center>\r\n                                                <h3\r\n                                                    style={{\r\n                                                        fontFamily: \"Poppins\",\r\n                                                        color: '#2C7FB2',\r\n                                                    }}\r\n                                                >Now it's your turn please go for the treatment</h3>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </div> */}\r\n                            {/* <TailSpin color=\"#2C7FB2\" height={80} width={80} /> */}\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Avatar, CssBaseline, AppBar, Toolbar, IconButton, Typography, Menu, MenuItem, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport ip from '../ipaddress/ip';\r\nimport axios from 'axios';\r\nimport Slider from 'react-slick';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport TV_Slider_Component from './TV_Slider/SliderComponent';\r\nimport Patient_In_Queue_TV_Component from './TV_Slider/Patient_In_Queue_Component';\r\nimport { get_patientinqueue } from '../Apis/TV_Advertisements/index';\r\nimport { Show_Send_In_Details } from './TV_Slider/Show_Send_In_Details/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        color: '#2C7FB2'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#2C7FB2',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        color: '#fff'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    clinicname: {\r\n        // flexGrow: 1,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(0),\r\n        },\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    drname: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        padding: theme.spacing(1),\r\n        flex: 0.2,\r\n        alignSelf: 'right',\r\n        textAlign: 'right',\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    services: {\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    },\r\n    report: {\r\n        justifyContent: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    }\r\n}));\r\n\r\nexport default function Doctor_TV_TodaysAppointments() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [SendInModal, setSendInModal] = useState(false);\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open1 = Boolean(anchorEl);\r\n    const [doctordata, setdoctordata] = useState({});\r\n    const [authProfile, setAuthProfile] = React.useState(true);\r\n    const [anchorElProfile, setAnchorElProfile] = React.useState(false);\r\n    const [patientIn, setpatientIn] = useState([]);\r\n    const [SendIn, setSendIn] = useState([]);\r\n    const [ClinicDetails, setClinicDetails] = useState([]);\r\n\r\n    const fetchPatientIn = async () => {\r\n        try {\r\n            const data = await get_patientinqueue();\r\n            if (data) {\r\n                setpatientIn(data);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const fetchDoctorProfile = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let userid = parsed.userid;\r\n        try {\r\n            const doctorInfo = await axios.post(ip + 'ShowDoctorDetailUsingId', { DoctorId: userid });\r\n            if (doctorInfo) {\r\n                setdoctordata(doctorInfo?.data?.Doctor);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const FetchSend_In = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let ClinicId = parsed.ClinicId;\r\n        try {\r\n            const request = await axios.post(ip + 'Web_ShowSendInQueueForTV', { ClinicId: ClinicId });\r\n            if (request) {\r\n                let dato = request?.data?.Appointment;\r\n                setSendIn(dato);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            fetchDoctorProfile();\r\n            fetchPatientIn();\r\n            FetchSend_In();\r\n            setSendInModal(true);\r\n        }, 10000);\r\n        const secondinterval = setInterval(() => {\r\n            setSendInModal(false);\r\n        }, 20000);\r\n        FetchSend_In();\r\n        fetchDoctorProfile();\r\n        fetchPatientIn();\r\n        fetchClinicDetails();\r\n\r\n        return () => clearInterval(interval, secondinterval);\r\n    }, [])\r\n\r\n    const fetchClinicDetails = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let ClinicId = parsed.ClinicId;\r\n\r\n        try {\r\n            const ClinicInfo = await axios.post(ip + 'ShowClinicDetailsUsingId', { ClinicId: ClinicId });\r\n            let dato = ClinicInfo?.data?.Doctor;\r\n            setClinicDetails(dato);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setAuthProfile(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElProfile(true);\r\n        navigate(\"/DoctorProfile\");\r\n    };\r\n\r\n    const handlelogout = () => {\r\n        setAnchorElProfile(true);\r\n        localStorage.clear();\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    const handlenewregistration = () => {\r\n        navigate(\"/DoctorPatientRegistration\");\r\n    };\r\n\r\n\r\n    var settings = {\r\n        dots: true,\r\n        // infinite: true,\r\n        // speed: 500,\r\n        // slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        // autoplaySpeed: 2000,\r\n        // slickNext: true,\r\n        // slickPrevious: true,\r\n        swipe: true\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: 'white' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        className={classes.menuButton}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <div>\r\n                        <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n                    </div>\r\n\r\n                    <div className={classes.clinicname}>\r\n                        <Typography variant=\"h5\" noWrap={true} style={{ color: '#2C7FB2' }}>\r\n                            {doctordata.ClinicName}\r\n                        </Typography>\r\n                    </div>\r\n                    {/* <div className={classes.drname}>\r\n                        <Typography variant=\"h8\" noWrap={true} style={{ color: '#2C7FB2' }} >\r\n                            Dr. {doctordata.FirstName} {doctordata.LastName}\r\n                        </Typography>\r\n                    </div> */}\r\n                    {auth && (\r\n                        <div className={classes.profile}>\r\n                            {/* <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"primary\"\r\n\r\n                            > */}\r\n                            {ClinicDetails.Logo ?\r\n                                <img style={{ borderRadius: 50, height: 60, width: 140 }} src={ClinicDetails.Logo} /> :\r\n                                <img style={{ borderRadius: 50, height: 60, width: 140 }} src='default-image.png' />}\r\n\r\n\r\n                            {/* </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElProfile}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={anchorElProfile}\r\n                                onClick={() => setAnchorElProfile(false)}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n                            </Menu> */}\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2} style={{ marginTop: 50 }}>\r\n\r\n                <Grid item xs={12}>\r\n                    <TV_Slider_Component />\r\n                </Grid>\r\n\r\n                <Container>\r\n                    <Grid container spacing={2}>\r\n                        {patientIn.length > 0 ? <Patient_In_Queue_TV_Component data={patientIn} /> : null}\r\n                    </Grid>\r\n                </Container>\r\n                {SendInModal ? <Show_Send_In_Details show={SendInModal} data={SendIn} /> : null}\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n\r\n\r\nexport const EditClinicdata = async (obj) => {\r\n    try {\r\n        const editclinicrequest = await axios.patch(ip + 'Web_EditDoctor',obj)\r\n        return JSON.stringify(editclinicrequest?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, InputLabel, Radio, Typography, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\n\r\nimport { UploadClinicdetail } from \"../Clinic_Services/index\";\r\n\r\nexport default function ClinicDetails({ show, handleCloseEditmodal }) {\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [file, setfile] = useState();\r\n    const [Files, setFile] = useState(undefined);\r\n    const classes = useStyles();\r\n\r\n    const fetchClinic = async () => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n        let clinicid = parsed.ClinicId;\r\n\r\n        const formdata = new FormData();\r\n        formdata.append(\"file\", file);\r\n        //formdata.append(\"id\", data.id);\r\n        formdata.append(\"ClinicId\", clinicid);\r\n\r\n        // data.append(\"ClinicId\", clinicid);\r\n        const addclinicservice = await UploadClinicdetail(formdata);\r\n\r\n        let parse = JSON.parse(addclinicservice);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                onClose={handleCloseEditmodal}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Upload Clinic Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600,\r\n                                        alignItems: 'center',\r\n\r\n                                    }}>\r\n                                        Logo:\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} style={{ paddingRight: 80 }}>\r\n\r\n                                <TextField id=\"outlined-basic\" name=\"file\" type=\"file\" enctype=\"multipart/form-data\" size=\"small\" label=\"\"\r\n                                    onChange={e => {\r\n                                        const file = e.target.files[0];\r\n                                        setFile(URL.createObjectURL(e.target.files[0]));\r\n                                        setfile(file)\r\n                                    }} variant=\"outlined\"\r\n                                    style={{ float: 'left', width: '150%' }} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <center>\r\n                                <img src={Files} style={{ maxWidth: \"100%\", maxHeight: 300, marginTop: 10 }}></img>\r\n                            </center>\r\n                        </Grid>\r\n\r\n                        <Grid container>\r\n                            <Grid xs={12} sm={6}>\r\n                                <Button className={classes.btnregister} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid xs={12} sm={6}>\r\n                                <Button className={classes.btnregister} onClick={fetchClinic} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        fontSize: 11\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '70%',\r\n        marginTop: 15\r\n    },\r\n    facilitiesTitle: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        padding: 2\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 14,\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2,\r\n    },\r\n    description: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControlLabel, Select, InputLabel, FormControl, TextField, Typography, Button, Grid, Paper, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport ip from '../ipaddress/ip';\r\nimport { EditClinicdata } from '../Apis/Clinic_Details/index';\r\nimport { Times, Doctor_Category } from '../Apis/Home_Visitors/index';\r\nimport ClinicDetails from '../Apis/Clinicdetails/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nexport default function DoctorEditClinicDetails() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const Location = useLocation()\r\n    const [doctordata, setdoctordata] = React.useState([Location.state.details]);\r\n\r\n    //State\r\n    const [ClinicName, setClinicName] = useState(doctordata[0].ClinicName);\r\n    const [ClinicMobileNo, setClinicMobileNo] = useState(doctordata[0].ClinicMobileNo);\r\n    const [ClinicEmail, setClinicEmail] = useState(doctordata[0].ClinicEmail);\r\n    const [ClinicRegistrationNumber, setClinicRegistrationNumber] = useState(doctordata[0].ClinicRegistrationNumber);\r\n    const [ClinicGstNumber, setClinicGstNumber] = useState(doctordata[0].ClinicGstNumber);\r\n    const [ClinicCity, setClinicCity] = useState(doctordata[0].ClinicCity);\r\n    const [ClinicState, setClinicState] = useState(doctordata[0].ClinicState);\r\n    const [ClinicPincode, setClinicPincode] = useState(doctordata[0].ClinicPincode);\r\n    const [ClinicCountry, setClinicCountry] = useState(doctordata[0].ClinicCountry);\r\n    const [ClinicAddress, setClinicAddress] = useState(doctordata[0].ClinicAddress);\r\n    const [ClinicStartTime, setClinicStartTime] = useState(doctordata[0].ClinicStartTime);\r\n    const [ClinicEndTime, setClinicEndTime] = useState(doctordata[0].ClinicEndTime);\r\n    const [NoOfStaff, setNoOfStaff] = useState(doctordata[0].NoOfStaff);\r\n    const [Latitude, setLatitude] = useState(doctordata[0].Latitude);\r\n    const [Longitude, setLongitude] = useState(doctordata[0].Longitude);\r\n    const [morningendtimeselected, setMorningEndTimeSelected] = React.useState(\"\");\r\n    const [morningstarttimeselected, setMorningStartTimeSelected] = React.useState(\"\");\r\n    const [times, setTimes] = useState([]);\r\n    const [editdetails, seteditdetails] = useState();\r\n    useEffect(() => {\r\n        fetchTimes();\r\n    }, []);\r\n\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        setTimes(times);\r\n    }\r\n    const fetchclinicdetails = async () => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n\r\n        let DoctorId = parsed.userid;\r\n        let clinicid = parsed.ClinicId;\r\n\r\n        const obj = {\r\n            UserId: DoctorId,\r\n            ClinicId: clinicid,\r\n            ClinicName: ClinicName,\r\n            ClinicMobileNo: ClinicMobileNo,\r\n            ClinicEmail: ClinicEmail,\r\n            ClinicAddress: ClinicAddress,\r\n            ClinicCity: ClinicCity,\r\n            ClinicState: ClinicState,\r\n            ClinicPincode: ClinicPincode,\r\n            ClinicCountry: ClinicCountry,\r\n            ClinicGstNumber: ClinicGstNumber,\r\n            ClinicStartTime: ClinicStartTime,\r\n            ClinicEndTime: ClinicEndTime,\r\n            ClinicRegistrationNumber: ClinicRegistrationNumber,\r\n            Latitude: Latitude,\r\n            Longitude: Longitude\r\n        }\r\n        try {\r\n            const editClinicRequest = await EditClinicdata(obj);\r\n            let response = JSON.parse(editClinicRequest);\r\n            if (response.success == '200') {\r\n                alert('Clinic Details Edited Successfully');\r\n                navigate(-1)\r\n            }\r\n            else {\r\n                alert(response.message);\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handledetailOpenEditmodal = () => {\r\n        seteditdetails(true);\r\n    };\r\n\r\n    const handleChangePass = () => {\r\n        navigate(\"/DoctorTreatPatient\");\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorProfile\");\r\n    };\r\n\r\n    console.log(doctordata);\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Edit Clinic Details\r\n                        <Button className={classes.btnregister} onClick={handledetailOpenEditmodal} style={{ float: 'right', marginRight: 20, fontFamily: 'Poppins', fontSize: 12, width: 180 }}>Change Clinic Logo</Button>\r\n\r\n                    </Typography>\r\n                    {/* <Button onClick={handledetailOpenEditmodal}\r\n                        style={{color: 'white', border: 'grey', marginBottom: 10, bottom: 24, backgroundColor: '#2C7FB2', borderRadius: 28, width: 130, textTransform: 'capitalize' }} >\r\n                       \r\n\r\n                    </Button> */}\r\n                    {editdetails ? <ClinicDetails show={editdetails} handleCloseEditmodal={() => seteditdetails(false)} /> : null}\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginLeft: 5, marginRight: 20, borderRadius: 20 }}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#2C7FB2'\r\n\r\n                                }}>\r\n                                    Details\r\n\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid container style={{ marginTop: 20 }}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        ClinicName\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField type=\"text\" className={classes.textFieldForm} value={ClinicName} onChange={(e) =>\r\n                                                setClinicName(e.target.value)\r\n                                            } id=\"outlined-basic\" size=\"small\" placeholder=\"Clinic Name\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Timings:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container style={{ marginTop: '-30px' }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    Start Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    End Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" value={ClinicStartTime} onChange={(e) => { setClinicStartTime(e.target.value) }} className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        label='Start Time'\r\n\r\n                                                        value={ClinicStartTime}\r\n                                                        onChange={(e) => setClinicStartTime(e.target.value)}\r\n\r\n                                                        inputProps={{\r\n                                                            name: 'start time',\r\n                                                            id: 'outlined-start-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        {times.map((item, id) => {\r\n                                                            return (\r\n                                                                <option key={id} value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" value={ClinicEndTime} onChange={(e) => { setClinicEndTime(e.target.value) }} className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={ClinicEndTime}\r\n                                                        onChange={(e) => setClinicEndTime(e.target.value)}\r\n                                                        inputProps={{\r\n                                                            name: 'end time',\r\n                                                            id: 'outlined-end-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        {times.map((item, id) => {\r\n                                                            return (\r\n                                                                <option key={id} value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Contact Number:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={ClinicMobileNo} onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setClinicMobileNo(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            onInput={(e) => {\r\n                                                e.target.value = Math.max(0, parseInt(e.target.value)).toString(0,10).slice(0, 10)}}\r\n                                                 id=\"outlined-basic\" size=\"small\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        ClinicGstNumber:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={ClinicGstNumber} onChange={(e) => setClinicGstNumber(e.target.value)} id=\"outlined-basic\" size=\"small\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Email ID:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={ClinicEmail} onChange={(e) => { setClinicEmail(e.target.value) }} id=\"outlined-basic\" size=\"small\" placeholder=\"Email Id\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Registration Number:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={ClinicRegistrationNumber} onChange={(e) => { setClinicRegistrationNumber(e.target.value) }} id=\"outlined-basic\" size=\"small\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n\r\n                                    }}>\r\n                                        Address:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={ClinicAddress} onChange={(e) => { setClinicAddress(e.target.value) }} id=\"outlined-basic\" size=\"small\" placeholder=\"Address\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        No. of Staff:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={NoOfStaff} onChange={(e) => setNoOfStaff(e.target.value)} id=\"outlined-basic\" size=\"small\" placeholder=\"Number of Staff\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        City:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={ClinicCity} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setClinicCity(e.target.value)\r\n                                                        }\r\n                                                    }} id=\"outlined-basic\" size=\"small\" placeholder=\"City\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={ClinicPincode} onChange={(e) => {\r\n                                                        const re = /^[0-9\\b]+$/;\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setClinicPincode(e.target.value)\r\n                                                        }\r\n                                                    }} id=\"outlined-basic\" size=\"small\" placeholder=\"Pincode\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Geographic Location:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} id=\"outlined-basic\" value={Latitude} onChange={(e) => setLatitude(e.target.value)} size=\"small\" placeholder=\"Latitude\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} id=\"outlined-basic\" size=\"small\" placeholder=\"Longitude\" value={Longitude} onChange={(e) => setLongitude(e.target.value)} variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        State:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={ClinicState} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setClinicState(e.target.value)\r\n                                                        }\r\n                                                    }} id=\"outlined-basic\" size=\"small\" placeholder=\"State\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={ClinicCountry} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setClinicCountry(e.target.value)\r\n                                                        }\r\n                                                    }} id=\"outlined-basic\" size=\"small\" placeholder=\"Country\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={6} >\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnCancle} onClick={handleGoBack} style={{ float: 'right', marginRight: 20 }}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnCancle} onClick={fetchclinicdetails} style={{ float: 'left', marginLeft: 20 }}>\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: 'Poppins;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(3),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '11px'\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginTop: 15\r\n    },\r\n    btnSubmit: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, Slide, Button, Grid, Avatar } from \"@material-ui/core\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Delete_home_visitor_Details_by_id } from '../../../Apis/Home_Visitors';\r\nimport {\r\n    Document,\r\n    Page,\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    PDFViewer\r\n} from \"@react-pdf/renderer\";\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        backgroundColor: \"#fff\",\r\n        color: \"black\"\r\n    },\r\n    Headersection: {\r\n        margin: 10,\r\n        padding: 10,\r\n    },\r\n    Header: {\r\n        flexDirection: \"row\",\r\n        border: \"1px solid gray\",\r\n        backgroundColor: '#2C7FB2'\r\n    },\r\n    body: {\r\n        border: \"1px solid gray\",\r\n        backgroundColor: '#FFF',\r\n    },\r\n    section: {\r\n        margin: 5,\r\n        padding: 5,\r\n        border: '1px solid black'\r\n    },\r\n    viewer: {\r\n        width: '100%', //the pdf viewer will take up all of the width and height\r\n        height: '550%'\r\n    },\r\n    hdText: {\r\n        color: '#FFF',\r\n        fontSize: 14,\r\n    },\r\n    Text: {\r\n        color: '#707070',\r\n        fontSize: 12,\r\n        textAlign: 'center'\r\n    },\r\n    table: {\r\n        width: '100%',\r\n    },\r\n    row: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        borderTop: '1px solid #EEE',\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n    },\r\n    header: {\r\n        borderTop: 'none',\r\n    },\r\n    bold: {\r\n        fontSize: 12,\r\n        Overflow: 'wrap'\r\n    },\r\n    // So Declarative and unDRY 👌\r\n    row1: {\r\n        width: '18%',\r\n        padding: 5\r\n    },\r\n    row2: {\r\n        width: '11%',\r\n        padding: 2\r\n    },\r\n    row3: {\r\n        padding: 2,\r\n        width: '12%',\r\n        textAlign: 'center'\r\n    },\r\n    row4: {\r\n        textAlign: 'center',\r\n        padding: 2,\r\n        width: '13%',\r\n    },\r\n    row5: {\r\n        textAlign: 'center',\r\n        padding: 2,\r\n        width: '17%',\r\n    },\r\n    row6: {\r\n        textAlign: 'center',\r\n        padding: 2,\r\n        width: '12%',\r\n    },\r\n    row7: {\r\n        textAlign: 'center',\r\n        padding: 2,\r\n        width: '18%',\r\n    },\r\n    //for finance\r\n    frow1: {\r\n        textAlign: 'center',\r\n        width: '18%',\r\n        padding: 2\r\n    },\r\n    frow2: {\r\n        width: '18%',\r\n        padding: 2,\r\n        textAlign: 'center'\r\n    },\r\n    frow3: {\r\n        padding: 2,\r\n        width: '14%',\r\n        textAlign: 'center'\r\n    },\r\n    frow4: {\r\n        textAlign: 'center',\r\n        padding: 2,\r\n        width: '13%',\r\n    },\r\n    frow5: {\r\n        textAlign: 'center',\r\n        padding: 2,\r\n        width: '17%',\r\n    },\r\n});\r\n\r\nconst Show_pdf_data = ({ show, data, column, handleclose, Type }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (PatientId) => {\r\n\r\n        const request = await Delete_home_visitor_Details_by_id(PatientId);\r\n        let response = JSON.parse(request);\r\n        if (response.success == '200') {\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(request);\r\n        }\r\n    }\r\n    console.log(column)\r\n    if (Type === 'Finance') {\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    open={show}\r\n                    fullScreen\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <div>\r\n                        <AppBar className={classes.appBar}>\r\n                            <Toolbar>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Download PDF\r\n                                </Typography>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <PDFViewer style={styles.viewer}>\r\n                            {/* Start of the document*/}\r\n                            <Document>\r\n                                {/*render a single page*/}\r\n                                <Page size=\"A4\" style={styles.page}>\r\n                                    <View style={styles.Header}>\r\n                                        {column.map(v => (\r\n                                            <>\r\n                                                <View style={styles.Headersection}>\r\n                                                    <Text style={styles.hdText}>{v.headerName}</Text>\r\n                                                </View>\r\n                                            </>\r\n                                        ))}\r\n                                    </View>\r\n                                    <View style={styles.body}>\r\n                                        {data.map((v, i) => (\r\n                                            <>\r\n                                                <View key={i} style={styles.row} wrap={false}>\r\n                                                    <Text style={styles.frow1}>\r\n                                                        <Text style={styles.bold}>{v.PFName} {v.PLName}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow2}>\r\n                                                        <Text style={styles.bold}>{v.DFName}{v.DLName}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow3}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentTime}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow4}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentStatus}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow4}>\r\n                                                        <Text style={styles.bold}>{v.cash ? v.cash : 'NA'}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow4}>\r\n                                                        <Text style={styles.bold}>{v.online ? v.online : 'NA'}</Text>\r\n                                                    </Text>\r\n                                                    {/* <Text style={styles.row4}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentStatus}</Text>\r\n                                                    </Text> */}\r\n                                                </View>\r\n                                            </>\r\n                                        ))}\r\n                                    </View>\r\n\r\n                                </Page>\r\n                            </Document>\r\n                        </PDFViewer>\r\n                    </div>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n    else if (Type === 'Staff') {\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    open={show}\r\n                    fullScreen\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <div>\r\n                        <AppBar className={classes.appBar}>\r\n                            <Toolbar>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Download PDF\r\n                                </Typography>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <PDFViewer style={styles.viewer}>\r\n                            {/* Start of the document*/}\r\n                            <Document>\r\n                                {/*render a single page*/}\r\n                                <Page size=\"A4\" style={styles.page}>\r\n                                    <View style={styles.Header}>\r\n                                        {column.map(v => (\r\n                                            <>\r\n                                                <View style={styles.Headersection}>\r\n                                                    <Text style={styles.hdText}>{v.headerName}</Text>\r\n                                                </View>\r\n                                            </>\r\n                                        ))}\r\n                                    </View>\r\n                                    <View style={styles.body}>\r\n                                        {data.map((v, i) => (\r\n                                            <>\r\n                                                <View key={i} style={styles.row} wrap={false}>\r\n                                                    <Text style={styles.frow2}>\r\n                                                        <Text style={styles.bold}>{v.DFName}{v.DLName}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow3}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentTime}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow4}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentStatus}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow4}>\r\n                                                        <Text style={styles.bold}>{v.cash ? v.cash : 'NA'}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow4}>\r\n                                                        <Text style={styles.bold}>{v.online ? v.online : 'NA'}</Text>\r\n                                                    </Text>\r\n                                                    {/* <Text style={styles.row4}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentStatus}</Text>\r\n                                                    </Text> */}\r\n                                                </View>\r\n                                            </>\r\n                                        ))}\r\n                                    </View>\r\n\r\n                                </Page>\r\n                            </Document>\r\n                        </PDFViewer>\r\n                    </div>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n    else if (Type === 'Home Visitor') {\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    open={show}\r\n                    fullScreen\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <div>\r\n                        <AppBar className={classes.appBar}>\r\n                            <Toolbar>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Download PDF\r\n                                </Typography>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <PDFViewer style={styles.viewer}>\r\n                            {/* Start of the document*/}\r\n                            <Document>\r\n                                {/*render a single page*/}\r\n                                <Page size=\"A4\" style={styles.page}>\r\n                                    <View style={styles.Header}>\r\n                                        {column.map(v => (\r\n                                            <>\r\n                                                <View style={styles.Headersection}>\r\n                                                    <Text style={styles.hdText}>{v.headerName}</Text>\r\n                                                </View>\r\n                                            </>\r\n                                        ))}\r\n                                    </View>\r\n                                    <View style={styles.body}>\r\n                                        {data.map((v, i) => (\r\n                                            <>\r\n                                                <View key={i} style={styles.row} wrap={false}>\r\n                                                    <Text style={styles.frow1}>\r\n                                                        <Text style={styles.bold}>{v.PFName}{v.PLName}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow2}>\r\n                                                        <Text style={styles.bold}>{v.DFName}{v.DLName}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow3}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentTime}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow4}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentStatus}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.frow4}>\r\n                                                        <Text style={styles.bold}>{v.PaymentMode}</Text>\r\n                                                    </Text>\r\n                                                    {/* <Text style={styles.row4}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentStatus}</Text>\r\n                                                    </Text> */}\r\n                                                </View>\r\n                                            </>\r\n                                        ))}\r\n                                    </View>\r\n\r\n                                </Page>\r\n                            </Document>\r\n                        </PDFViewer>\r\n                    </div>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    open={show}\r\n                    fullScreen\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <div>\r\n                        <AppBar className={classes.appBar}>\r\n                            <Toolbar>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Download PDF\r\n                                </Typography>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <PDFViewer style={styles.viewer}>\r\n                            {/* Start of the document*/}\r\n                            <Document>\r\n                                {/*render a single page*/}\r\n                                <Page size=\"A4\" style={styles.page} wrap>\r\n                                    <View style={styles.Header}>\r\n                                        {column.map(v => (\r\n                                            <>\r\n                                                <View style={styles.Headersection}>\r\n                                                    <Text style={styles.hdText} break>{v.headerName}</Text>\r\n                                                </View>\r\n                                            </>\r\n                                        ))}\r\n                                    </View>\r\n                                    <View style={styles.body}>\r\n                                        {data.map((v, i) => (\r\n                                            <>\r\n                                                <View key={i} style={styles.row} wrap={false}>\r\n                                                    <Text style={styles.row1}>\r\n                                                        <Text style={styles.bold}>{v.FirstName} {v.LastName}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.row2}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentDate}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.row3}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentTime}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.row4}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentStatus}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.row5}>\r\n                                                        <Text style={styles.bold}>{v.AppointmentChannel}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.row6}>\r\n                                                        <Text style={styles.bold}>{v.PaymentMode}</Text>\r\n                                                    </Text>\r\n                                                    <Text style={styles.row7}>\r\n                                                        <Text style={styles.bold}>{v.TotalAmount}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n                                            </>\r\n                                        ))}\r\n                                    </View>\r\n\r\n                                </Page>\r\n                            </Document>\r\n                        </PDFViewer>\r\n                    </div>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: '#2C7FB2'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Show_pdf_data;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const HV_Appointments_by_date = async (startdate, endDate, doctor) => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n\r\n    const body = {\r\n        ClinicId: ClinicId,\r\n        StartDate: startdate,\r\n        EndDate: endDate,\r\n        DoctorId: doctor\r\n    }\r\n\r\n    try {\r\n        const response = await axios.post(ip + 'Web_HVAppointmentReport', body);\r\n        return (response?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message)\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, Grid, Slide } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Show_pdf_data from './Pdf_Viewer/Modal/index';\r\nimport { HVDoctors } from '../Apis/Book_Appointment/index';\r\nimport { HV_Appointments_by_date } from '../Apis/Home_Visitors/Home_Visitor_History/index'\r\n\r\nconst drawerWidth = 240;\r\n\r\nvar columns = [\r\n    {\r\n        field: 'UserId',\r\n        headerName: 'Patient ID',\r\n        width: 140,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 150,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'AppointmentDate',\r\n        headerName: 'Date',\r\n        width: 140,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentTime',\r\n        headerName: 'Time',\r\n        width: 120,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentStatus',\r\n        headerName: 'Status',\r\n        width: 130,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'HomeVisitReason',\r\n        headerName: 'Reason',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'Address',\r\n        headerName: 'Address',\r\n        width: 180,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'PaymentMode',\r\n        headerName: 'Mode',\r\n        width: 130,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'TotalAmount',\r\n        headerName: 'Total',\r\n        width: 100,\r\n        editable: true,\r\n    },\r\n];\r\n\r\nvar columnsforpdf = [\r\n    {\r\n        headerName: 'Full name',\r\n    },\r\n    {\r\n        headerName: 'Date',\r\n    },\r\n    {\r\n        headerName: 'Time',\r\n    },\r\n    {\r\n        headerName: 'Status',\r\n    },\r\n    {\r\n        headerName: 'Reason',\r\n    },\r\n    {\r\n        headerName: 'Mode',\r\n    },\r\n    {\r\n        headerName: 'Payment',\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 0.5,\r\n        backgroundColor: 'white',\r\n    },\r\n    root2: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        marginTop: 70\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 20,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n}));\r\n\r\n\r\nexport default function DoctorHomeVisitHistory() {\r\n\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [appointmentlist, setappointmentlist] = useState([]);\r\n    const [startdate, setstartdate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [doctorData, setdoctorData] = useState([]);\r\n    const [doctor, setdoctor] = useState('');\r\n    const [norecords, setnorecords] = useState('15');\r\n    const [view, setview] = useState(false);\r\n\r\n    \r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHomeVisitors\");\r\n    };\r\n\r\n\r\n    const fetchdoctorsdata = async () => {\r\n        const doctorInfo = await HVDoctors()\r\n        setdoctorData(doctorInfo);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchdoctorsdata();\r\n    }, [])\r\n\r\n\r\n    const Show_appointmentsbydate = async (startdate, endDate, doctor) => {\r\n        try {\r\n            const request = await HV_Appointments_by_date(startdate, endDate, doctor);\r\n            if (request.success === \"200\") {\r\n                setappointmentlist(request.Report)\r\n                console.log(request.Report)\r\n            }\r\n            else {\r\n                alert(request.message);\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n                <DoctorNavbar />\r\n                <Grid container spacing={2}\r\n                    className={clsx(classes.grid, {\r\n                        [classes.gridShift]: open,\r\n                    })}\r\n                    direction=\"row\"\r\n                >\r\n                    <div className={classes.root2}>\r\n                        <Typography variant=\"h5\" noWrap={true}\r\n                            style={{\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 500,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                color: '#2C7FB2',\r\n\r\n                            }}>\r\n                            <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                            Home Visitor History\r\n                        </Typography>\r\n\r\n\r\n                        <div className='row' style={{ display: 'flex', marginTop: 20 }}>\r\n                            <div className='col-3'>\r\n                                <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>From</label>\r\n                                <input\r\n                                    id=\"fromdate\"\r\n                                    type=\"date\"\r\n                                    value={startdate}\r\n                                    onChange={(e) => {\r\n                                        setstartdate(e.target.value)\r\n                                    }}\r\n                                    style={\r\n                                        {\r\n                                            border: '1px solid #F0F0F0',\r\n                                            height: 30,\r\n                                            fontFamily: 'Poppins',\r\n                                            paddingLeft: 15,\r\n                                            color: '#707070'\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>To</label>\r\n                                <input id=\"fromdate\" type=\"date\" value={endDate} onChange={(e) => {\r\n                                    setendDate(e.target.value)\r\n                                }} style={{ border: '1px solid #F0F0F0', height: 30, fontFamily: 'Poppins', color: '#707070', paddingLeft: 15 }} />\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>Doctor</label>\r\n                                <select id=\"dropdown\" value={doctor} onChange={(e) => setdoctor(e.target.value)} style={{ height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 15, width: '100%' }}>\r\n                                    <option value=\"\" >Select Doctor</option>\r\n                                    {doctorData.map(v => (<option value={v.UserId}>Dr. {v.FirstName} {v.LastName}</option>))}\r\n                                </select>\r\n                            </div>\r\n                            <div className='col-1'>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"#2C7FB2\"\r\n                                    style={{\r\n                                        backgroundColor: '#2C7FB2',\r\n                                        color: '#fff',\r\n                                        fontFamily: 'Poppins',\r\n                                        height: 30,\r\n                                        marginLeft: 40\r\n                                    }}\r\n                                    onClick={() => Show_appointmentsbydate(startdate, endDate, doctor)}\r\n                                >\r\n                                    Show\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-1'>\r\n                                <select id=\"dropdown\" value={norecords} onChange={(e) => setnorecords(e.target.value)} style={{ width: 80, height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 15, marginLeft: 30 }}>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"15\">15</option>\r\n                                    <option value=\"20\">20</option>\r\n                                    <option value=\"25\">25</option>\r\n                                    <option value=\"30\">30</option>\r\n                                    <option value=\"35\">35</option>\r\n                                    <option value=\"40\">40</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <Grid item xs={12} >\r\n                            <DataGrid\r\n                                style={{ height: 350, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', marginTop: 20, marginRight: 20 }}\r\n                                rows={appointmentlist}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={5}\r\n                                pageSize={norecords}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ marginRight: 20 }} >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"#2C7FB2\"\r\n                                style={{\r\n                                    backgroundColor: '#2C7FB2',\r\n                                    color: '#fff',\r\n                                    fontFamily: 'Poppins',\r\n                                    height: 30,\r\n                                    float: 'right',\r\n                                    marginTop: 15,\r\n                                }}\r\n                                onClick={() => {\r\n                                    if (appointmentlist.length == 0) {\r\n                                        alert('Please find some record first')\r\n                                        return;\r\n                                    }\r\n                                    else {\r\n                                        setview(true)\r\n                                    }\r\n                                }\r\n                                }\r\n                            >\r\n                                Download as PDF\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"#2C7FB2\"\r\n                                style={{\r\n                                    backgroundColor: '#2C7FB2',\r\n                                    color: '#fff',\r\n                                    fontFamily: 'Poppins',\r\n                                    height: 30,\r\n                                    float: 'right',\r\n                                    marginTop: 15, marginRight: 15\r\n                                }}\r\n                                onClick={() => {\r\n                                    setappointmentlist([]);\r\n                                    setstartdate('');\r\n                                    setendDate('');\r\n                                    setdoctor('');\r\n                                }}\r\n                            >\r\n                                Reset\r\n                            </Button>\r\n                        </Grid>\r\n                        {view ? <Show_pdf_data show={view} data={appointmentlist} column={columnsforpdf} handleclose={() => setview(false)} /> : null}\r\n\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Container, FormControl, Dialog, Radio, Card, CardContent, Slide, Switch, FormControlLabel, Select, InputLabel, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useDispatch, connect, useSelector } from 'react-redux';\r\nimport { paymentDetails, getPrescription } from '../Apis/PatientInQueue/Generate_Prescription/Medicines_Table/index';\r\nconst drawerWidth = 240;\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction DoctorPaymentDetails() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, settitle] = useState('');\r\n    const [description, setdescription] = useState('');\r\n    const [paymentmode, setpaymentmode] = useState('');\r\n    const [fees, setfees] = useState('');\r\n    const [details, setdetails] = useState(location.state.detail);\r\n    const [pdf, setpdf] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedMedicine = useSelector(state => state.reducer);\r\n\r\n    const handlePaymentDetails = async () => {\r\n        var sessiondata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(sessiondata);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n        const obj = {\r\n            ClinicId: clinicid,\r\n            DoctorId: doctorid,\r\n            PatientId: details.UserId,\r\n            AppointmentId: details.id,\r\n            PaymentAmount: fees,\r\n            PaymentMode: paymentmode,\r\n        }\r\n        try {\r\n            const request = await paymentDetails(obj);\r\n            let response = JSON.parse(request);\r\n            if (response.success === \"200\") {\r\n                alert(response.message);\r\n                dispatch({ type: 'RESET_MEDICINE_ITEM' });\r\n                navigate('/DoctorDashboard');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const handlePrintFinish = async () => {\r\n        handlePaymentDetails().then(data => {\r\n            window.open(pdf, \"PRINT\", \"height=400,width=600\");\r\n        })\r\n    }\r\n\r\n    const handlePreviewPDF = async (id) => {\r\n        try {\r\n            const request = await getPrescription(details.id)\r\n            let response = JSON.parse(request);\r\n\r\n            if (response) {\r\n                setpdf(response.PdfPrescription)\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        handlePreviewPDF();\r\n    }, []);\r\n\r\n    const handleGoBack = () => {\r\n        dispatch({ type: 'RESET_MEDICINE_ITEM' });\r\n        navigate(-1);\r\n    };\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeAllDays = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Payment Details\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={4} style={{ border: '1px solid lightgray', borderLeft: '0px', borderTop: '0px' }}>\r\n                                    <center>\r\n                                        {details.ProfileImage ?\r\n                                            <Avatar style={{ borderRadius: 200, height: 90, width: 90, marginTop: 20 }} src={details.ProfileImage} /> :\r\n                                            <Avatar style={{ borderRadius: 200, height: 90, width: 90, marginTop: 20 }} />}\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container item xs={12} sm={8} style={{ border: '1px solid lightgray', borderLeft: '0px', borderTop: '0px', borderRight: 0 }}>\r\n                                    <Grid item xs={12} style={{ borderBottom: '1px solid lightgray' }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 18,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                {details.FirstName} {details.LastName}\r\n                                            </Typography>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                marginTop: 10,\r\n                                                marginBottom: 10,\r\n                                            }}>\r\n                                                PID- {details.PatientId}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} container >\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 16,\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    color: '#707070',\r\n                                                    fontWeight: 600,\r\n                                                    borderRight: '1px solid lightgray',\r\n                                                    paddingTop: 10,\r\n                                                    paddingBottom: 10,\r\n                                                }}>\r\n                                                    Mobile No\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 16,\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    color: '#707070',\r\n                                                    fontWeight: 600,\r\n                                                    borderRight: '0px',\r\n                                                    paddingTop: 10,\r\n                                                    paddingBottom: 10,\r\n                                                }}>\r\n                                                    Date\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14,\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    color: '#707070',\r\n                                                    borderRight: '1px solid lightgray',\r\n                                                    paddingBottom: 10,\r\n                                                }}>\r\n                                                    {details.MobileNo}\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14,\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    color: '#707070',\r\n                                                    borderRight: '0px',\r\n                                                    paddingBottom: 10,\r\n                                                }}>\r\n                                                    {details.AppointmentDate}\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 16,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            fontWeight: 600,\r\n                                            paddingTop: 10,\r\n                                            paddingBottom: 10,\r\n\r\n                                        }}>\r\n                                            Title\r\n                                        </Typography>\r\n                                    </center>\r\n                                    <center>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 16,\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            color: '#707070',\r\n                                            borderBottom: '1px solid lightgray',\r\n                                            paddingBottom: 10,\r\n                                        }}>\r\n                                            {details.Title}\r\n                                        </Typography>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} container >\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600,\r\n                                                borderRight: '1px solid lightgray',\r\n                                                paddingTop: 10,\r\n                                                paddingBottom: 10,\r\n                                            }}>\r\n                                                Payment Mode\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600,\r\n                                                borderRight: '0px',\r\n                                                paddingTop: 10,\r\n                                                paddingBottom: 10,\r\n                                            }}>\r\n                                                Total Fee\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n\r\n                                        <Grid item xs={12} container style={{ borderRight: '1px solid lightgray' }}>\r\n                                            <Grid item xs={6}>\r\n\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ fontFamily: 'Poppins', fontSize: 14 }}  >\r\n                                                    <Radio\r\n                                                        checked={paymentmode === 'Cash'}\r\n                                                        color='primary'\r\n                                                        onChange={(e) => setpaymentmode(e.target.value)}\r\n                                                        value=\"Cash\"\r\n                                                        name=\"radio-button-demo\"\r\n                                                        inputProps={{ 'aria-label': 'Cash' }}\r\n                                                    />Cash</InputLabel>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n\r\n                                                <InputLabel htmlFor=\"outlined-age-native-simple\" style={{ fontFamily: 'Poppins', fontSize: 14 }}>\r\n                                                    <Radio\r\n                                                        checked={paymentmode === 'Online'}\r\n                                                        color='primary'\r\n                                                        onChange={(e) => setpaymentmode(e.target.value)}\r\n                                                        value=\"Online\"\r\n                                                        name=\"radio-button-demo\"\r\n                                                        inputProps={{ 'aria-label': 'Online' }}\r\n\r\n                                                    />Online</InputLabel>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <TextField className={classes.inputFields} onChange={(e) => setfees(e.target.value)} type='number' id=\"outlined-basic\" size=\"small\" label=\"Fees\" variant=\"outlined\" />\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Grid style={{ height: 290, overflowY: 'scroll' }}>\r\n                                {selectedMedicine.map((item) => {\r\n                                    return (\r\n                                        <>\r\n                                            <Card elevation={1} style={{ width: 730, marginTop: 5, color: '#2C7FB2', paddingBottom: 0 }}>\r\n                                                <CardContent style={{ marginTop: '-5px', paddingBottom: 0 }}>\r\n                                                    <Grid container xs={12}>\r\n                                                        <Grid item xs={8}>\r\n                                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                                fontSize: 16, fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                            }}>\r\n                                                                {item.MedicineName}\r\n                                                            </Typography>\r\n\r\n                                                        </Grid>\r\n\r\n                                                        <Grid container item xs={4}>\r\n                                                            <Grid item xs={12}>\r\n                                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                                    fontSize: 12, fontFamily: 'Poppins',\r\n                                                                    fontStyle: 'normal',\r\n                                                                    fontWeight: 600,\r\n                                                                    color: '#707070',\r\n                                                                    float: 'right'\r\n\r\n                                                                }}>\r\n                                                                    ( {item.BeforeMeal == true ? 'Before Meal' : 'After Meal'} )\r\n                                                                </Typography>\r\n                                                            </Grid>\r\n\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n\r\n                                                    <Grid container xs={12} style={{ overflow: 'auto' }}>\r\n                                                        <Grid item sm={1} style={{\r\n                                                            fontSize: 12,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            color: '#707070'\r\n                                                        }}>\r\n                                                            Days:\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1}>\r\n                                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                                fontSize: 12,\r\n                                                                fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                color: '#707070'\r\n                                                            }} >\r\n                                                                {item.DoseDays}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item sm={1} style={{\r\n                                                            fontSize: 12,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            color: '#707070'\r\n                                                        }}>\r\n                                                            Times:\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1}>\r\n                                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                                fontSize: 12,\r\n                                                                fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                color: '#707070'\r\n                                                            }} >\r\n                                                                {item.DoseTime}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item sm={1} style={{\r\n                                                            fontSize: 12,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            color: '#707070'\r\n                                                        }}>\r\n                                                            Morning:\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1}>\r\n                                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                                fontSize: 12,\r\n                                                                fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                color: '#707070'\r\n                                                            }} >\r\n                                                                {item.MorningDose == true ? '1' : '0'}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1} style={{\r\n                                                            fontSize: 12,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            color: '#707070'\r\n                                                        }}>\r\n                                                            Afternoon:\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1}>\r\n                                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                                fontSize: 12,\r\n                                                                fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                color: '#707070',\r\n                                                                marginLeft: 10\r\n                                                            }}>\r\n                                                                {item.AfternoonDose == true ? '1' : '0'}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1} style={{\r\n                                                            fontSize: 12,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            color: '#707070'\r\n                                                        }}>\r\n                                                            Evening:\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1}>\r\n                                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                                fontSize: 12,\r\n                                                                fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                color: '#707070'\r\n                                                            }}>\r\n                                                                {item.AfternoonDose == true ? '1' : '0'}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1} style={{\r\n                                                            fontSize: 12,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            color: '#707070'\r\n                                                        }}>\r\n                                                            Night:\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={1}>\r\n                                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                                fontSize: 12,\r\n                                                                fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                color: '#707070'\r\n                                                            }}>\r\n                                                                {item.NightDose == true ? '1' : '0'}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 10 }}>\r\n                                <Grid item sm={4} >\r\n                                    <center>\r\n                                        <Button onClick={() => window.open(pdf, '_blank')} className={classes.btnregister} style={{ float: 'right', marginRight: '-40px' }}>Preview PDF</Button>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item sm={4} >\r\n                                    <center>\r\n                                        <Button onClick={() => handlePrintFinish()} className={classes.btnregister} style={{}}>Print & Finish</Button>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item sm={4} >\r\n                                    <center>\r\n\r\n                                        <Button onClick={() => handlePaymentDetails()} className={classes.btnregister} style={{ float: 'left', marginLeft: '-40px' }}>Finish</Button>\r\n                                    </center>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n    description: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 145,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(1.2),\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 8,\r\n    },\r\n    inputFields: {\r\n        width: 150,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12,\r\n        position: 'relative'\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default connect()(DoctorPaymentDetails);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const GetAppointmentStatus = async () => {\r\n    try {\r\n        const Response = await axios.post(ip + 'Web_AppointmentStatus');\r\n        return Response?.data?.Appointment\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const Appointment_Details_by_date = async (startdate, endDate, status) => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n\r\n    const body = {\r\n        ClinicId: ClinicId,\r\n        StartDate: startdate,\r\n        EndDate: endDate,\r\n        AppointmentStatus: status\r\n    }\r\n\r\n    try {\r\n        const response = await axios.post(ip + 'Web_AppointmentAnalysisReport', body);\r\n        return (response?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message)\r\n    }\r\n}\r\n\r\n\r\nexport const Home_Visitor_Details_by_date = async (startdate, endDate, status) => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n\r\n    const body = {\r\n        ClinicId: ClinicId,\r\n        StartDate: startdate,\r\n        EndDate: endDate,\r\n        AppointmentStatus: status\r\n    }\r\n\r\n    try {\r\n        const response = await axios.post(ip + 'Web_HomeVisitorAnalysisReport', body);\r\n        return (response?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message)\r\n    }\r\n}\r\n\r\n\r\nexport const Staff_Analysis_Details_by_date = async (startdate, endDate, status, UserId) => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n\r\n    const body = {\r\n        ClinicId: ClinicId,\r\n        StartDate: startdate,\r\n        EndDate: endDate,\r\n        UserId: status\r\n    }\r\n\r\n    try {\r\n        const response = await axios.post(ip + 'Web_StaffAnalysisReport', body);\r\n        return (response?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message)\r\n    }\r\n}\r\n\r\nexport const Finance_Analysis_Details_by_date = async (startdate, endDate, status, UserId) => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n\r\n    const body = {\r\n        ClinicId: ClinicId,\r\n        StartDate: startdate,\r\n        EndDate: endDate,\r\n        DoctorId: status\r\n    }\r\n\r\n    try {\r\n        const response = await axios.post(ip + 'Web_FinanceAnalysisReport', body);\r\n        return (response?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport {\r\n    Document,\r\n    Page,\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    PDFViewer\r\n} from \"@react-pdf/renderer\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        backgroundColor: \"#fff\",\r\n        color: \"black\"\r\n    },\r\n    section: {\r\n        margin: 5,\r\n        padding: 10\r\n    },\r\n    viewer: {\r\n        width: '100%', //the pdf viewer will take up all of the width and height\r\n        height: window.innerHeight\r\n    }\r\n});\r\n\r\n// Create Document Component\r\nconst Doctor_Pdf_Viewer = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n\r\n            <PDFViewer style={styles.viewer}>\r\n                {/* Start of the document*/}\r\n                <Document>\r\n                    {/*render a single page*/}\r\n                    <Page size=\"A4\" style={styles.page}>\r\n                        <View style={{ flexDirection: \"row\", border: \"1px solid gray\" }}>\r\n                            <View style={styles.section}>\r\n                                <Text>ID</Text>\r\n                            </View>\r\n                            <View style={styles.section}>\r\n                                <Text>Full Name</Text>\r\n                            </View>\r\n                            <View style={styles.section}>\r\n                                <Text>Date</Text>\r\n                            </View>\r\n                            <View style={styles.section}>\r\n                                <Text>Time</Text>\r\n                            </View>\r\n                            <View style={styles.section}>\r\n                                <Text>Status</Text>\r\n                            </View>\r\n                            <View style={styles.section}>\r\n                                <Text>Channel</Text>\r\n                            </View>\r\n                            <View style={styles.section}>\r\n                                <Text>Mode</Text>\r\n                            </View>\r\n                            <View style={styles.section}>\r\n                                <Text>Payment</Text>\r\n                            </View>\r\n                        </View>\r\n                    </Page>\r\n                </Document>\r\n            </PDFViewer>\r\n        </div>\r\n    );\r\n}\r\nexport default Doctor_Pdf_Viewer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { Typography, IconButton, Grid, Paper, FormControl, Select } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Doctor_Pdf_Viewer from '../../Pdf_Viewer';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, connect, useSelector } from 'react-redux';\r\n//apis\r\nimport { GetAppointmentStatus, Appointment_Details_by_date } from '../../../Apis/payment_reports_apis/index';\r\nimport Show_pdf_data from '../../Pdf_Viewer/Modal/index';\r\n\r\nvar columns = [\r\n    {\r\n        field: 'UserId',\r\n        headerName: 'Patient ID',\r\n        width: 140,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 150,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'AppointmentDate',\r\n        headerName: 'Date',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentTime',\r\n        headerName: 'Time',\r\n        width: 120,\r\n        editable: true,\r\n    },\r\n    // {\r\n    //     field: 'AppointmentReason',\r\n    //     headerName: 'Appointment Reason',\r\n    //     width: 220,\r\n    //     editable: true,\r\n    // },\r\n    {\r\n        field: 'AppointmentStatus',\r\n        headerName: 'Status',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentChannel',\r\n        headerName: 'Channel',\r\n        width: 180,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'PaymentMode',\r\n        headerName: 'Mode',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'TotalAmount',\r\n        headerName: 'Payment',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n];\r\n\r\nvar columnsforpdf = [\r\n    {\r\n        headerName: 'Full name',\r\n    },\r\n    {\r\n        headerName: 'Date',\r\n    },\r\n    {\r\n        headerName: 'Time',\r\n    },\r\n    // {\r\n    //     field: 'AppointmentReason',\r\n    //     headerName: 'Appointment Reason',\r\n    //     width: 220,\r\n    //     editable: true,\r\n    // },\r\n    {\r\n        headerName: 'Status',\r\n    },\r\n    {\r\n        headerName: 'Channel',\r\n    },\r\n    {\r\n        headerName: 'Mode',\r\n    },\r\n    {\r\n        headerName: 'Payment',\r\n    },\r\n];\r\n\r\nconst AppointmentReports = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate()\r\n    const [value, setValue] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const [appointmentlist, setappointmentlist] = useState([]);\r\n    const [startdate, setstartdate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [doctor, setDoctor] = React.useState('');\r\n    const [status, setstatus] = useState('');\r\n    const [appStatus, setappStatus] = useState([]);\r\n    const [norecords, setnorecords] = useState('15');\r\n    const [view, setview] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch_AppointmentStatus()\r\n    }, [])\r\n\r\n    const fetch_AppointmentStatus = async () => {\r\n        try {\r\n            const request = await GetAppointmentStatus();\r\n            if (request) {\r\n                setappStatus(request)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const Show_appointmentsbydate = async (startdate, endDate, status) => {\r\n        try {\r\n            const request = await Appointment_Details_by_date(startdate, endDate, status);\r\n            if (request.success === \"200\") {\r\n                setappointmentlist(request.Report)\r\n                console.log(request.Report)\r\n            }\r\n            else {\r\n                alert(request.message);\r\n            }\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n                {/* <Grid container >\r\n                    <Grid item xs={1}>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>From</label>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <input\r\n                            id=\"fromdate\"\r\n                            type=\"date\"\r\n                            value={startdate}\r\n                            onChange={(e) => {\r\n                                setstartdate(e.target.value)\r\n                            }}\r\n                            style={\r\n                                {\r\n                                    border: '1px solid #F0F0F0',\r\n                                    height: 30,\r\n                                    fontFamily: 'Poppins',\r\n                                    paddingLeft: 15,\r\n                                    color: '#707070'\r\n                                }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>To</label>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <input\r\n                            id=\"fromdate\"\r\n                            type=\"date\"\r\n                            value={startdate}\r\n                            onChange={(e) => {\r\n                                setstartdate(e.target.value)\r\n                            }}\r\n                            style={\r\n                                {\r\n                                    border: '1px solid #F0F0F0',\r\n                                    height: 30,\r\n                                    fontFamily: 'Poppins',\r\n                                    paddingLeft: 15,\r\n                                    color: '#707070'\r\n                                }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>Appointment Status</label>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <input\r\n                            id=\"fromdate\"\r\n                            type=\"date\"\r\n                            value={startdate}\r\n                            onChange={(e) => {\r\n                                setstartdate(e.target.value)\r\n                            }}\r\n                            style={\r\n                                {\r\n                                    border: '1px solid #F0F0F0',\r\n                                    height: 30,\r\n                                    fontFamily: 'Poppins',\r\n                                    paddingLeft: 15,\r\n                                    color: '#707070'\r\n                                }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid> */}\r\n                <div className='row' style={{ display: 'flex' }}>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>From</label>\r\n                        <input\r\n                            id=\"fromdate\"\r\n                            type=\"date\"\r\n                            value={startdate}\r\n                            onChange={(e) => {\r\n                                setstartdate(e.target.value)\r\n                            }}\r\n                            style={\r\n                                {\r\n                                    border: '1px solid #F0F0F0',\r\n                                    height: 30,\r\n                                    fontFamily: 'Poppins',\r\n                                    paddingLeft: 15,\r\n                                    color: '#707070'\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>To</label>\r\n                        <input id=\"fromdate\" type=\"date\" value={endDate} onChange={(e) => {\r\n                            setendDate(e.target.value)\r\n                        }} style={{ border: '1px solid #F0F0F0', height: 30, fontFamily: 'Poppins', color: '#707070', paddingLeft: 15 }} />\r\n                    </div>\r\n                    <div className='col-2'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>Status</label>\r\n                        <select id=\"dropdown\" value={status} onChange={(e) => setstatus(e.target.value)} style={{ height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 15 }}>\r\n                            <option value=\"N/A\">Select</option>\r\n                            {appStatus.map(v => (<option value={v.AppointmentStatus}>{v.AppointmentStatus}</option>))}\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30\r\n                            }}\r\n                            onClick={() => Show_appointmentsbydate(startdate, endDate, status)}\r\n                        >\r\n                            Show\r\n                        </Button>\r\n                    </div>\r\n                    <div className='col-1'>\r\n                        <select id=\"dropdown\" value={norecords} onChange={(e) => setnorecords(e.target.value)} style={{ width: 80, height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 15 }}>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"15\">15</option>\r\n                            <option value=\"20\">20</option>\r\n                            <option value=\"25\">25</option>\r\n                            <option value=\"30\">30</option>\r\n                            <option value=\"35\">35</option>\r\n                            <option value=\"40\">40</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <Grid item xs={12} >\r\n                    <DataGrid\r\n                        style={{ height: 350, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', marginTop: 20 }}\r\n                        rows={appointmentlist}\r\n                        rowHeight={30}\r\n                        columns={columns}\r\n                        columnWidth={5}\r\n                        pageSize={norecords}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"#2C7FB2\"\r\n                        style={{\r\n                            backgroundColor: '#2C7FB2',\r\n                            color: '#fff',\r\n                            fontFamily: 'Poppins',\r\n                            height: 30,\r\n                            float: 'right',\r\n                            marginTop: 15,\r\n                        }}\r\n                        onClick={() => \r\n                            {\r\n                                if (appointmentlist.length==0) {\r\n                                    alert('Please find some record first')\r\n                                    return;\r\n                                }\r\n                                else{\r\n                                    setview(true)\r\n                                }\r\n                            }\r\n                        }\r\n                    >\r\n                        Download as PDF\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"#2C7FB2\"\r\n                        style={{\r\n                            backgroundColor: '#2C7FB2',\r\n                            color: '#fff',\r\n                            fontFamily: 'Poppins',\r\n                            height: 30,\r\n                            float: 'right',\r\n                            marginTop: 15, marginRight: 15\r\n                        }}\r\n                        onClick={()=>{\r\n                            setappointmentlist([]);\r\n                            setstartdate('');\r\n                            setendDate(''); \r\n                            setstatus('');\r\n                        }}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </Grid>\r\n                {view ? <Show_pdf_data show={view} data={appointmentlist} column={columnsforpdf} handleclose={()=>setview(false)} /> : null}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n    },\r\n    root2: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 70\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n\r\n    },\r\n}));\r\n\r\n\r\nexport default connect()(AppointmentReports);\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { Typography, IconButton, Grid, Paper, FormControl, Select } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Show_pdf_data from '../../Pdf_Viewer/Modal';\r\n//apis\r\nimport { GetAppointmentStatus, Home_Visitor_Details_by_date } from '../../../Apis/payment_reports_apis/index';\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'PFName') || ''} ${params.getValue(params.id, 'PLName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'DoctorfullName',\r\n        headerName: 'Home Visitor',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'DFName') || ''} ${params.getValue(params.id, 'DLName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'AppointmentDate',\r\n        headerName: 'Date',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentStatus',\r\n        headerName: 'Status',\r\n        width: 160,\r\n    },\r\n    {\r\n        field: 'PaymentMode',\r\n        headerName: 'Payment Mode',\r\n        width: 180,\r\n    },\r\n];\r\n\r\nconst Home_Visitor_reports = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [value, setValue] = useState(0);\r\n    const [appointmen, setappointlist] = useState([]);\r\n    const [startdate, setstartdate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [doctor, setDoctor] = React.useState('');\r\n    const [status, setstatus] = useState('');\r\n    const [appStatus, setappStatus] = useState([]);\r\n    const [norecords, setnorecords] = useState('5');\r\n    const [catsKey, setCatsKey] = React.useState(0);\r\n    const [Open, setOpen] = useState(false);\r\n    useEffect(() => {\r\n        fetch_AppointmentStatus()\r\n    }, [])\r\n\r\n    const fetch_AppointmentStatus = async () => {\r\n        try {\r\n            const request = await GetAppointmentStatus();\r\n            if (request) {\r\n                setappStatus(request)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const Show_appointmentsbydate = async (startdate, endDate, status) => {\r\n        try {\r\n            const request = await Home_Visitor_Details_by_date(startdate, endDate, status);\r\n            if (request.success === \"200\") {\r\n                setappointlist(request.Report)\r\n                console.log(request)\r\n            }\r\n            else {\r\n                alert(request.message);\r\n            }\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    var columnsforpdf = [\r\n        {\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            sortable: false,\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'DoctorfullName',\r\n            headerName: 'Home Visitor',\r\n            sortable: false,\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'AppointmentDate',\r\n            headerName: 'Date',\r\n            width: 160,\r\n            editable: true,\r\n        },\r\n        {\r\n            field: 'AppointmentStatus',\r\n            headerName: 'Status',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'PaymentMode',\r\n            headerName: 'Payment Mode',\r\n            width: 180,\r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n                <div className='row' style={{ display: 'flex' }}>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>From</label>\r\n                        <input\r\n                            id=\"fromdate\"\r\n                            type=\"date\"\r\n                            value={startdate}\r\n                            onChange={(e) => {\r\n                                setstartdate(e.target.value)\r\n                            }}\r\n                            style={\r\n                                {\r\n                                    border: '1px solid #F0F0F0',\r\n                                    height: 30,\r\n                                    fontFamily: 'Poppins',\r\n                                    paddingLeft: 15,\r\n                                    color: '#707070'\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>To</label>\r\n                        <input id=\"fromdate\" type=\"date\" value={endDate} onChange={(e) => {\r\n                            setendDate(e.target.value)\r\n                        }} style={{ border: '1px solid #F0F0F0', height: 30, fontFamily: 'Poppins', color: '#707070', paddingLeft: 15 }} />\r\n                    </div>\r\n                    <div className='col-2'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>Status</label>\r\n                        <select id=\"dropdown\" value={status} onChange={(e) => setstatus(e.target.value)} style={{ height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 15 }}>\r\n                            <option value=\"N/A\">Select</option>\r\n                            {appStatus.map(v => (<option value={v.AppointmentStatus}>{v.AppointmentStatus}</option>))}\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30\r\n                            }}\r\n                            onClick={() => Show_appointmentsbydate(startdate, endDate, status)}\r\n                        >\r\n                            Show\r\n                        </Button>\r\n                    </div>\r\n                    <div className='col-1'>\r\n                        <select id=\"dropdown\" value={norecords} onChange={(e) => setnorecords(e.target.value)} style={{ width: 80, height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 15 }}>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"15\">15</option>\r\n                            <option value=\"20\">20</option>\r\n                            <option value=\"25\">25</option>\r\n                            <option value=\"30\">30</option>\r\n                            <option value=\"35\">35</option>\r\n                            <option value=\"40\">40</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <Grid item xs={12} >\r\n                    <DataGrid\r\n                        style={{ height: 350, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', marginTop: 20 }}\r\n                        rows={appointmen}\r\n                        rowHeight={30}\r\n                        columns={columns}\r\n                        columnWidth={5}\r\n                        pageSize={norecords}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Grid item xs={12} >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30,\r\n                                float: 'right',\r\n                                marginTop: 15,\r\n                            }}\r\n                            onClick={() => {\r\n                                if (appointmen.length == 0) {\r\n                                    alert('Please find some record first')\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    setOpen(true)\r\n                                }\r\n                            }}\r\n                        >\r\n                            Download as PDF\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30,\r\n                                float: 'right',\r\n                                marginTop: 15, marginRight: 15\r\n                            }}\r\n                            onClick={() => {\r\n                                setappointlist([]);\r\n                                setstartdate('');\r\n                                setendDate('');\r\n                                setstatus('');\r\n                            }}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                {Open ? <Show_pdf_data show={Open} data={appointmen} column={columnsforpdf} handleclose={() => setOpen(false)} Type=\"Home Visitor\" /> : null}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'white',\r\n    },\r\n    root2: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 70\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n\r\n    },\r\n}));\r\n\r\n\r\nexport default Home_Visitor_reports;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { Typography, IconButton, Grid, Paper, FormControl, Select } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport Show_pdf_data from '../../Pdf_Viewer/Modal';\r\n//apis\r\nimport { Staff_Analysis_Details_by_date } from '../../../Apis/payment_reports_apis/index';\r\n\r\nconst columns = [\r\n    {\r\n        field: 'DoctorfullName',\r\n        headerName: 'Staff Name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'DFName') || ''} ${params.getValue(params.id, 'DLName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'AppointmentDate',\r\n        headerName: 'Date',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    // {\r\n    //     field: 'AppointmentTime',\r\n    //     headerName: 'Time',\r\n    //     width: 160,\r\n    //     editable: true,\r\n    // },\r\n    {\r\n        field: 'AppointmentStatus',\r\n        headerName: 'Status',\r\n        width: 160,\r\n    },\r\n    {\r\n        field: 'cash',\r\n        headerName: 'Cash',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'online',\r\n        headerName: 'Online',\r\n        width: 150,\r\n    },\r\n];\r\n\r\nconst Staff_Analysis_reports = () => {\r\n    const getStaffData = 'http://13.233.217.107:8080/api/GetAllUsers';\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [value, setValue] = useState(0);\r\n    const [appointmen, setappointlist] = useState([]);\r\n    const [startdate, setstartdate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [doctor, setDoctor] = React.useState('');\r\n    const [status, setstatus] = useState('');\r\n    const [appStatus, setappStatus] = useState([]);\r\n    const [norecords, setnorecords] = useState('15');\r\n    const [catsKey, setCatsKey] = React.useState(0);\r\n    const [Open, setOpen] = useState(false)\r\n    useEffect(() => {\r\n        fetchStaffData()\r\n    }, [])\r\n\r\n\r\n    const fetchStaffData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const staffInfo = await axios.post(getStaffData, { ClinicId: clinicid });\r\n            setappStatus(staffInfo?.data?.NewUser);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const Show_appointmentsbydate = async (startdate, endDate, status) => {\r\n        try {\r\n            const request = await Staff_Analysis_Details_by_date(startdate, endDate, status);\r\n            if (request.success === \"200\") {\r\n                setappointlist(request.Report)\r\n                console.log(request)\r\n            }\r\n            else {\r\n                alert(request.message);\r\n            }\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    var columnsforpdf = [\r\n        {\r\n            field: 'DoctorfullName',\r\n            headerName: 'Staff Name',\r\n            sortable: false,\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'AppointmentDate',\r\n            headerName: 'Date',\r\n            width: 160,\r\n            editable: true,\r\n        },\r\n        {\r\n            field: 'AppointmentStatus',\r\n            headerName: 'Status',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'cash',\r\n            headerName: 'Cash',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'online',\r\n            headerName: 'Online',\r\n            width: 150,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n                <div className='row' style={{ display: 'flex' }}>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>From</label>\r\n                        <input\r\n                            id=\"fromdate\"\r\n                            type=\"date\"\r\n                            value={startdate}\r\n                            onChange={(e) => {\r\n                                setstartdate(e.target.value)\r\n                            }}\r\n                            style={\r\n                                {\r\n                                    border: '1px solid #F0F0F0',\r\n                                    height: 30,\r\n                                    fontFamily: 'Poppins',\r\n                                    paddingLeft: 15,\r\n                                    color: '#707070'\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>To</label>\r\n                        <input id=\"fromdate\" type=\"date\" value={endDate} onChange={(e) => {\r\n                            setendDate(e.target.value)\r\n                        }} style={{ border: '1px solid #F0F0F0', height: 30, fontFamily: 'Poppins', color: '#707070', paddingLeft: 15 }} />\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>Staff</label>\r\n                        <select id=\"dropdown\" value={status} onChange={(e) => setstatus(e.target.value)} style={{ height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 5 }}>\r\n                            <option value=\"N/A\">Select</option>\r\n                            {appStatus.map(v => (<option value={v.UserId}>{v.FirstName} {v.LastName}</option>))}\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30\r\n                            }}\r\n                            onClick={() => Show_appointmentsbydate(startdate, endDate, status)}\r\n                        >\r\n                            Show\r\n                        </Button>\r\n                    </div>\r\n                    <div className='col-1'>\r\n                        <select id=\"dropdown\" value={norecords} onChange={(e) => setnorecords(e.target.value)} style={{ width: 80, height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 15 }}>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"15\">15</option>\r\n                            <option value=\"20\">20</option>\r\n                            <option value=\"25\">25</option>\r\n                            <option value=\"30\">30</option>\r\n                            <option value=\"35\">35</option>\r\n                            <option value=\"40\">40</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <Grid item xs={12} >\r\n                    <DataGrid\r\n                        style={{ height: 350, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', marginTop: 20 }}\r\n                        rows={appointmen}\r\n                        rowHeight={30}\r\n                        columns={columns}\r\n                        columnWidth={5}\r\n                        pageSize={20}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Grid item xs={12} >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30,\r\n                                float: 'right',\r\n                                marginTop: 15,\r\n                            }}\r\n                            onClick={() => {\r\n                                if (appointmen.length==0) {\r\n                                    alert('Please find some record first')\r\n                                    return;\r\n                                }\r\n                                else{\r\n                                    setOpen(true)\r\n                                }\r\n                            }}\r\n                        >\r\n                            Download as PDF\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30,\r\n                                float: 'right',\r\n                                marginTop: 15, marginRight: 15\r\n                            }}\r\n                            onClick={() => {\r\n                                setappointlist([]);\r\n                                setstartdate('');\r\n                                setendDate('');\r\n                                setstatus('');\r\n                            }}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                {Open ? <Show_pdf_data show={Open} handleclose={()=>setOpen(false)} Type=\"Staff\" data={appointmen} column={columnsforpdf} /> : null}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'white',\r\n    },\r\n    root2: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 70\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n\r\n    },\r\n}));\r\n\r\n\r\nexport default Staff_Analysis_reports;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { Typography, IconButton, Grid, Paper, FormControl, Select } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Show_pdf_data from '../../Pdf_Viewer/Modal';\r\n\r\n//apis\r\nimport { Finance_Analysis_Details_by_date } from '../../../Apis/payment_reports_apis/index';\r\nimport { Doctors } from '../../../Apis/Book_Appointment/index';\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'PFName') || ''} ${params.getValue(params.id, 'PLName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'DoctorfullName',\r\n        headerName: 'Doctor',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'DFName') || ''} ${params.getValue(params.id, 'DLName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'AppointmentDate',\r\n        headerName: 'Date',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentStatus',\r\n        headerName: 'Status',\r\n        width: 160,\r\n    },\r\n    {\r\n        field: 'cash',\r\n        headerName: 'Cash',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'online',\r\n        headerName: 'Online',\r\n        width: 150,\r\n    },\r\n];\r\n\r\nconst Finance_Analysis_reports = () => {\r\n    const getStaffData = 'http://13.233.217.107:8080/api/GetAllUsers';\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [value, setValue] = useState(0);\r\n    const [appointmen, setappointlist] = useState([]);\r\n    const [startdate, setstartdate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [doctor, setDoctor] = React.useState('');\r\n    const [status, setstatus] = useState('');\r\n    const [appStatus, setappStatus] = useState([]);\r\n    const [norecords, setnorecords] = useState('15');\r\n    const [catsKey, setCatsKey] = React.useState(0);\r\n    const [cash, setcash] = useState('');\r\n    const [online, setonline] = useState('');\r\n    const [Open, setOpen] = useState(false)\r\n    useEffect(() => {\r\n        fetchdoctorsdata()\r\n    }, [])\r\n\r\n\r\n    const fetchdoctorsdata = async () => {\r\n        try {\r\n            const doctorInfo = await Doctors();\r\n            setappStatus(doctorInfo);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const Show_appointmentsbydate = async (startdate, endDate, status) => {\r\n        try {\r\n            const request = await Finance_Analysis_Details_by_date(startdate, endDate, status);\r\n            if (request.success === \"200\") {\r\n                setappointlist(request.Report)\r\n                const countTotal = (items) => items.reduce((acc, curr) => acc + parseInt(curr.online), 0);\r\n                const countTotalforcash = (items) => items.reduce((acc, curr) => acc + parseInt(curr.cash), 0);\r\n                setonline(countTotal(request.Report));\r\n                setcash(countTotalforcash(request.Report));\r\n            }\r\n            else {\r\n                alert(request.message);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    console.log(appStatus)\r\n    var columnsforpdf = [\r\n        {\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            sortable: false,\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'DoctorfullName',\r\n            headerName: 'Home Visitor',\r\n            sortable: false,\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'AppointmentDate',\r\n            headerName: 'Date',\r\n            width: 160,\r\n            editable: true,\r\n        },\r\n        {\r\n            field: 'AppointmentStatus',\r\n            headerName: 'Status',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'cash',\r\n            headerName: 'Cash',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'online',\r\n            headerName: 'Online',\r\n            width: 150,\r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n                <div className='row' style={{ display: 'flex' }}>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>From</label>\r\n                        <input\r\n                            id=\"fromdate\"\r\n                            type=\"date\"\r\n                            value={startdate}\r\n                            onChange={(e) => {\r\n                                setstartdate(e.target.value)\r\n                            }}\r\n                            style={\r\n                                {\r\n                                    border: '1px solid #F0F0F0',\r\n                                    height: 30,\r\n                                    fontFamily: 'Poppins',\r\n                                    paddingLeft: 15,\r\n                                    color: '#707070'\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>To</label>\r\n                        <input id=\"fromdate\" type=\"date\" value={endDate} onChange={(e) => {\r\n                            setendDate(e.target.value)\r\n                        }} style={{ border: '1px solid #F0F0F0', height: 30, fontFamily: 'Poppins', color: '#707070', paddingLeft: 15 }} />\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>Doctor</label>\r\n                        <select id=\"dropdown\" value={status} onChange={(e) => setstatus(e.target.value)} style={{ height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 5 }}>\r\n                            <option value=\"N/A\">Select</option>\r\n                            {appStatus.map(v => (<option value={v.DoctorId}>{v.FirstName} {v.LastName}</option>))}\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30\r\n                            }}\r\n                            onClick={() => Show_appointmentsbydate(startdate, endDate, status)}\r\n                        >\r\n                            Show\r\n                        </Button>\r\n                    </div>\r\n                    <div className='col-1'>\r\n                        <select id=\"dropdown\" value={norecords} onChange={(e) => setnorecords(e.target.value)} style={{ width: 80, height: 30, border: '1px solid #F0F0F0', fontFamily: 'Poppins', paddingLeft: 15 }}>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"15\">15</option>\r\n                            <option value=\"20\">20</option>\r\n                            <option value=\"25\">25</option>\r\n                            <option value=\"30\">30</option>\r\n                            <option value=\"35\">35</option>\r\n                            <option value=\"40\">40</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <Grid item xs={12} >\r\n                    <DataGrid\r\n                        style={{ height: 350, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', marginTop: 20 }}\r\n                        rows={appointmen}\r\n                        rowHeight={30}\r\n                        columns={columns}\r\n                        columnWidth={5}\r\n                        pageSize={20}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070' }}>Total</label>\r\n                    <label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070', paddingLeft: 710 }}><label style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#707070', paddingRight: 150 }}>{cash ? cash : '0'}</label>{online ? online : '0'}</label>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Grid item xs={12} >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30,\r\n                                float: 'right',\r\n                                marginTop: 15,\r\n                            }}\r\n                            onClick={() => {\r\n                                if (appointmen.length==0) {\r\n                                    alert('Please find some record first')\r\n                                    return;\r\n                                }\r\n                                else{\r\n                                    setOpen(true)\r\n                                }\r\n                            }}\r\n                        >\r\n                            Download as PDF\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"#2C7FB2\"\r\n                            onClick={()=>{\r\n                                setstartdate('');\r\n                                setendDate('');\r\n                                setstatus('');\r\n                                setappointlist([]);\r\n                            }}\r\n                            style={{\r\n                                backgroundColor: '#2C7FB2',\r\n                                color: '#fff',\r\n                                fontFamily: 'Poppins',\r\n                                height: 30,\r\n                                float: 'right',\r\n                                marginTop: 15, \r\n                                marginRight: 15\r\n                            }}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                {Open ? <Show_pdf_data show={Open} data={appointmen} column={columnsforpdf} handleclose={() => setOpen(false)} Type=\"Finance\" /> : null}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'white',\r\n    },\r\n    root2: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 70\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n\r\n    },\r\n}));\r\n\r\n\r\nexport default Finance_Analysis_reports;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Typography, Button, IconButton, Grid, Paper } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//components\r\nimport AppointmentReports from './Payment_Reports/Appointment_Reports/index';\r\nimport Home_Visitor_reports from './Payment_Reports/Home_visitor_Reports/index';\r\nimport Staff_Analysis_reports from './Payment_Reports/Staff_Reports/index';\r\nimport Finance_Analysis_reports from './Payment_Reports/Finance_Reports/index';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst PaymentReports = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n    const [catsKey, setCatsKey] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n                <DoctorNavbar />\r\n                <div className={classes.root2}>\r\n                    <AppBar position=\"static\" color=\"default\">\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                            aria-label=\"scrollable auto tabs example\"\r\n                            TabIndicatorProps={{\r\n                                style: {\r\n                                    backgroundColor: \"#78B088\"\r\n                                }\r\n                            }}\r\n                            style={{\r\n                                backgroundColor: 'white',\r\n                            }}\r\n                        >\r\n                            <Tab label=\"Appointment Report\" {...a11yProps(0)} />\r\n                            <Tab label=\"Home Visitor Report\" {...a11yProps(1)} />\r\n                            <Tab label=\"Finance Report\" {...a11yProps(2)} />\r\n                            <Tab label=\"Patient Visit Report\" {...a11yProps(3)} />\r\n                            <Tab label=\"Staff Report\" {...a11yProps(4)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <AppointmentReports />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <Home_Visitor_reports />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2}>\r\n                        <Finance_Analysis_reports />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={3}>\r\n                        Item Four\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={4}>\r\n                       <Staff_Analysis_reports />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 0.5,\r\n        backgroundColor: 'white',\r\n    },\r\n    root2: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        marginTop: 70\r\n    },\r\n}));\r\n\r\n\r\nexport default PaymentReports\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {Cancel_Appointment_for_Calender} from '../../../Apis/Dashboard/Cancel_Appointment/index';\r\n\r\nconst Cancel_Appointment = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n    console.log(data)\r\n    const Delete_Api = async (id) => {\r\n        try{\r\n        const request = await Cancel_Appointment_for_Calender(id);\r\n        let response=JSON.parse(request);\r\n        if(response.success=='200'){\r\n            alert(response.message);\r\n            handleclose();\r\n            window.location.reload();\r\n        }\r\n        else{\r\n            alert(request);\r\n        }\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to cancel this appointment?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data.id)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Cancel_Appointment\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, FormControl, Select, DialogTitle, DialogContentText, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { Time, Note_for_Doctor, Edit_App_for_Dashboard } from '../../../Apis/Dashboard/Edit_Appointment_From_PatientIn/index';\r\nimport Cancel_Appointment from './Alert';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const Show_Appointment_details = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [time, settime] = useState([]);\r\n    const [doctorsNote, setdoctorsNote] = useState([]);\r\n    const [reason, setReason] = useState(data.items.AppointmentReason ? data.items.AppointmentReason : '');\r\n    const [notefordoctor, setnotefordoctor] = useState(data.items.ShortNote ? data.items.ShortNote : '');\r\n    const [bp, setBp] = useState(data.items.Patient_BP ? data.items.Patient_BP : '');\r\n    const [temp, setTemp] = useState(data.items.Patient_Temp ? data.items.Patient_Temp : '');\r\n    const [height, setHeight] = useState(data.items.Patient_Height ? data.items.Patient_Height : '');\r\n    const [weight, setWeight] = useState(data.items.Patient_Weight ? data.items.Patient_Weight : '');\r\n    const [plus, setPlus] = useState(data.items.Patient_Plus ? data.items.Patient_Plus : '');\r\n    const [spo2, setSpo2] = useState(data.items.Patient_SPO2 ? data.items.Patient_SPO2 : '');\r\n    const [appDate, setappDate] = useState(data.items.AppointmentDate ? data.items.AppointmentDate : '');\r\n    const [appTime, setappTime] = useState(data.items.AppointmentTime ? data.items.AppointmentTime : '');\r\n    const [OpenModal, setOpenModal] = useState(false)\r\n\r\n    console.log(data)\r\n    useEffect(() => {\r\n        fetchtimings();\r\n        fetchNotefordoctor();\r\n    }, [])\r\n\r\n    const fetchtimings = async () => {\r\n        const timingInfo = await Time()\r\n        settime(timingInfo);\r\n    }\r\n\r\n    const fetchNotefordoctor = async () => {\r\n        const doctorsNoteInfo = await Note_for_Doctor()\r\n        setdoctorsNote(doctorsNoteInfo);\r\n    }\r\n    var datedata = new Date();\r\n    var tdate = datedata.toISOString().split('T')[0];\r\n\r\n    const EditAppointmentDetails = async () => {\r\n        const currentTime = new Date();\r\n        let systemTime = currentTime.toTimeString();\r\n        let tdate = currentTime.toISOString().split('T')[0];\r\n        if (appTime < systemTime) {\r\n            alert(`You can't not set Appointment at ${appTime}`);\r\n            return\r\n        }\r\n        else if (appDate < tdate) {\r\n            alert(`You cannot set appointment for ${appDate}`);\r\n            return\r\n        }\r\n        const obj = {\r\n            AppointmentStatus: 'Patient In',\r\n            AppointmentTime: appTime,\r\n            AppointmentDate: appDate,\r\n            Patient_BP: bp,\r\n            Patient_Weight: weight,\r\n            Patient_Height: height,\r\n            Patient_SPO2: spo2,\r\n            Patient_Plus: plus,\r\n            Patient_Temp: temp,\r\n            ShortNote: notefordoctor,\r\n            AppointmentReason: reason,\r\n            id: data.items.id\r\n        }\r\n        const editrequest = await Edit_App_for_Dashboard(obj);\r\n        let parse = JSON.parse(editrequest);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            handlemodal();\r\n            window.location.reload()\r\n        }\r\n        else {\r\n            alert(parse.message);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                // BackdropProps={{ invisible: true }}\r\n                // PaperProps={{\r\n                //     style: {\r\n                //       backgroundColor: 'transparent',\r\n                //       boxShadow: 'none',\r\n                //     },\r\n                //   }}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Appointment Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        {data.items.FirstName} {data.items.LastName}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        PID:- {data.items.UserId}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Time\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Date\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        {appTime ? appTime : 'NA'}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        {appDate ? appDate : 'NA'}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} style={{ marginTop: 10 }}>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#2C7FB2',\r\n                                            fontSize: 18,\r\n                                        }}>\r\n                                        Vital Information\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 10 }}>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <Typography variant=\"h5\" noWrap={true}\r\n                                            style={{\r\n                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 500,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                fontSize: 18,\r\n                                            }}>\r\n                                            BP: {bp ? bp : 'NA'}\r\n                                        </Typography>\r\n                                    </center>\r\n                                    {/* <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"BP\"\r\n                                        value={bp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setBp(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                        style={{ marginRight: 10 }}\r\n                                    /> */}\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <center>\r\n                                        <Typography variant=\"h5\" noWrap={true}\r\n                                            style={{\r\n                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 500,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                fontSize: 18,\r\n                                            }}>\r\n                                            temp: {temp ? temp : 'NA'}\r\n                                        </Typography>\r\n                                    </center>\r\n                                    {/* <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Temp\"\r\n                                        value={temp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setTemp(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                        style={{ marginRight: 10 }}\r\n                                    /> */}\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <Typography variant=\"h5\" noWrap={true}\r\n                                            style={{\r\n                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 500,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                fontSize: 18,\r\n                                            }}>\r\n                                            Height: {height ? height : 'NA'}\r\n                                        </Typography>\r\n                                    </center>\r\n                                    {/* <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Height\"\r\n                                        value={height}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setHeight(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                    /> */}\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 15 }}>\r\n                                <Grid item xs={4} >\r\n                                    <center>\r\n                                        <Typography variant=\"h5\" noWrap={true}\r\n                                            style={{\r\n                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 500,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                fontSize: 18,\r\n                                            }}>\r\n                                            Weight: {weight ? weight : 'NA'}\r\n                                        </Typography>\r\n                                    </center>\r\n                                    {/* <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Weight\"\r\n                                        value={weight}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setWeight(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                        style={{ marginRight: 10 }}\r\n                                    /> */}\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <Typography variant=\"h5\" noWrap={true}\r\n                                            style={{\r\n                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 500,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                fontSize: 18,\r\n                                            }}>\r\n                                            SPO2: {spo2 ? spo2 : 'NA'}\r\n                                        </Typography>\r\n                                    </center>\r\n                                    {/* <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"SPO2\"\r\n                                        value={spo2}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setSpo2(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                        style={{ marginRight: 10 }}\r\n                                    /> */}\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <center>\r\n                                        <Typography variant=\"h5\" noWrap={true}\r\n                                            style={{\r\n                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 500,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                fontSize: 18,\r\n                                            }}>\r\n                                            Pulse Rate: {plus ? plus : 'NA'}\r\n                                        </Typography>\r\n                                    </center>\r\n                                    {/* <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Pulse Rate\"\r\n                                        value={plus}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setPlus(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                    /> */}\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 17 }}>\r\n                                <Typography variant=\"h5\" noWrap={true}\r\n                                    style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 500,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#707070',\r\n                                        fontSize: 18,\r\n                                    }}>\r\n                                    Reason : {reason ? reason : 'NA'}\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" noWrap={true}\r\n                                    style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 500,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#707070',\r\n                                        fontSize: 18,\r\n                                        marginTop: 20\r\n                                    }}>\r\n                                    Note For Doctor : {notefordoctor ? notefordoctor : 'NA'}\r\n                                </Typography>\r\n                                {/* <TextField className={classes.inputFields} size='small' value={reason} onChange={(e) => setReason(e.target.value)} id=\"outlined-basic\" label=\"Reason\" variant=\"outlined\" /> */}\r\n                            </Grid>\r\n                            {OpenModal ? <Cancel_Appointment show={OpenModal} data={data.items} handleclose={() => setOpenModal(false)} /> : null}\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 12 }}>\r\n                                {/* <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                    <Select\r\n                                        className={classes.textField}\r\n                                        native\r\n                                        value={notefordoctor}\r\n                                        onChange={(e) => setnotefordoctor(e.target.value)}\r\n                                        label=\"time\"\r\n                                        inputProps={{\r\n                                            name: 'time',\r\n                                            id: 'outlined-appointment-native-simple',\r\n                                        }}\r\n\r\n                                        style={{ width: '150%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" >Note For Doctor</option>\r\n                                        {doctorsNote.map(v => (<option value={v.NoteForDoctor}>{v.NoteForDoctor}</option>))}\r\n                                    </Select>\r\n                                </FormControl> */}\r\n                            </Grid>\r\n\r\n                            {data.items.AppointmentDate > tdate ?\r\n                                <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                    <Grid item sm={12} >\r\n                                        <Button className={classes.btnregister} onClick={() => setOpenModal(true)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid> : null}\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, IconButton, Grid, Paper, FormControl, Select } from \"@material-ui/core\";\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { GetMorningSlots, GetEveningSlots, Todays_Appointment, Todays_Appointment_By_Date } from '../../Apis/Todays_Appointments/index';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Edit_Appointment_From_TodaysApp } from '../Todays_Appointments/Slots/Edit_Appointment/index';\r\nimport Delete_Appointment from '../Todays_Appointments/Slots/Delete_Appointment/index';\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport axios from 'axios';\r\nimport { BookedAppointments } from '../../Apis/PatientInQueue';\r\nimport ip from '../../ipaddress/ip';\r\nimport { Show_Appointment_details } from './Show_Appointment_Details/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    // {\r\n    //     field: 'MobileNo',\r\n    //     headerName: 'Contact No',\r\n    //     width: 160,\r\n    //     editable: true,\r\n    // },\r\n    {\r\n        field: 'AppointmentReason',\r\n        headerName: 'Appointment Reason',\r\n        width: 220,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentDate',\r\n        headerName: 'Date',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentTime',\r\n        headerName: 'Time',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentType',\r\n        headerName: 'Type',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentChannel',\r\n        headerName: 'Channel',\r\n        width: 180,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentTime',\r\n        headerName: 'Time',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: \"Action\",\r\n        width: 130,\r\n        sortable: false,\r\n\r\n        RenderCell: (params) => {\r\n            const onClickDelete = async () => {\r\n                return alert(\"Are you Sure!! Do you want to delete medicine\");\r\n            };\r\n            const onClickEdit = async () => {\r\n                return alert(JSON.stringify(params.row, null, 4));\r\n            };\r\n            const [openeditmodal, setopeneditmodal] = useState(false);\r\n            const [opendeletemodal, setOpenDeletemodal] = useState(false);\r\n\r\n            return (\r\n                <>\r\n                    {openeditmodal ? <Edit_Appointment_From_TodaysApp show={openeditmodal} data={params.row} handlemodal={() => setopeneditmodal(false)} /> : null}\r\n                    <IconButton onClick={() => setopeneditmodal(true)} style={{ color: '#2C7FB2' }}>\r\n                        <EditIcon />\r\n                    </IconButton>\r\n                    {opendeletemodal ? <Delete_Appointment show={opendeletemodal} data={params.row.id} handleclose={() => setOpenDeletemodal(false)} /> : null}\r\n                    <IconButton color=\"secondary\" onClick={() => setOpenDeletemodal(true)} style={{ color: '#ef5350' }}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n\r\n                </>\r\n            );\r\n        }\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 220,\r\n\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        // padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        height: 40\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 100,\r\n        marginLeft: 20,\r\n        alignSelf: 'center'\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 400,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 120,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 20\r\n    },\r\n    btn: {\r\n        color: '#78B088',\r\n        backgroundColor: '#ffffff',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n\r\n\r\n    }\r\n\r\n}));\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport default function Appointments_On_Calender() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [times, settimes] = useState([]);\r\n    const [eveningtimes, seteveningtimes] = useState([]);\r\n    const [appointmentlist, setappointmentlist] = useState([]);\r\n    const [startdate, setstartdate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [SelectedMonths, setSelectedMonths] = useState('');\r\n    const [SelectedYear, setSelectedYear] = useState('');\r\n    const [morningcount, setmorningcount] = useState([]);\r\n    const [eveningcount, seteveningcount] = useState([]);\r\n    const [allYears, setallYears] = useState([]);\r\n    const [apoointmentdetails, setapoointmentdetails] = useState([]);\r\n    const [dayscount, setdayscount] = useState([]);\r\n    const [openmodal, setopenmodal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchMorningCount();\r\n        fetchEveningCount();\r\n        fetchAppointments();\r\n\r\n    }, []);\r\n\r\n    const now = new Date();\r\n    const events = appointmentlist.map((items) => {\r\n        return {\r\n            id: items.id,\r\n            title: items.Title,\r\n            allDay: true,\r\n            startDate: items.AppointmentDate + ' ' + items.AppointmentTime,\r\n            endDate: items.AppointmentDate + ' ' + items.AppointmentTime,\r\n            data: { items }\r\n            //description: \"sdsdsdsdsdsdsdsd\"\r\n        }\r\n    })\r\n\r\n    const fetchAppointments = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let UserId = parsed.userid;\r\n        let ClinicId = parsed.ClinicId;\r\n        try {\r\n            const request = await axios.post(ip + 'Web_GetMonthlyAppoints', {\r\n                DoctorId: UserId,\r\n                ClinicId: ClinicId\r\n            })\r\n            setappointmentlist(request?.data?.Appointment)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const fetchMorningCount = async () => {\r\n        const count = await GetMorningSlots();\r\n        setmorningcount(count);\r\n    }\r\n\r\n    const fetchEveningCount = async () => {\r\n        const count = await GetEveningSlots();\r\n        seteveningcount(count);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const Appointmentbydate = async (startdate, endDate) => {\r\n        var data = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let Clinicid = parsed.ClinicId;\r\n        try {\r\n            let request = await Todays_Appointment_By_Date(Clinicid, startdate, endDate)\r\n            setappointmentlist(request)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    var months = [{ month: \"January\", InNum: \"01\" }, { month: \"February\", InNum: \"02\" }, { month: \"March\", InNum: \"03\" }, { month: \"April\", InNum: \"04\" }, { month: \"May\", InNum: \"05\" }, { month: \"June\", InNum: \"06\" }, { month: \"July\", InNum: \"07\" }, { month: \"August\", InNum: '08' }, { month: \"September\", InNum: '09' }, { month: \"October\", InNum: '10' }, { month: \"November\", InNum: '11' }, { month: \"December\", InNum: '12' }];\r\n\r\n    const year = (new Date()).getFullYear();\r\n    const years = Array.from(new Array(50), (val, index) => year - index);\r\n\r\n    const days = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15']\r\n\r\n    const showbyDate = async (SelectedMonths, SelectedYear) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let UserId = parsed.userid;\r\n        let ClinicId = parsed.ClinicId;\r\n        try {\r\n            const request = await axios.post(ip + 'Web_GetMonthlyAppointCount', {\r\n                Month: SelectedMonths,\r\n                Year: SelectedYear,\r\n                DoctorId: UserId,\r\n                ClinicId: ClinicId\r\n            })\r\n            setdayscount(request?.data?.Appointment)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const showappointmentbyfulldate = async (SelectedMonths, SelectedYear, day) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let UserId = parsed.userid;\r\n        let ClinicId = parsed.ClinicId;\r\n\r\n        console.log(day);\r\n        console.log(SelectedMonths);\r\n        console.log(SelectedYear + '/' + SelectedMonths + '/' + day)\r\n        try {\r\n            const request = await axios.post(ip + 'Web_GetMonthlyAppointByDate', {\r\n                DoctorId: UserId,\r\n                ClinicId: ClinicId,\r\n                AppointmentDate: SelectedYear + '-' + SelectedMonths + '-' + day\r\n            })\r\n            setappointmentlist(request?.data?.Appointment)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const CURRENT_DATE = moment().toDate();\r\n\r\n    // example implementation of a wrapper\r\n    const ColoredDateCellWrapper = ({ children, value }) =>\r\n        React.cloneElement(Children.only(children), {\r\n            style: {\r\n                ...children.style,\r\n                backgroundColor: value < CURRENT_DATE ? 'lightgreen' : 'lightblue',\r\n            },\r\n        });\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff', flexDirection: 'column' }}>\r\n            {/* <div style={{ height: \"400pt\" }}>\r\n                <Calendar\r\n                    events={events}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    defaultDate={moment().toDate()}\r\n                    localizer={localizer}\r\n                    views={['month', 'week', 'day']}\r\n                />\r\n            </div> */}\r\n            {/* main grid */}\r\n            {/* <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} style={{ paddingTop: 15 }}>\r\n                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                        <Select\r\n                            className={classes.textField}\r\n                            native\r\n                            value={SelectedMonths}\r\n                            onChange={(e) => setSelectedMonths(e.target.value)}\r\n                            label=\"doctor\"\r\n                            inputProps={{\r\n                                name: 'months',\r\n                                id: 'outlined-doctor-native-simple',\r\n                            }}\r\n                            style={{ width: '100%', position: 'relative', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                        >\r\n                            <option aria-label=\"None\" value=\"\" >Select Month</option>\r\n                            {months.map(v => (<option value={v.InNum}>{v.month}</option>))}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                        <Select\r\n                            className={classes.textField}\r\n                            native\r\n                            value={SelectedYear}\r\n                            onChange={(e) => setSelectedYear(e.target.value)}\r\n                            label=\"doctor\"\r\n                            inputProps={{\r\n                                name: 'months',\r\n                                id: 'outlined-doctor-native-simple',\r\n                            }}\r\n                            style={{ width: '100%', position: 'relative', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                        >\r\n                            <option aria-label=\"None\" value=\"\" >Select Year</option>\r\n                            {years.map(v => (<option value={v}>{v}</option>))}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Button className={classes.btnview} onClick={() => showbyDate(SelectedMonths, SelectedYear)}>View</Button>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        Morning Slots\r\n                    </Typography>\r\n\r\n                    {days.map((item) => {\r\n                        return (<>\r\n                            <IconButton size='small'  >\r\n                                <div className='row'>\r\n                                    {dayscount.map((items) => {\r\n                                        return (\r\n                                            <>\r\n                                                {item == items.Days ?\r\n                                                    items.Count > 0 ?\r\n                                                        <div style={{ color: '#2C7FB2' }} >\r\n                                                            {items.Count}\r\n                                                        </div> :\r\n                                                        '0'\r\n                                                    : null\r\n                                                }\r\n                                            </>\r\n                                        );\r\n                                    })}\r\n                                    <div>\r\n                                        <Button variant=\"contained\" onClick={() => showappointmentbyfulldate(SelectedMonths, SelectedYear, item)} className={classes.btn} style={{ marginTop: '-8px' }}>\r\n                                            {item}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </IconButton>\r\n                        </>);\r\n                    })}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} >\r\n\r\n                    <DataGrid\r\n                        style={{ height: 300, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}\r\n                        rows={appointmentlist}\r\n                        rowHeight={30}\r\n                        columns={columns}\r\n                        columnWidth={5}\r\n                        pageSize={10}\r\n\r\n                    />\r\n\r\n                </Grid>\r\n            </Grid> */}\r\n            <div style={{ height: \"500pt\" }}>\r\n                <Calendar\r\n                    events={events}\r\n                    startAccessor=\"startDate\"\r\n                    endAccessor=\"endDate\"\r\n                    defaultDate={moment().toDate()}\r\n                    localizer={localizer}\r\n                    dateFormat=\"h t\"\r\n                    components={{\r\n                        month: {\r\n                          dateHeader: ({ date, label }) => {\r\n                            let highlightDate =\r\n                              events.find(event =>\r\n                                moment(date).isBetween(\r\n                                  moment(event.startDate),\r\n                                  moment(event.endDate),\r\n                                  null,\r\n                                  \"[]\"\r\n                                )\r\n                              ) != undefined;\r\n                            return (\r\n                              <h1 style={highlightDate ? { color: \"red\" } : null}>{label}</h1>\r\n                            );\r\n                          }\r\n                        }\r\n                      }}\r\n                    min={new Date(2008, 0, 1, 8, 0)} // 8.00 AM\r\n                    max={new Date(2008, 0, 1, 17, 0)}\r\n                    onSelectEvent={(val) => {\r\n                        setapoointmentdetails(val.data);\r\n                        setopenmodal(true);\r\n                        console.log(val)\r\n                    }}\r\n                    views={['month', 'week', 'day']}\r\n                />\r\n                {openmodal ? <Show_Appointment_details show={openmodal} data={apoointmentdetails} handlemodal={() => setopenmodal(false)} /> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Typography, Button, IconButton, Grid, Paper } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//components\r\nimport DoctorTodaysAppointment from './Doctor_TodaysAppointment';\r\nimport Appointments_On_Calender from './Calender/index';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst Todays_appointment_Tabs = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n    const [catsKey, setCatsKey] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n                <DoctorNavbar />\r\n                <div className={classes.root2}>\r\n                    <AppBar position=\"static\" color=\"default\">\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                            aria-label=\"scrollable auto tabs example\"\r\n                            TabIndicatorProps={{\r\n                                style: {\r\n                                    backgroundColor: \"#78B088\"\r\n                                }\r\n                            }}\r\n                            style={{\r\n                                backgroundColor: 'white',\r\n                            }}\r\n                        >\r\n                            <Tab label=\"Todays Appointment\" {...a11yProps(0)} />\r\n                            <Tab label=\"Calender\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <DoctorTodaysAppointment />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <Appointments_On_Calender />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 0.5,\r\n        backgroundColor: 'white',\r\n    },\r\n    root2: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        marginTop: 70\r\n    },\r\n}));\r\n\r\n\r\nexport default Todays_appointment_Tabs\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AppBar, Toolbar, CssBaseline, Typography, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Avatar } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Footer from './Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ip from '../ipaddress/ip';\r\nimport axios from 'axios';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        color: '#2C7FB2'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#2C7FB2',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        color: '#fff'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    clinicname: {\r\n        // flexGrow: 1,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(0),\r\n        },\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    drname: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        padding: theme.spacing(1),\r\n        flex: 0.2,\r\n        alignSelf: 'right',\r\n        textAlign: 'right',\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n\r\n    services: {\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    },\r\n    report: {\r\n        justifyContent: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    }\r\n}));\r\n\r\n\r\nexport default function AdminNavbar() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open1 = Boolean(anchorEl);\r\n    const [anchorElProfile, setAnchorElProfile] = React.useState(false);\r\n    const [fname, setfname] = React.useState('');\r\n    const [lname, setlname] = React.useState('');\r\n    const [userid, setuserid] = React.useState('');\r\n    const [authProfile, setAuthProfile] = React.useState(true);\r\n\r\n    // const openprofile = Boolean(anchorElProfile);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const fetchAdminProfile = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let userid = parsed.UserProfile.UserId;\r\n        let fname = parsed.UserProfile.FirstName;\r\n        let lname = parsed.UserProfile.LastName;\r\n        setfname(fname);\r\n        setlname(lname);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAdminProfile();\r\n    }, [])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAuthProfile(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElProfile(true);\r\n        // navigate(\"/DoctorProfile\");\r\n    };\r\n\r\n    const handlelogout = () => {\r\n        setAnchorElProfile(true);\r\n        localStorage.removeItem('userdata');\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'Home',\r\n            icon: HomeIcon,\r\n            onClick: () => navigate(\"/AdminAddClinic\"),\r\n        },\r\n        {\r\n            text: 'Dashboard',\r\n            icon: DashboardIcon,\r\n            onClick: () => navigate(\"/AdminClinicDoctors\"),\r\n        },\r\n        // {\r\n        //   text: \"Appointments On TV\",\r\n        //   icon: TvIcon,\r\n        //   onClick : () => window.open('/Doctor_TV_TodaysAppointments', '_blank'),\r\n        // },\r\n        // {\r\n        //   text: 'Book Appointment',\r\n        //   icon: AssignmentTurnedInIcon,\r\n        //   onClick: () => navigate(\"/DoctorBookAppointment\"),\r\n        // },\r\n        // {\r\n        //   text: 'Clinic Patients',\r\n        //   icon: PeopleOutlineIcon,\r\n        //   onClick: () => navigate(\"/DoctorClinicPatients\"),\r\n        // },\r\n        // {\r\n        //   text: \"Upload Reports\",\r\n        //   icon: AssignmentIcon,\r\n        //   onClick: () => navigate(\"/DoctorReports\"),\r\n        // },\r\n        // {\r\n        //   text: 'Home Visitor Requests',\r\n        //   icon: ChatIcon,\r\n        //   onClick: () => navigate('/DoctorHomeVisitRequest'),\r\n        // },\r\n        // {\r\n        //   text: 'Clinic Staff',\r\n        //   icon: SupervisorAccountIcon,\r\n        //   onClick: () => navigate('/DoctorClinicStaff'),\r\n        // },\r\n        // {\r\n        //   text: \"Home Visitors\",\r\n        //   icon: DirectionsWalkIcon,\r\n        //   onClick: () => navigate(\"/DoctorHomeVisitors\"),\r\n        // },\r\n        // {\r\n        //   text: \"Medicines\",\r\n        //   icon: LocalHospitalIcon,\r\n        //   onClick: () => navigate(\"/DoctorAddMedicine\"),\r\n        // },\r\n        // {\r\n        //   text: \"Clinic Services\",\r\n        //   icon: SettingsIcon,\r\n        //   onClick: () => navigate(\"/DoctorClinicServices\"),\r\n        // },\r\n\r\n    ];\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: 'white' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open1}\r\n                        onClose={handleClose}\r\n                    >\r\n\r\n                    </Menu>\r\n                    <div>\r\n                        <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n                    </div>\r\n                    <div className={classes.clinicname}>\r\n                        {/* <Typography variant=\"h5\" noWrap={true} style={{ color:'#2C7FB2' }}>\r\n              {doctordata.ClinicName}\r\n            </Typography> */}\r\n                    </div>\r\n                    <div className={classes.drname}>\r\n                        <Typography variant=\"h8\" noWrap={true} style={{ color: '#2C7FB2' }}   >\r\n                            {fname} {lname}\r\n                        </Typography>\r\n                    </div>\r\n                    {auth && (\r\n                        <div className={classes.profile}>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"primary\"\r\n\r\n                            >\r\n\r\n                                <Avatar style={{ borderRadius: 50, height: 40, width: 40 }} />\r\n                                {/* <AccountCircle style={{ height: 35, width: 35 }} /> */}\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElProfile}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={anchorElProfile}\r\n                                onClick={() => setAnchorElProfile(false)}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n                    <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n                        <ListItem button key={text} onClick={onClick}>\r\n                            <ListItemIcon style={{ color: '#fff' }}>\r\n                                <Icon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n\r\n            </Drawer>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nexport const Add_Clinic = async (formData) => {\r\n    try {\r\n        const clinic = await axios.post(ip + 'AddClinic', formData, { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n        return JSON.stringify(clinic?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const Sign_Up_Clinic = async (formData) => {\r\n    try {\r\n        const clinic = await axios.post(ip + 'Web_SignUp', formData, { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n        return JSON.stringify(clinic?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}\r\n\r\nexport const Doctor_Category = async () => {\r\n    const category = await axios.post(ip + 'GetDoctorsCategory');\r\n    return category?.data?.DoctorsCategory;\r\n}\r\n\r\nexport const Times = async () => {\r\n    const times = await axios.post(ip + 'GetSlots');\r\n    return times?.data?.Slots;\r\n}\r\n\r\n\r\n\r\nexport const Payment_Packages = async () => {\r\n    try {\r\n        const packages = await axios.post(ip + 'GetPaymentPackages');\r\n        return packages?.data?.Package;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, Typography, List, ListItem, ListItemText, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Payment_Packages, Sign_Up_Clinic } from '../../Admin_Apis/Add_Clinic/index';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\nconst loadscript = (src) => {\r\n    return new Promise(resolve => {\r\n        const script = document.createElement(\"script\");\r\n        script.src = src;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => {\r\n            resolve(false)\r\n        }\r\n        document.body.appendChild(script);\r\n    })\r\n};\r\n\r\nconst _DEV_ = document.domain === 'localhost'\r\n\r\n\r\nconst PaymentPackages = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    console.log(data)\r\n\r\n    const [packages, setpackages] = useState([]);\r\n    const [amount, setamount] = React.useState('');\r\n\r\n    const displayRazorpay = async (amt) => {\r\n        const src = await loadscript(\"https://checkout.razorpay.com/v1/checkout.js\")\r\n\r\n        if (!src) {\r\n            alert('Razorpay SDK failed to load')\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const datas = await axios.post(ip + 'RazoprPay', { amount: amt.Package })\r\n            console.log(datas?.data?.order)\r\n            setamount(datas?.data?.order)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n        let amtvalue = amt.Package + '00';\r\n        const options = {\r\n            \"key\": _DEV_ ? 'rzp_test_pysA4xvflQ8uDz' : 'PRODUCT_KEY',\r\n            \"amount\": amtvalue, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n            \"name\": \"Health97\",\r\n            \"currency\": amount.currency,\r\n            \"description\": \"Test Transaction\",\r\n            \"order_id\": amount.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n            \"handler\": function (response) {\r\n                alert(response.razorpay_payment_id);\r\n                // alert(response.razorpay_order_id);\r\n                // alert(response.razorpay_signature)\r\n                AddClinic(amt);\r\n            },\r\n            \"prefill\": {\r\n                \"name\": data.FirstName + data.LastName,\r\n                \"email\": data.Email,\r\n                \"contact\": data.MobileNo\r\n            },\r\n        };\r\n        var rzp1 = new window.Razorpay(options);\r\n        rzp1.open();\r\n    }\r\n\r\n\r\n\r\n    const AddClinic = async (amt) => {\r\n\r\n        var now = new Date();\r\n        var date = now.toISOString().split('T')[0];\r\n\r\n        var afterDate = new Date(new Date().setDate(now.getDate() + parseInt(amt.DurationCode)));\r\n        var endDt = afterDate.toISOString().split('T')[0];\r\n\r\n        var formData = new FormData();\r\n        formData.append('file', data.file);\r\n        formData.append('ClinicName', data.ClinicName);\r\n        formData.append('ClinicMobileNo', data.ClinicMobileNo);\r\n        formData.append('ClinicEmail', data.ClinicEmail);\r\n        formData.append('ClinicAddress', data.ClinicAddress);\r\n        formData.append('ClinicCity', data.ClinicCity);\r\n        formData.append('ClinicState', data.ClinicState);\r\n        formData.append('ClinicPincode', data.ClinicPincode);\r\n        formData.append('ClinicGstNumber', data.ClinicGstNumber);\r\n        formData.append('ClinicRegistrationNumber', data.ClinicRegistrationNumber);\r\n        formData.append('ClinicStartTime', data.ClinicStartTime);\r\n        formData.append('ClinicEndTime', data.ClinicEndTime);\r\n        formData.append('NoOfStaff', data.NoOfStaff);\r\n        formData.append('createdDate', date);\r\n        formData.append('Latitude', data.Latitude);\r\n        formData.append('Longitude', data.Longitude);\r\n        formData.append('FirstName', data.FirstName);\r\n        formData.append('LastName', data.LastName);\r\n        formData.append('Password', data.Password);\r\n        formData.append('MobileNo', data.MobileNo);\r\n        formData.append('Email', data.Email);\r\n        formData.append('Address', data.Address);\r\n        formData.append('City', data.City);\r\n        formData.append('Pincode', data.Pincode);\r\n        formData.append('State', data.State);\r\n        formData.append('Country', data.Country);\r\n        formData.append('MorningStartTime', data.MorningStartTime);\r\n        formData.append('MorningEndTime', data.MorningEndTime);\r\n        formData.append('EveningStartTime', data.EveningStartTime);\r\n        formData.append('EveningEndTime', data.EveningEndTime);\r\n        formData.append('Category', data.Category);\r\n        formData.append('Gender', data.Gender);\r\n        formData.append('Education', data.Education);\r\n        formData.append('ClinicTime', data.ClinicStartTime + '-' + data.ClinicEndTime);\r\n        formData.append('SubscriptionStartDate', date);\r\n        formData.append('SubscriptionEndDate', endDt);\r\n        formData.append('SubscriptionType', amt.DisplayTime);\r\n        formData.append('SubscriptionAmount', amt.Package);\r\n        formData.append('OtherFees', '0');\r\n        formData.append('TotalAmount', amt.Package);\r\n        formData.append('PaymentMode', 'Online');\r\n\r\n        try {\r\n            const clinicdetails = await Sign_Up_Clinic(formData);\r\n            let parse = JSON.parse(clinicdetails);\r\n            if (parse.success == \"200\") {\r\n                alert(parse.message);\r\n                navigate('/');\r\n            } else {\r\n                alert(parse.message);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const fetchPackages = async () => {\r\n        const request = await Payment_Packages();\r\n        if (request) {\r\n            setpackages(request)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPackages();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                fullScreen\r\n\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}>{\"Packages\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" >\r\n                        <Grid container>\r\n                            {packages.map((item) => {\r\n                                return (\r\n                                    <>\r\n                                        <Grid item xs={4} container>\r\n                                            <Paper elevation={3} spacing={4} style={{ padding: 20, width: 400 }}>\r\n\r\n                                                <Grid item xs={12}>\r\n                                                    <center>\r\n                                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                            fontSize: 16,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            color: '#707070',\r\n                                                            fontWeight: 600,\r\n\r\n                                                        }}>\r\n                                                            {item.Title}\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    <center>\r\n                                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                            fontSize: 16,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            color: '#707070',\r\n                                                            fontWeight: 600\r\n                                                        }}>\r\n                                                            {item.DisplayTime}\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={12}>\r\n                                                    <center>\r\n                                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                            fontSize: 18,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            color: '#707070',\r\n                                                            fontWeight: 600\r\n                                                        }}>\r\n                                                            ₹ {item.Package}\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n\r\n                                                <Grid item style={{\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                }}>\r\n                                                    <center>\r\n                                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                            fontSize: 16,\r\n                                                            fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            color: '#707070',\r\n                                                            overflow: \"auto\",\r\n                                                            whiteSpace: 'pre-wrap',\r\n                                                            overflowWrap: 'break-word',\r\n                                                            fontWeight: 600\r\n                                                        }}>\r\n                                                            {item.Description}\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n\r\n\r\n                                                <Grid item xs={12} style={{ marginTop: 10 }}>\r\n                                                    <center>\r\n                                                        {/* displayRazorpay(item.Package + '00') */}\r\n                                                        <Button className={classes.btnregister} onClick={() => { displayRazorpay(item) }} style={{ width: 100, }} >\r\n                                                            Buy Now\r\n                                                        </Button>\r\n                                                    </center>\r\n                                                </Grid>\r\n\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                    </>\r\n                                );\r\n                            })}\r\n\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default PaymentPackages\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControlLabel, InputAdornment, Select, InputLabel, FormControl, TextField, Typography, Button, Grid, Paper, IconButton } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminNavbar from './Admin_Navbar';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { Add_Clinic, Times, Doctor_Category, Payment_Packages } from '../Admin_Apis/Add_Clinic/index';\r\nimport PaymentPackages from './Sign_Up';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 10,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: 'Poppins;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(3),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '13px'\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginTop: 15\r\n    },\r\n    btnSubmit: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [firstName, setfirstName] = useState('');\r\n    const [lastName, setlastName] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [dob, setdob] = useState('');\r\n    const [gender, setgender] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [city, setcity] = useState('');\r\n    const [state, setstate] = useState('');\r\n    const [pincode, setpincode] = useState('');\r\n    const [country, setcountry] = useState('');\r\n    const [education, seteducation] = useState('');\r\n    const [category, setcategory] = useState('');\r\n    const [clinicName, setclinicName] = useState('');\r\n    const [clinicAddress, setclinicAddress] = useState('');\r\n    const [clinicMobile, setclinicMobile] = useState('');\r\n    const [clinicEmail, setclinicEmail] = useState('');\r\n    const [clinicCity, setclinicCity] = useState('');\r\n    const [clinicState, setclinicState] = useState('');\r\n    const [clinicPincode, setclinicPincode] = useState('');\r\n    const [clinicCountry, setclinicCountry] = useState('');\r\n    const [clinicRegNo, setclinicRegNo] = useState('');\r\n    const [clinicGSTNo, setclinicGSTNo] = useState('');\r\n    const [noofStaff, setnoofStaff] = useState('');\r\n    const [clinicStartTime, setclinicStartTime] = useState('');\r\n    const [clinicEndTime, setclinicEndTime] = useState('');\r\n    const [latitude, setlatitude] = useState('');\r\n    const [longitude, setlongitude] = useState('');\r\n    const [morningStartTime, setmorningStartTime] = useState('');\r\n    const [morningEndTime, setmorningEndTime] = useState('');\r\n    const [eveningStartTime, seteveningStartTime] = useState('');\r\n    const [eveningEndTime, seteveningEndTime] = useState('');\r\n    const [subscriptionType, setsubscriptionType] = useState('');\r\n    const [subscriptionAmount, setsubscriptionAmount] = useState('');\r\n    const [subscriptionStartDate, setsubscriptionStartDate] = useState('');\r\n    const [subscriptionEndDate, setsubscriptionEndDate] = useState('');\r\n    const [subscriptionOtherFees, setsubscriptionOtherFees] = useState('');\r\n    const [subscriptionTotalAmount, setsubscriptionTotalAmount] = useState('');\r\n    const [subscriptionPaymentMode, setsubscriptionPaymentMode] = useState('');\r\n    const [profileImage, setprofileImage] = useState('');\r\n    const [clinicLogo, setclinicLogo] = useState(null);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n    const [times, settimes] = useState([]);\r\n    const [amount, setamount] = React.useState('');\r\n    const [packages, setpackages] = useState([]);\r\n    var now = new Date();\r\n    var date = now.toISOString().split('T')[0];\r\n    var afterDate = new Date(new Date().setDate(now.getDate() + 30));\r\n    var endDt = afterDate.toISOString().split('T')[0];\r\n    const [dataformodal, setdataformodal] = useState([]);\r\n    const [showpackagemodal, setshowpackagemodal] = useState(false);\r\n    const [showPassword, setshowPassword] = useState(false);\r\n    const [password, setpassword] = useState('');\r\n\r\n    const handleClickShowPassword = () => {\r\n        setshowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        settimes(times);\r\n    }\r\n\r\n\r\n    const fetchPaymentPackages = async () => {\r\n        const packages = await Payment_Packages();\r\n        if (packages) {\r\n            setpackages(packages);\r\n        }\r\n    }\r\n\r\n\r\n    const Add_Clinic = async () => {\r\n        if (clinicLogo == '') {\r\n            alert(\"Please Select Clinic Logo\")\r\n            return;\r\n        }\r\n        else if (clinicName == '') {\r\n            alert(\"Please Enter Clinic Name\")\r\n            return;\r\n        }\r\n        else if (clinicMobile == '') {\r\n            alert(\"Please Enter Clinic Mobile No\")\r\n            return;\r\n        }\r\n        else if (clinicAddress == '') {\r\n            alert(\"Please Enter Clinic Address\")\r\n            return;\r\n        }\r\n        else if (firstName == '') {\r\n            alert(\"Please Enter First Name\")\r\n            return;\r\n        }\r\n        else if (lastName == '') {\r\n            alert(\"Please Enter Last Name\");\r\n            return\r\n        }\r\n        else if (password == '') {\r\n            alert(\"Please Enter Password\");\r\n            return\r\n        }\r\n        else if (city == '') {\r\n            alert(\"Please Enter City\");\r\n            return\r\n        }\r\n        else if (state == '') {\r\n            alert(\"Please Enter State\");\r\n            return\r\n        }\r\n        else if (country == '') {\r\n            alert(\"Please Enter Country\");\r\n            return\r\n        }\r\n        else if (clinicGSTNo == '') {\r\n            alert(\"Please Enter Clinic Gst Number\");\r\n            return\r\n        }\r\n        else if (clinicRegNo == '') {\r\n            alert(\"Please Enter Clinic Registration Number\");\r\n            return\r\n        }\r\n        else if (noofStaff == '') {\r\n            alert(\"Please Enter Clinic Number of Staff\");\r\n            return\r\n        }\r\n        else if (clinicStartTime == '') {\r\n            alert(\"Please Enter Clinic Start Time\");\r\n            return\r\n        }\r\n        else if (clinicEndTime == '') {\r\n            alert(\"Please Enter Clinic End Time\");\r\n            return\r\n        }\r\n\r\n        setdataformodal(\r\n            {\r\n                'file': clinicLogo,\r\n                'ClinicName': clinicName,\r\n                'ClinicMobileNo': clinicMobile,\r\n                'ClinicEmail': clinicEmail,\r\n                'ClinicAddress': clinicAddress,\r\n                'ClinicCity': clinicCity,\r\n                'ClinicState': clinicState,\r\n                'ClinicPincode': clinicPincode,\r\n                'ClinicGstNumber': clinicGSTNo,\r\n                'ClinicRegistrationNumber': clinicRegNo,\r\n                'ClinicStartTime': clinicStartTime,\r\n                'ClinicEndTime': clinicEndTime,\r\n                'NoOfStaff': noofStaff,\r\n                'createdDate': date,\r\n                'Latitude': latitude,\r\n                'Longitude': longitude,\r\n                'FirstName': firstName,\r\n                'LastName': lastName,\r\n                'Password': password,\r\n                'MobileNo': mobile,\r\n                'Email': email,\r\n                'Address': address,\r\n                'City': city,\r\n                'Pincode': pincode,\r\n                'State': state,\r\n                'Country': country,\r\n                'MorningStartTime': morningStartTime,\r\n                'MorningEndTime': morningEndTime,\r\n                'EveningStartTime': eveningStartTime,\r\n                'EveningEndTime': eveningEndTime,\r\n                'Category': category,\r\n                'Gender': gender,\r\n                'Education': education,\r\n                'ClinicTime': clinicStartTime + '-' + clinicEndTime,\r\n\r\n            }\r\n        )\r\n        setshowpackagemodal(true);\r\n    }\r\n\r\n    // const convertToBase64 = (file) => {\r\n    //     return new Promise((resolve, reject) => {\r\n    //         const fileReader = new FileReader();\r\n    //         fileReader.readAsDataURL(file);\r\n    //         fileReader.onload = () => {\r\n    //             resolve(fileReader.result);\r\n    //         };\r\n    //         fileReader.onerror = (error) => {\r\n    //             reject(error);\r\n    //         };\r\n    //     });\r\n    // };\r\n    // const handleFileUpload = async (e) => {\r\n    //     const file = e.target.files[0];\r\n    //     const base64 = await convertToBase64(file);\r\n    //     setclinicLogo(base64);\r\n    // };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchDoctorCategory();\r\n        fetchTimes();\r\n        fetchPaymentPackages();\r\n    }, []);\r\n\r\n\r\n    const handleGoBack = () => {\r\n        navigate('/');\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Add Clinic\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Paper elevation={4} className={classes.paper} style={{ marginLeft: 5, marginRight: 20, marginBottom: 40, borderRadius: 20 }}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#2C7FB2',\r\n                                    fontWeight: 600,\r\n                                    textDecoration: 'underline',\r\n                                    textUnderlineOffset: '1px',\r\n                                }}>\r\n                                    Clinic Details\r\n\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid container style={{ marginTop: 20 }}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Clinic Name:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                value={clinicName}\r\n                                                onChange={(e) => setclinicName(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Clinic Name\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Timings:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container style={{ marginTop: '-30px' }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    Start Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    End Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={clinicStartTime}\r\n                                                        onChange={(e) => setclinicStartTime(e.target.value)}\r\n                                                        label=\"Start Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'start time',\r\n                                                            id: 'outlined-start-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">Start Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={clinicEndTime}\r\n                                                        onChange={(e) => setclinicEndTime(e.target.value)}\r\n                                                        label=\"End Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'end time',\r\n                                                            id: 'outlined-end-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">End Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Contact Number:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                value={clinicMobile}\r\n                                                onChange={(e) => setclinicMobile(e.target.value)}\r\n                                                type='number'\r\n                                                id=\"outlined-basic\" size=\"small\" label=\"Clinic Mobile No\" variant=\"outlined\" style={{ width: '150%' }}\r\n                                                onInput={(e) => {\r\n                                                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                                }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Clinic GST Number:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                value={clinicGSTNo}\r\n                                                onChange={(e) => setclinicGSTNo(e.target.value)}\r\n                                                id=\"outlined-basic\" size=\"small\" label=\"Gst Number\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Email ID:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={clinicEmail} onChange={(e) => setclinicEmail(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Email Id\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Registration Number:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={clinicRegNo} onChange={(e) => setclinicRegNo(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Registration Number\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n\r\n                                    }}>\r\n                                        Address:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={clinicAddress} onChange={(e) => setclinicAddress(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        No. of Staff:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={noofStaff} onChange={(e) => setnoofStaff(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Number of Staff\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        City/Pincode:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={clinicCity}\r\n                                                        onChange={(e) => {\r\n                                                            const re = /^[A-Za-z]+$/;\r\n\r\n                                                            // if value is not blank, then test the regex\r\n\r\n                                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                                setclinicCity(e.target.value)\r\n                                                            }\r\n                                                        }} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={clinicPincode} onChange={(e) => setclinicPincode(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Geographic Location:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={latitude} onChange={(e) => setlatitude(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Latitude\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={longitude} onChange={(e) => setlongitude(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Longitude\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        State/Country:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={clinicState} onChange={(e) => setclinicState(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm}\r\n                                                        value={clinicCountry}\r\n                                                        onChange={(e) => {\r\n                                                            const re = /^[A-Za-z]+$/;\r\n\r\n                                                            // if value is not blank, then test the regex\r\n\r\n                                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                                setclinicCountry(e.target.value)\r\n                                                            }\r\n                                                        }} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Logo:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        {/* <input type='file' /> */}\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setclinicLogo(e.target.files[0])} id=\"outlined-basic\" type=\"file\" size=\"small\" label=\"\" variant=\"outlined\" style={{ width: '100%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n\r\n\r\n                    <Paper elevation={4} className={classes.paper} style={{ marginLeft: 5, marginRight: 20, marginBottom: 40, borderRadius: 20 }}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#2C7FB2',\r\n                                    fontWeight: 600,\r\n                                    textDecoration: 'underline',\r\n                                    textUnderlineOffset: '1px',\r\n                                }}>\r\n                                    Doctor Details\r\n\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid container style={{ marginTop: 20 }}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        First Name:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                value={firstName}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[A-Za-z]+$/;\r\n\r\n                                                    // if value is not blank, then test the regex\r\n\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setfirstName(e.target.value)\r\n                                                    }\r\n                                                }} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Morning Shift:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container style={{ marginTop: '-40px' }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    Start Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    End Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={morningStartTime}\r\n                                                        onChange={(e) => setmorningStartTime(e.target.value)}\r\n                                                        label=\"Start Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'start time',\r\n                                                            id: 'outlined-start-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">Start Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={morningEndTime}\r\n                                                        onChange={(e) => setmorningEndTime(e.target.value)}\r\n                                                        label=\"End Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'end time',\r\n                                                            id: 'outlined-end-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">End Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Last Name:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                value={lastName}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[A-Za-z]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setlastName(e.target.value)\r\n                                                    }\r\n                                                }} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Evening Shift:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container style={{ marginTop: '-30px' }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    Start Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    End Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={eveningStartTime}\r\n                                                        onChange={(e) => seteveningStartTime(e.target.value)}\r\n                                                        label=\"Start Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'start time',\r\n                                                            id: 'outlined-start-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\" >Start Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={eveningEndTime}\r\n                                                        onChange={(e) => seteveningEndTime(e.target.value)}\r\n                                                        label=\"End Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'end time',\r\n                                                            id: 'outlined-end-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">End Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Email ID:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={email} onChange={(e) => setemail(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Email Id\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Address:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField multiline rows={2} maxRows={5} value={address} className={classes.textFieldForm} onChange={(e) => setaddress(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\" style={{ width: '165%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2} style={{ marginTop: '-20px' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n\r\n                                    }}>\r\n                                        Mobile No:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} style={{ marginTop: '-20px' }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                value={mobile}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setmobile(e.target.value)\r\n                                                    }\r\n                                                }} type='number' id=\"outlined-basic\" size=\"small\" label=\"Mobile No\" variant=\"outlined\" style={{ width: '150%' }}\r\n                                                onInput={(e) => {\r\n                                                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                                }}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        City/Pincode:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={city} onChange={(e) => setcity(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={pincode} onChange={(e) => setpincode(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2} style={{ marginTop: '-20px' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Degree:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} style={{ marginTop: '-20px' }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={education} onChange={(e) => seteducation(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Degree\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        State/Country:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={state} onChange={(e) => setstate(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={country} onChange={(e) => setcountry(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={2} style={{ marginTop: '-20px' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Category:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} style={{ marginTop: '-20px' }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '85%', fontWeight: 600 }} >\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='large'\r\n                                                native\r\n                                                value={category}\r\n                                                onChange={(e) => setcategory(e.target.value)}\r\n                                                label=\"category\"\r\n                                                inputProps={{\r\n                                                    name: 'category',\r\n                                                    id: 'outlined-category-native-simple',\r\n                                                }}\r\n                                                style={{ width: '100%', fontSize: 14, fontWeight: 600 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Category</option>\r\n                                                {doctorCategory.map((item) => {\r\n                                                    return (\r\n                                                        <option value={item.Category}>{item.Category}</option>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Registration Number:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} value={clinicRegNo} id=\"outlined-basic\" size=\"small\" label=\"Registration Number\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2} style={{ marginTop: '-20px' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Date of Birth:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} style={{ marginTop: '-20px' }}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                <TextField className={classes.textFieldForm} value={dob} onChange={(e) => setdob(e.target.value)} id=\"outlined-basic\" type=\"date\" size=\"small\" variant=\"outlined\" style={{ width: '82%', float: 'right', marginLeft: 10, fontSize: 10 }} />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '88%', fontWeight: 600 }} >\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    native\r\n                                                    value={gender}\r\n                                                    onChange={(e) => setgender(e.target.value)}\r\n                                                    label=\"Gender\"\r\n                                                    inputProps={{\r\n                                                        name: 'gender',\r\n                                                        id: 'outlined-gender-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '90%', fontSize: 14, fontWeight: 600, float: 'left' }}\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\">Gender</option>\r\n                                                    <option value='Male'>Male</option>\r\n                                                    <option value='Female'>Female</option>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Password:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} label=\"Password\"\r\n                                                value={password}\r\n                                                type={showPassword ? 'text' : 'password'}\r\n                                                onChange={(e) => setpassword(e.target.value)}\r\n                                                InputProps={{\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                aria-label=\"toggle password visibility\"\r\n                                                                onClick={handleClickShowPassword}\r\n                                                                onMouseDown={handleMouseDownPassword}\r\n                                                            >\r\n                                                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    ),\r\n                                                }}\r\n                                                id=\"outlined-basic\" size=\"small\" variant=\"outlined\" style={{ width: '120%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n\r\n\r\n\r\n                    {showpackagemodal ? <PaymentPackages show={showpackagemodal} data={dataformodal} handleclose={() => setshowpackagemodal(false)} /> : null}\r\n\r\n                    <Grid container style={{ marginTop: '-20px', paddingBottom: 30 }}>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnCancle} style={{ float: 'right', marginRight: 20 }}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button onClick={() => {\r\n                                Add_Clinic();\r\n\r\n                            }} className={classes.btnCancle} style={{ float: 'left', marginLeft: 20 }}>\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControlLabel, Select, InputLabel, FormControl, TextField, Typography, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminNavbar from './Admin_Navbar';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Add_Clinic, Times, Doctor_Category } from '../Admin_Apis/Add_Clinic/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: 'Poppins;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(3),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '13px'\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginTop: 15\r\n    },\r\n    btnSubmit: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function AdminAddClinic() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [firstName, setfirstName] = useState('');\r\n    const [lastName, setlastName] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [dob, setdob] = useState('');\r\n    const [gender, setgender] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [city, setcity] = useState('');\r\n    const [state, setstate] = useState('');\r\n    const [pincode, setpincode] = useState('');\r\n    const [country, setcountry] = useState('');\r\n    const [education, seteducation] = useState('');\r\n    const [category, setcategory] = useState('');\r\n    const [clinicName, setclinicName] = useState('');\r\n    const [clinicAddress, setclinicAddress] = useState('');\r\n    const [clinicMobile, setclinicMobile] = useState('');\r\n    const [clinicEmail, setclinicEmail] = useState('');\r\n    const [clinicCity, setclinicCity] = useState('');\r\n    const [clinicState, setclinicState] = useState('');\r\n    const [clinicPincode, setclinicPincode] = useState('');\r\n    const [clinicCountry, setclinicCountry] = useState('');\r\n    const [clinicRegNo, setclinicRegNo] = useState('');\r\n    const [clinicGSTNo, setclinicGSTNo] = useState('');\r\n    const [noofStaff, setnoofStaff] = useState('');\r\n    const [clinicStartTime, setclinicStartTime] = useState('');\r\n    const [clinicEndTime, setclinicEndTime] = useState('');\r\n    const [latitude, setlatitude] = useState('');\r\n    const [longitude, setlongitude] = useState('');\r\n    const [morningStartTime, setmorningStartTime] = useState('');\r\n    const [morningEndTime, setmorningEndTime] = useState('');\r\n    const [eveningStartTime, seteveningStartTime] = useState('');\r\n    const [eveningEndTime, seteveningEndTime] = useState('');\r\n    const [subscriptionType, setsubscriptionType] = useState('');\r\n    const [subscriptionAmount, setsubscriptionAmount] = useState('');\r\n    const [subscriptionStartDate, setsubscriptionStartDate] = useState('');\r\n    const [subscriptionEndDate, setsubscriptionEndDate] = useState('');\r\n    const [subscriptionOtherFees, setsubscriptionOtherFees] = useState('');\r\n    const [subscriptionTotalAmount, setsubscriptionTotalAmount] = useState('');\r\n    const [subscriptionPaymentMode, setsubscriptionPaymentMode] = useState('');\r\n    const [profileImage, setprofileImage] = useState('');\r\n    const [clinicLogo, setclinicLogo] = useState(null);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n    const [times, settimes] = useState([]);\r\n\r\n\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        settimes(times);\r\n    }\r\n\r\n\r\n\r\n    // const convertToBase64 = (file) => {\r\n    //     return new Promise((resolve, reject) => {\r\n    //         const fileReader = new FileReader();\r\n    //         fileReader.readAsDataURL(file);\r\n    //         fileReader.onload = () => {\r\n    //             resolve(fileReader.result);\r\n    //         };\r\n    //         fileReader.onerror = (error) => {\r\n    //             reject(error);\r\n    //         };\r\n    //     });\r\n    // };\r\n    // const handleFileUpload = async (e) => {\r\n    //     const file = e.target.files[0];\r\n    //     const base64 = await convertToBase64(file);\r\n    //     setclinicLogo(base64);\r\n    // };\r\n\r\n\r\n    const AddClinic = async () => {\r\n        var now = new Date();\r\n        var date = now.toISOString().split('T')[0];\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', clinicLogo);\r\n        formData.append('ClinicName', clinicName);\r\n        formData.append('ClinicMobileNo', clinicMobile);\r\n        formData.append('ClinicEmail', clinicEmail);\r\n        formData.append('ClinicAddress', clinicAddress);\r\n        formData.append('ClinicCity', clinicCity);\r\n        formData.append('ClinicState', clinicState);\r\n        formData.append('ClinicPincode', clinicPincode);\r\n        formData.append('ClinicGstNumber', clinicGSTNo);\r\n        formData.append('ClinicRegistrationNumber', clinicRegNo);\r\n        formData.append('ClinicStartTime', clinicStartTime);\r\n        formData.append('ClinicEndTime', clinicEndTime);\r\n        formData.append('NoOfStaff', noofStaff);\r\n        formData.append('createdDate', date);\r\n        formData.append('Latitude', latitude);\r\n        formData.append('Longitude', longitude);\r\n        formData.append('FirstName', firstName);\r\n        formData.append('LastName', lastName);\r\n        formData.append('MobileNo', mobile);\r\n        formData.append('Email', email);\r\n        formData.append('Address', address);\r\n        formData.append('City', city);\r\n        formData.append('Pincode', pincode);\r\n        formData.append('State', state);\r\n        formData.append('Country', country);\r\n        formData.append('MorningStartTime', morningStartTime);\r\n        formData.append('MorningEndTime', morningEndTime);\r\n        formData.append('EveningStartTime', eveningStartTime);\r\n        formData.append('EveningEndTime', eveningEndTime);\r\n        formData.append('Category', category);\r\n        formData.append('Gender', gender);\r\n        formData.append('Education', education);\r\n        formData.append('ClinicTime', clinicStartTime + '-' + clinicEndTime);\r\n        formData.append('SubscriptionStartDate', subscriptionStartDate);\r\n        formData.append('SubscriptionEndDate', subscriptionEndDate);\r\n        formData.append('SubscriptionType', subscriptionType);\r\n        formData.append('SubscriptionAmount', subscriptionAmount);\r\n        formData.append('OtherFees', subscriptionOtherFees);\r\n        formData.append('TotalAmount', subscriptionTotalAmount);\r\n        formData.append('PaymentMode', subscriptionPaymentMode);\r\n\r\n        try {\r\n            const clinicdetails = await Add_Clinic(formData);\r\n            let parse = JSON.parse(clinicdetails);\r\n            if (parse.success == \"200\") {\r\n                alert(parse.message);\r\n                window.location.reload()\r\n            } else {\r\n                alert(parse.message);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDoctorCategory();\r\n        fetchTimes();\r\n    }, []);\r\n\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorProfile\");\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <AdminNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        {/* <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button> */}\r\n                        Add Clinic\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Paper elevation={4} className={classes.paper} style={{ marginLeft: 5, marginRight: 20, marginBottom: 40, borderRadius: 20 }}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#2C7FB2',\r\n                                    fontWeight: 600,\r\n                                    textDecoration: 'underline',\r\n                                    textUnderlineOffset: '1px',\r\n                                }}>\r\n                                    Clinic Details\r\n\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid container style={{ marginTop: 20 }}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Clinic Name:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[A-Za-z]+$/;\r\n                                                    // if value is not blank, then test the regex\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setclinicName(e.target.value)\r\n                                                    }\r\n                                                }} id=\"outlined-basic\" size=\"small\" label=\"Clinic Name\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Timings:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container style={{ marginTop: '-30px' }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    Start Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    End Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={clinicStartTime}\r\n                                                        onChange={(e) => setclinicStartTime(e.target.value)}\r\n                                                        label=\"Start Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'start time',\r\n                                                            id: 'outlined-start-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">Start Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={clinicEndTime}\r\n                                                        onChange={(e) => setclinicEndTime(e.target.value)}\r\n                                                        label=\"End Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'end time',\r\n                                                            id: 'outlined-end-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">End Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Contact Number:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                onChange={(e) => setclinicMobile(e.target.value)}\r\n                                                type='number'\r\n                                                id=\"outlined-basic\" size=\"small\" label=\"Clinic Mobile No\" variant=\"outlined\" style={{ width: '150%' }}\r\n                                                onInput={(e) => {\r\n                                                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                                }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Clinic GST Number:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[A-Za-z]+$/;\r\n\r\n                                                    // if value is not blank, then test the regex\r\n\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setclinicGSTNo(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                                id=\"outlined-basic\" size=\"small\" label=\"Gst Number\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Email ID:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setclinicEmail(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Email Id\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Registration Number:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setclinicRegNo(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Registration Number\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n\r\n                                    }}>\r\n                                        Address:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setclinicAddress(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        No. of Staff:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setnoofStaff(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Number of Staff\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        City/Pincode:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n\r\n                                                        // if value is not blank, then test the regex\r\n\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setclinicCity(e.target.value)\r\n                                                        }\r\n                                                    }} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setclinicPincode(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Geographic Location:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setlatitude(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Latitude\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setlongitude(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Longitude\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        State/Country:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setclinicState(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n\r\n                                                        // if value is not blank, then test the regex\r\n\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setclinicCountry(e.target.value)\r\n                                                        }\r\n                                                    }} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Logo:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        {/* <input type='file' /> */}\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setclinicLogo(e.target.files[0])} id=\"outlined-basic\" type=\"file\" size=\"small\" label=\"\" variant=\"outlined\" style={{ width: '100%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n\r\n\r\n                    <Paper elevation={4} className={classes.paper} style={{ marginLeft: 5, marginRight: 20, marginBottom: 40, borderRadius: 20 }}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#2C7FB2',\r\n                                    fontWeight: 600,\r\n                                    textDecoration: 'underline',\r\n                                    textUnderlineOffset: '1px',\r\n                                }}>\r\n                                    Doctor Details\r\n\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid container style={{ marginTop: 20 }}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        First Name:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setfirstName(e.target.value)\r\n                                                }\r\n                                            }} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Morning Shift:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container style={{ marginTop: '-40px' }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    Start Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    End Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={morningStartTime}\r\n                                                        onChange={(e) => setmorningStartTime(e.target.value)}\r\n                                                        label=\"Start Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'start time',\r\n                                                            id: 'outlined-start-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">Start Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={morningEndTime}\r\n                                                        onChange={(e) => setmorningEndTime(e.target.value)}\r\n                                                        label=\"End Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'end time',\r\n                                                            id: 'outlined-end-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">End Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Last Name:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setlastName(e.target.value)\r\n                                                }\r\n                                            }} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Evening Shift:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container style={{ marginTop: '-30px' }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    Start Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    End Time\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={eveningStartTime}\r\n                                                        onChange={(e) => seteveningStartTime(e.target.value)}\r\n                                                        label=\"Start Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'start time',\r\n                                                            id: 'outlined-start-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\" >Start Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '80%', fontWeight: 600 }} >\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={eveningEndTime}\r\n                                                        onChange={(e) => seteveningEndTime(e.target.value)}\r\n                                                        label=\"End Time\"\r\n                                                        inputProps={{\r\n                                                            name: 'end time',\r\n                                                            id: 'outlined-end-time-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '90%', fontSize: 14, fontWeight: 600 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">End Time</option>\r\n                                                        {times.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Email ID:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setemail(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Email Id\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Address:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField multiline rows={2} maxRows={5} className={classes.textFieldForm} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setlastName(e.target.value)\r\n                                                }\r\n                                            }} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\" style={{ width: '165%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={2} style={{ marginTop: '-20px' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n\r\n                                    }}>\r\n                                        Mobile No:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} style={{ marginTop: '-20px' }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setmobile(e.target.value)\r\n                                                }\r\n                                            }} type='number' id=\"outlined-basic\" size=\"small\" label=\"Mobile No\" variant=\"outlined\" style={{ width: '150%' }}\r\n                                                onInput={(e) => {\r\n                                                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                                }}\r\n                                            />                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        City/Pincode:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setcity(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setpincode(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2} style={{ marginTop: '-20px' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Degree:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} style={{ marginTop: '-20px' }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => seteducation(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Degree\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        State/Country:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setstate(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setcountry(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" style={{ width: '70%' }} />\r\n                                                </FormControl>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={2} style={{ marginTop: '-20px' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Category:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} style={{ marginTop: '-20px' }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '85%', fontWeight: 600 }} >\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='large'\r\n                                                native\r\n                                                value={category}\r\n                                                onChange={(e) => setcategory(e.target.value)}\r\n                                                label=\"category\"\r\n                                                inputProps={{\r\n                                                    name: 'category',\r\n                                                    id: 'outlined-category-native-simple',\r\n                                                }}\r\n                                                style={{ width: '100%', fontSize: 14, fontWeight: 600 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Category</option>\r\n                                                {doctorCategory.map((item) => {\r\n                                                    return (\r\n                                                        <option value={item.Category}>{item.Category}</option>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Registration Number:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" size=\"small\" label=\"Registration Number\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2} style={{ marginTop: '-20px' }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Date of Birth:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} style={{ marginTop: '-20px' }}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                <TextField className={classes.textFieldForm} onChange={(e) => setdob(e.target.value)} id=\"outlined-basic\" type=\"date\" size=\"small\" variant=\"outlined\" style={{ width: '82%', float: 'right', marginLeft: 10, fontSize: 10 }} />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '88%', fontWeight: 600 }} >\r\n                                                <Select\r\n                                                    className={classes.textFieldForm}\r\n                                                    size='large'\r\n                                                    native\r\n                                                    value={gender}\r\n                                                    onChange={(e) => setgender(e.target.value)}\r\n                                                    label=\"Gender\"\r\n                                                    inputProps={{\r\n                                                        name: 'gender',\r\n                                                        id: 'outlined-gender-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '90%', fontSize: 14, fontWeight: 600, float: 'left' }}\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\">Gender</option>\r\n                                                    <option value='Male'>Male</option>\r\n                                                    <option value='Female'>Female</option>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Upload Profile Image:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" size=\"small\" type='file' variant=\"outlined\" style={{ width: '100%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n\r\n                    <Paper elevation={4} className={classes.paper} style={{ marginLeft: 5, marginRight: 20, marginBottom: 40, borderRadius: 20 }}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#2C7FB2',\r\n                                    fontWeight: 600,\r\n                                    textDecoration: 'underline',\r\n                                    textUnderlineOffset: '1px',\r\n                                }}>\r\n                                    Subscription Details\r\n\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid container style={{ marginTop: 20 }}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Subscription Type:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '85%', fontWeight: 600 }} >\r\n\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='large'\r\n                                                native\r\n                                                value={subscriptionType}\r\n                                                onChange={(e) => setsubscriptionType(e.target.value)}\r\n                                                label=\"subscription\"\r\n                                                inputProps={{\r\n                                                    name: 'subscription',\r\n                                                    id: 'outlined-subscription-type-native-simple',\r\n                                                }}\r\n                                                style={{ width: '100%', fontSize: 14, fontWeight: 600 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\">Subscription Type</option>\r\n                                                <option value='Free 15 days'>Free 15 days</option>\r\n                                                <option value='30 days'>30 days</option>\r\n                                                <option value='45 days'>45 days</option>\r\n                                                <option value='90 days'>90 days</option>\r\n                                                <option value='1 year'>1 year</option>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Start Date:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Grid container style={{ marginTop: '-30px' }}>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    Start Date\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', fontWeight: 600 }}>\r\n                                                    End Date\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 10 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                <TextField className={classes.textFieldForm} onChange={(e) => setsubscriptionStartDate(e.target.value)} id=\"outlined-basic\" size=\"small\" type='date' label=\"\" variant=\"outlined\" style={{ width: '81%', float: 'right', marginLeft: '12px' }} />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                <TextField className={classes.textFieldForm} onChange={(e) => setsubscriptionEndDate(e.target.value)} id=\"outlined-basic\" size=\"small\" type='date' label=\"\" variant=\"outlined\" style={{ width: '81%', float: 'left', marginLeft: '-7px' }} />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Amount:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setsubscriptionAmount(e.target.value)} id=\"outlined-basic\" size=\"small\" type='number' label=\"Amount\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Payment Mode:\r\n                                    </Typography>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '85%', fontWeight: 600 }} >\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='large'\r\n                                                native\r\n                                                value={subscriptionPaymentMode}\r\n                                                onChange={(e) => setsubscriptionPaymentMode(e.target.value)}\r\n                                                label=\"mode\"\r\n                                                inputProps={{\r\n                                                    name: 'mode',\r\n                                                    id: 'outlined-payment-mode-native-simple',\r\n                                                }}\r\n                                                style={{ width: '100%', fontSize: 14, fontWeight: 600 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\">Payment Mode</option>\r\n                                                <option value='Online'>Online</option>\r\n                                                <option value='Cash'>Cash</option>\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Other Fees:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setsubscriptionOtherFees(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Other Fees\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        Total Amount:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} onChange={(e) => setsubscriptionTotalAmount(e.target.value)} id=\"outlined-basic\" size=\"small\" label=\"Total Amount\" variant=\"outlined\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                    <Grid container style={{ marginTop: '-20px', paddingBottom: 30 }}>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnCancle} style={{ float: 'right', marginRight: 20 }}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button onClick={AddClinic} className={classes.btnCancle} style={{ float: 'left', marginLeft: 20 }}>\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Grid, Paper} from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        borderRadius: 10,\r\n        paddingTop: 40,\r\n        paddingBottom: 40\r\n\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 5,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n}));\r\n\r\n\r\nexport default function AdminHome() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDashboard = () => {\r\n        navigate(\"/DoctorDashboard\");\r\n    };\r\n\r\n    const handleAddClinic = () => {\r\n        navigate(\"/AdminAddClinic\");\r\n    };\r\n\r\n    const handleClinics = () => {\r\n        navigate(\"/AdminClinicDetails\");\r\n    };\r\n\r\n    const handleAppointmentsOnTV = () => {\r\n        navigate(\"/Doctor_TV_TodaysAppointments\");\r\n    };\r\n\r\n    const handleBookAppointment = () => {\r\n        navigate(\"/DoctorBookAppointment\");\r\n    };\r\n\r\n    const handleClinicPatients = () => {\r\n        navigate(\"/DoctorClinicPatients\");\r\n    };\r\n\r\n    const handleUploadReports = () => {\r\n        navigate(\"/DoctorUploadReports\");\r\n    };\r\n\r\n    const handleHomeVisitorRequest = () => {\r\n        navigate(\"/DoctorHomeVisitRequest\");\r\n    };\r\n\r\n    const handleClinicStaff = () => {\r\n        navigate(\"/DoctorClinicStaff\");\r\n    };\r\n\r\n    const handleAddMedicines = () => {\r\n        navigate(\"/DoctorAddMedicine\");\r\n    };\r\n\r\n    const handleHomeVisitor = () => {\r\n        navigate(\"/DoctorHomeVisitors\");\r\n    };\r\n\r\n    const handleFacilities = () => {\r\n        navigate(\"/DoctorClinicServices\");\r\n    };\r\n\r\n    const handleAddServices = () => {\r\n        navigate(\"/DoctorAddServices\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                            marginLeft: 10\r\n                        }}>       \r\n                        Home\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleDashboard} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"Dashboard-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n                                }}>\r\n                                Dashboard <br/><br/>\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} onClick={handleAddClinic} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"clinicregisterations-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n                                }}>\r\n                                Clinic <br/>Registrations\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={2} onClick={handleClinics} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"clinics-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n                                }}>\r\n                                Clinics <br/><br/>\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} onClick={handleClinicPatients} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"activesubscription-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n                                }}>\r\n                                Active <br/> Subscriptions\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} onClick={handleUploadReports}>\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"Due_expired_subscription-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n                                }}>\r\n                                Due/Expired <br/> Subscriptions\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n               \r\n                <Grid item xs={12} sm={2} onClick={handleUploadReports}>\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"ad-01.svg\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n                                }}>\r\n                                Advertisement <br/> <br/>\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} onClick={handleClinicStaff} >\r\n                    <Paper elevation={6} className={classes.paper} style={{marginTop: 20}}>\r\n                        <center>\r\n                            <img src=\"Valueaddedservices-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n\r\n                                }}>\r\n                                Value Added <br/> Services\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} onClick={handleHomeVisitor}>\r\n                    <Paper elevation={6} className={classes.paper} style={{marginTop: 20}}>\r\n                        <center>  <img src=\"referdoc-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n\r\n                                }}>\r\n                                Referal <br/> Doctors\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} onClick={handleAddMedicines} >\r\n                    <Paper elevation={6} className={classes.paper} style={{marginTop: 20}}>\r\n                        <center>\r\n                            <img src=\"clinicpayments-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n\r\n                                }}>\r\n                                Clinic <br/> Payments\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} onClick={handleAddServices}>\r\n                    <Paper elevation={6} className={classes.paper} style={{marginTop: 20}}>\r\n                        <center>\r\n                            <img src=\"reports-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n\r\n                                }}>\r\n                                Reports <br/> <br/>\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={2} onClick={handleFacilities}>\r\n                    <Paper elevation={6} className={classes.paper} style={{marginTop: 20}}>\r\n                        <center>\r\n                            <img src=\"ambulanceservices-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n\r\n                                }}>\r\n                                Ambulance <br/> Services\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n        \r\n                <Grid item xs={12} sm={2} onClick={handleAppointmentsOnTV} >\r\n                    <Paper elevation={6} className={classes.paper} style={{marginTop: 20}}>\r\n                        <center>\r\n                            <img src=\"tips-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18\r\n                                }}>\r\n                               Tips <br/><br/>\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, AppBar, Toolbar, CssBaseline, Typography, Button, Avatar, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport {\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    Chart,\r\n    BarSeries,\r\n    Title,\r\n    Legend,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation, Stack } from '@devexpress/dx-react-chart';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst data = [\r\n    { argument: '2021', value: 30 },\r\n    { argument: '2020', value: 20 },\r\n    { argument: '2019', value: 20 },\r\n    { argument: '2018', value: 50 },\r\n    { argument: '2017', value: 50 },\r\n    { argument: '2016', value: 40 },\r\n    { argument: '2015', value: 45 },\r\n];\r\n\r\n\r\nconst Subscription = [{\r\n    year: '2021',\r\n    registration: 36,\r\n    expiry: 38,\r\n  }, {\r\n    year: '2020',\r\n    registration: 26,\r\n    expiry: 40,\r\n  }, {\r\n    year: '2019',\r\n    registration: 35,\r\n    expiry: 28,\r\n  }, {\r\n    year: '2018',\r\n    registration: 45,\r\n    expiry: 20,\r\n  }, {\r\n    year: '2017',\r\n    registration: 36,\r\n    expiry: 38,\r\n  }];\r\n\r\nconst legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n      color:'#00318B'\r\n    },\r\n  });\r\nconst legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n);\r\n\r\nconst Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\nconst legendLabelStyles = () => ({\r\n    label: {\r\n        whiteSpace: 'nowrap',\r\n    },\r\n});\r\nconst legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n);\r\nconst Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 30,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n}));\r\n\r\n\r\nexport default function AdminDashboard() {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleRegisterClick = () => {\r\n        navigate(\"/patientregistration\");\r\n    };\r\n\r\n    const handleBookAppointmentClick = () => {\r\n        navigate(\"/bookappointment\");\r\n    };\r\n\r\n    const handleTodaysAppointmentClick = () => {\r\n        navigate(\"/todaysappointment\");\r\n    };\r\n\r\n\r\n    const handleSendIn = () => {\r\n        navigate(\"/DoctorPatientDetails_SendIn\");\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n\r\n            >\r\n                {/* Reports Grid Start */}\r\n\r\n\r\n                <Grid item className={classes.griditem} xs={12} sm={4} style={{ borderRight: '1px solid gray' }}>\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n\r\n                                }}\r\n                            >\r\n                                MONTHLY REGISTRATION\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h4\" noWrap={true}>\r\n                                20\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item className={classes.griditem} xs={12} sm={4} style={{ borderRight: '1px solid gray' }}>\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n\r\n                                }}>\r\n                                YEARLY REGISTRATION\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h4\" noWrap={true}>\r\n                                40\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item className={classes.griditem} xs={12} sm={4} >\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n                                }}>\r\n                                EXPIRED SUBSCRIPTION\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h4\" noWrap={true}>\r\n                                100\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Reports grid end */}\r\n\r\n\r\n                <Grid container spacing={4} style={{ marginTop: 20 }}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Paper elevation={6} className={classes.paper} style={{ marginBottom: 50, color:'#00318B' }}>\r\n                            <Chart\r\n                                data={data}\r\n                                height={400}\r\n                            >\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n\r\n                                <BarSeries name=\"Clinic Registration\" valueField=\"value\" argumentField=\"argument\" color=\"#2C7FB2\" />\r\n                                <Legend position=\"bottom\" rootComponent={Root} labelComponent={Label} />\r\n                                <Title text=\"Clinic Registrations\"/>\r\n                           \r\n                                <Animation />\r\n                            </Chart>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Paper elevation={6} className={classes.paper} style={{color:'#00318B'}}>\r\n                            <Chart\r\n                                data={Subscription}\r\n                                height={400}\r\n                            >\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n\r\n                                <BarSeries\r\n                                    name=\"Clinic Registration\"\r\n                                    valueField=\"registration\"\r\n                                    argumentField=\"year\"\r\n                                    color=\"#2C7FB2\"\r\n                                />\r\n                                <BarSeries\r\n                                    name=\"Subscription Expired\"\r\n                                    valueField=\"expiry\"\r\n                                    argumentField=\"year\"\r\n                                    color=\"lightgray\"\r\n                                />\r\n                                                           \r\n                                <Animation />\r\n                                <Legend position=\"bottom\" rootComponent={Root} labelComponent={Label} />\r\n                                <Title text=\"Registration/Expired Subscription\" />\r\n                                <Stack />\r\n                            </Chart>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, InputLabel, Typography, Button, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { FixedSizeList } from 'react-window';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n\r\n    { id: 'name', label: 'CLINIC NAME', minWidth: 50 },\r\n    {\r\n        id: 'mobile',\r\n        label: 'MOBILE NO',\r\n        minWidth: 40,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n\r\n];\r\n\r\nfunction createData(name, mobile,) {\r\n    return { name, mobile };\r\n}\r\n\r\nconst rows = [\r\n    createData('Akshay Nursing Home', '8977889898',),\r\n    createData('East Valley Clinic', '6784848484',),\r\n    createData('Askhaya Hospital', '7833674758', ),\r\n    createData('Dr. Pille Nursing Home', '7484949490', ),\r\n    createData('Ayurvedic Clinic', '9484859033', ),\r\n    createData('Aditya Birla Hospital', '8977889898', ),\r\n    createData('Lata Mangeshkar Hospital', '6474889786', ),\r\n    createData('Akshay Nursing Home', '8977889898', ),\r\n    createData('East Valley Clinic', '6784848484', ),\r\n    createData('Askhaya Hospital', '7833674758', ),\r\n    createData('Dr. Pille Nursing Home', '7484949490', ),\r\n    createData('Ayurvedic Clinic', '9484859033', ),\r\n    createData('Aditya Birla Hospital', '8977889898',),\r\n    createData('Lata Mangeshkar Hospital', '6474889786', ),\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        // <List>\r\n        <ListItem button style={style} key={index} >\r\n            <ListItem >\r\n                <ListItemText\r\n                    style={{ borderBottom: '1px solid #F0F0F0' }}\r\n                    primary={`Title : Regular Checkup`}\r\n                    secondary={\r\n                        <React.Fragment>\r\n                            <Typography\r\n                                component={'span'}\r\n                                variant={\"body2\"}\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {`Date : 2021-09-11`}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n            <Divider />\r\n        </ListItem>\r\n        // </List>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AdminClinicDetails() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [counterbtn, setCounterBtn] = React.useState(0);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n\r\n\r\n    const handleClickOpenmodal = () => {\r\n        setOpenmodal(true);\r\n    };\r\n\r\n    const handleClosemodal = () => {\r\n        setOpenmodal(false);\r\n    };\r\n\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n\r\n\r\n    const handleClickOpenEditmodal = () => {\r\n        setOpenEditmodal(true);\r\n    };\r\n\r\n    const handleCloseEditmodal = () => {\r\n        setOpenEditmodal(false);\r\n    };\r\n\r\n\r\n    const [opendeletemodal, setOpenDeletemodal] = React.useState(false);\r\n\r\n    const handleClickOpenDeletemodal = () => {\r\n        setOpenDeletemodal(true);\r\n    };\r\n\r\n    const handleCloseDeletemodal = () => {\r\n        setOpenDeletemodal(false);\r\n    };\r\n\r\n    const handleIncrement = (event) => {\r\n        setCounterBtn(counterbtn + 1);\r\n    };\r\n\r\n    const handleDecrement = (event) => {\r\n        setCounterBtn(counterbtn - 1);\r\n    };\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/AdminHome\");\r\n    };\r\n\r\n    const handleviewdoctors = () => {\r\n        navigate(\"/AdminDoctorDetails\");\r\n    };\r\n\r\n    const [gender, setGender] = React.useState(\"\");\r\n\r\n    function handleChangedGender(event) {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Clinics\r\n                        <Button className={classes.btnregister} onClick={handleviewdoctors} style={{ float: 'right', marginRight: 20, width: '150px', fontFamily: 'Poppins', fontSize: 12.5, fontWeight: 400 }}>View Doctors</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: 30, paddingBottom: 10 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    label=\"Search by Name\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n\r\n                                    }}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button className={classes.btnview} size=\"small\" style={{ fontSize: 12 }}>View</Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <TableContainer style={{ paddingTop: 15 }} >\r\n                            <Table className={classes.tbl} size=\"small\" stickyHeader aria-label=\"sticky table\" >\r\n                                <TableHead >\r\n                                    <TableRow >\r\n                                        {columns.map((column) => (\r\n                                            <TableCell\r\n                                                key={column.id}\r\n                                                align={column.align}\r\n                                                style={{\r\n                                                    minWidth: column.minWidth,\r\n                                                    backgroundColor: '#78B088',\r\n                                                    color: '#fff',\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                }}\r\n\r\n                                            >\r\n                                                {column.label}\r\n                                            </TableCell>\r\n                                        ))}\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody >\r\n                                    {rows\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row) => {\r\n                                            return (\r\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                    {columns.map((column) => {\r\n                                                        const value = row[column.id];\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align={column.align} style={{\r\n                                                                color: '#2C7FB2',\r\n                                                                fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                overflow: 'hidden',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                justifyContent: 'center',\r\n                                                                fontSize: 11.5\r\n                                                            }}>\r\n                                                                {column.format && typeof value === 'number'\r\n                                                                    ? column.format(value)\r\n                                                                    : value}\r\n\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 25]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={8} >\r\n                    <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20, padding: theme.spacing(3) }}>\r\n                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                            fontSize: 18, color: '#00318B', fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n\r\n                        }}>\r\n                            Clinic Details\r\n\r\n                        </Typography>\r\n                        <center>\r\n                            <Grid container>\r\n                                <Grid item xs={12}  >\r\n                                    <center>\r\n                                        <LocalHospitalIcon style={{ fontSize: 40, color: '#2C7FB2' }} />\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 18,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 600,\r\n                                marginTop: 10\r\n                            }}>\r\n                                Akshay Nursing Home\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 14,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 600\r\n\r\n                            }}>\r\n                                REGNO.:- U273893JSk\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 14,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 600\r\n\r\n                            }}>\r\n                                GSTIN:- 567483902\r\n                            </Typography>\r\n\r\n                            <Grid item xs={12} style={{ marginTop: 20, paddingBottom: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 14,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 400\r\n                                    }}>\r\n                                        Plot No 46 Ashoka Housing Society, Mahatma Phule Rd, opp phonix hospital,<br /> Kalewadi Phata, Pune, Maharashtra 411033\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Mobile Number\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        8977889912\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Email ID\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', marginLeft: 10, marginRight: 10, fontFamily: 'Poppins', }}>\r\n                                        support@akshayclinic.com\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Clinic Timing\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        08:00 - 21:00\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        No of Staff\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        5\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 15 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handleClickOpenDeletemodal} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handleClickOpenEditmodal} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </center>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                {/* Add new Patient Dialog */}\r\n\r\n                <Dialog\r\n                    open={openmodal}\r\n                    onClose={handleClosemodal}\r\n                    maxWidth={maxWidth}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Register New Patient\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClosemodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                    <center>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Mobile Number\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"email\" size=\"small\" label=\"Email Id\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"date\" size=\"small\" label=\"DOB\" variant=\"outlined\" />\r\n                                            <FormControl variant=\"outlined\" size='small' className={classes.formControl}  >\r\n                                                <InputLabel >Gender</InputLabel>\r\n                                                <Select\r\n                                                    className={classes.inputFields}\r\n                                                    native\r\n                                                    size='small'\r\n                                                    value={gender}\r\n                                                    onChange={handleChangedGender}\r\n                                                    label=\"Gender\"\r\n                                                    inputProps={{\r\n                                                        name: 'gender',\r\n                                                        id: 'outlined-gender-native-simple',\r\n                                                    }}\r\n\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\" />\r\n                                                    <option value={1}>Male</option>\r\n                                                    <option value={2}>Female</option>\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <center>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} multiline\r\n                                                rows={2}\r\n                                                rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                            />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" />\r\n                                            <Grid container>\r\n                                                <Grid item xs={12} sm={6}>\r\n                                                    <center>\r\n                                                        <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Height\" variant=\"outlined\" style={{ width: 150, float: 'right', marginRight: 5 }} />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm={6}>\r\n                                                    <center>\r\n                                                        <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Weight\" variant=\"outlined\" style={{ width: 150, float: 'left', }} />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnCancle} onClick={handleClosemodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnregister} onClick={handleClosemodal} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                            Register\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n\r\n                {/* Edit Patient Details */}\r\n\r\n                <Dialog\r\n                    open={openeditmodal}\r\n                    onClose={handleCloseEditmodal}\r\n                    maxWidth={maxWidth}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                    <center>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Mobile Number\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"email\" size=\"small\" label=\"Email Id\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"date\" size=\"small\" label=\"DOB\" variant=\"outlined\" />\r\n                                            <FormControl variant=\"outlined\" size='small' className={classes.formControl}  >\r\n                                                <InputLabel >Gender</InputLabel>\r\n                                                <Select\r\n                                                    className={classes.inputFields}\r\n                                                    native\r\n                                                    size='small'\r\n                                                    value={gender}\r\n                                                    onChange={handleChangedGender}\r\n                                                    label=\"Gender\"\r\n                                                    inputProps={{\r\n                                                        name: 'gender',\r\n                                                        id: 'outlined-gender-native-simple',\r\n                                                    }}\r\n\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\" />\r\n                                                    <option value={1}>Male</option>\r\n                                                    <option value={2}>Female</option>\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <center>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} multiline\r\n                                                rows={2}\r\n                                                rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                            />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" />\r\n                                            <Grid container>\r\n                                                <Grid item xs={12} sm={6}>\r\n                                                    <center>\r\n                                                        <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Height\" variant=\"outlined\" style={{ width: 150, float: 'right', marginRight: 5 }} />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm={6}>\r\n                                                    <center>\r\n                                                        <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Weight\" variant=\"outlined\" style={{ width: 150, float: 'left', }} />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnCancle} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnregister} onClick={handleCloseEditmodal} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                            Edit\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n\r\n                {/* for Delete User */}\r\n\r\n                <Dialog\r\n                    open={opendeletemodal}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleCloseDeletemodal}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                            Do you want to Delete Patient's Details?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions style={{ marginTop: 20 }}>\r\n                        <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }} >\r\n                            No\r\n                        </Button>\r\n                        <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }}>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, InputLabel, Typography, Button, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Doctor_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { FixedSizeList } from 'react-window';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n\r\n    { id: 'name', label: 'NAME', minWidth: 50 },\r\n    {\r\n        id: 'mobile',\r\n        label: 'MOBILE NO',\r\n        minWidth: 40,\r\n        align: 'left',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n\r\n];\r\n\r\nfunction createData(name, mobile,) {\r\n    return { name, mobile };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pradeep Musale', '8977889898',),\r\n    createData('Kirti Virnak', '6784848484',),\r\n    createData('Payal Khodke', '7833674758',),\r\n    createData('Akshaya Kulkarni', '7484949490',),\r\n    createData('Sayali Pingle', '9484859033',),\r\n    createData('Radha Kale', '8977889898',),\r\n    createData('Tushar Chaudhari', '6474889786',),\r\n    createData('Amol Umale', '8977889898',),\r\n    createData('Pradeep Musale', '8977889898',),\r\n    createData('Kirti Virnak', '6784848484',),\r\n    createData('Payal Khodke', '7833674758',),\r\n    createData('Akshaya Kulkarni', '7484949490',),\r\n    createData('Sayali Pingle', '9484859033',),\r\n    createData('Radha Kale', '8977889898',),\r\n    createData('Tushar Chaudhari', '6474889786',),\r\n    createData('Amol Umale', '8977889898',),\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        // <List>\r\n        <ListItem button style={style} key={index} >\r\n            <ListItem >\r\n                <ListItemText\r\n                    style={{ borderBottom: '1px solid #F0F0F0' }}\r\n                    primary={`Title : Regular Checkup`}\r\n                    secondary={\r\n                        <React.Fragment>\r\n                            <Typography\r\n                                component={'span'}\r\n                                variant={\"body2\"}\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {`Date : 2021-09-11`}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n            <Divider />\r\n        </ListItem>\r\n        // </List>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AdminDoctorDetails() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [counterbtn, setCounterBtn] = React.useState(0);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n\r\n\r\n    const handleClickOpenmodal = () => {\r\n        setOpenmodal(true);\r\n    };\r\n\r\n    const handleClosemodal = () => {\r\n        setOpenmodal(false);\r\n    };\r\n\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n\r\n\r\n    const handleClickOpenEditmodal = () => {\r\n        setOpenEditmodal(true);\r\n    };\r\n\r\n    const handleCloseEditmodal = () => {\r\n        setOpenEditmodal(false);\r\n    };\r\n\r\n\r\n    const [opendeletemodal, setOpenDeletemodal] = React.useState(false);\r\n\r\n    const handleClickOpenDeletemodal = () => {\r\n        setOpenDeletemodal(true);\r\n    };\r\n\r\n    const handleCloseDeletemodal = () => {\r\n        setOpenDeletemodal(false);\r\n    };\r\n\r\n    const handleIncrement = (event) => {\r\n        setCounterBtn(counterbtn + 1);\r\n    };\r\n\r\n    const handleDecrement = (event) => {\r\n        setCounterBtn(counterbtn - 1);\r\n    };\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/AdminHome\");\r\n    };\r\n\r\n    const handlenewregistration = () => {\r\n        navigate(\"/DoctorPatientRegistration\");\r\n    };\r\n\r\n    const [gender, setGender] = React.useState(\"\");\r\n\r\n    function handleChangedGender(event) {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Doctors\r\n\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: 30, paddingBottom: 10 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    label=\"Search by Name\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n\r\n                                    }}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button className={classes.btnview} size=\"small\" style={{ fontSize: 12 }}>View</Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <TableContainer style={{ paddingTop: 15 }} >\r\n                            <Table className={classes.tbl} size=\"small\" stickyHeader aria-label=\"sticky table\" >\r\n                                <TableHead >\r\n                                    <TableRow >\r\n                                        {columns.map((column) => (\r\n                                            <TableCell\r\n                                                key={column.id}\r\n                                                align={column.align}\r\n                                                style={{\r\n                                                    minWidth: column.minWidth,\r\n                                                    backgroundColor: '#78B088',\r\n                                                    color: '#fff',\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                }}\r\n\r\n                                            >\r\n                                                {column.label}\r\n                                            </TableCell>\r\n                                        ))}\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody >\r\n                                    {rows\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row) => {\r\n                                            return (\r\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}  >\r\n                                                    {columns.map((column) => {\r\n                                                        const value = row[column.id];\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align={column.align} style={{\r\n                                                                color: '#2C7FB2',\r\n                                                                fontFamily: 'Poppins',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                overflow: 'hidden',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                justifyContent: 'center',\r\n                                                                fontSize: 11.5\r\n                                                            }}>\r\n                                                                {column.format && typeof value === 'number'\r\n                                                                    ? column.format(value)\r\n                                                                    : value}\r\n\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 25]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={8} >\r\n                    <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20, padding: theme.spacing(3) }}>\r\n                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                            fontSize: 18, color: '#00318B', fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n\r\n                        }}>\r\n                            Details\r\n                        </Typography>\r\n                        <center>\r\n                            <Grid container>\r\n                                <Grid item xs={12} style={{ marginTop: '-10px' }}>\r\n                                    <center>\r\n                                        <img src=\"Dr.Pradeep.png\" style={{ borderRadius: 100, height: 80 }}></img>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 16,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 600,\r\n                                marginTop: 10\r\n                            }}>\r\n                                Dr. Pradip Musale\r\n                            </Typography>\r\n\r\n\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                            }}>\r\n                                BAMS-MS (12 Years)\r\n                            </Typography>\r\n\r\n                            <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Mobile Number\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        8977889912\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Email ID\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', marginLeft: 10, marginRight: 10, fontFamily: 'Poppins', }}>\r\n                                        pradeep@gmail.com\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Clinic Name\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins',  marginLeft: 10, marginRight: 10  }}>\r\n                                        Akshay Nursing Home\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', borderLeft: '0px',  paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Category\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        Gynecologist\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12}>\r\n\r\n                                <Grid item xs={6} style={{ border: '1px solid lightgray', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Address\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                        8th floor, City Avenue, Mumbai-Banglore Highway, Wakad, Pune, 411007\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Morning Shift\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        08:00 - 02:00\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid lightgray', borderLeft: '0px',borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Evening Shift\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        04:00 - 10:00\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handleClickOpenDeletemodal} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handleClickOpenEditmodal} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </center>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                {/* Add new Patient Dialog */}\r\n\r\n                <Dialog\r\n                    open={openmodal}\r\n                    onClose={handleClosemodal}\r\n                    maxWidth={maxWidth}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Register New Patient\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClosemodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                    <center>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Mobile Number\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"email\" size=\"small\" label=\"Email Id\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"date\" size=\"small\" label=\"DOB\" variant=\"outlined\" />\r\n                                            <FormControl variant=\"outlined\" size='small' className={classes.formControl}  >\r\n                                                <InputLabel >Gender</InputLabel>\r\n                                                <Select\r\n                                                    className={classes.inputFields}\r\n                                                    native\r\n                                                    size='small'\r\n                                                    value={gender}\r\n                                                    onChange={handleChangedGender}\r\n                                                    label=\"Gender\"\r\n                                                    inputProps={{\r\n                                                        name: 'gender',\r\n                                                        id: 'outlined-gender-native-simple',\r\n                                                    }}\r\n\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\" />\r\n                                                    <option value={1}>Male</option>\r\n                                                    <option value={2}>Female</option>\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <center>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} multiline\r\n                                                rows={2}\r\n                                                rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                            />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" />\r\n                                            <Grid container>\r\n                                                <Grid item xs={12} sm={6}>\r\n                                                    <center>\r\n                                                        <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Height\" variant=\"outlined\" style={{ width: 150, float: 'right', marginRight: 5 }} />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm={6}>\r\n                                                    <center>\r\n                                                        <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Weight\" variant=\"outlined\" style={{ width: 150, float: 'left', }} />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnCancle} onClick={handleClosemodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnregister} onClick={handleClosemodal} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                            Register\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n\r\n                {/* Edit Patient Details */}\r\n\r\n                <Dialog\r\n                    open={openeditmodal}\r\n                    onClose={handleCloseEditmodal}\r\n                    maxWidth={maxWidth}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                    <center>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Mobile Number\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"email\" size=\"small\" label=\"Email Id\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" type=\"date\" size=\"small\" label=\"DOB\" variant=\"outlined\" />\r\n                                            <FormControl variant=\"outlined\" size='small' className={classes.formControl}  >\r\n                                                <InputLabel >Gender</InputLabel>\r\n                                                <Select\r\n                                                    className={classes.inputFields}\r\n                                                    native\r\n                                                    size='small'\r\n                                                    value={gender}\r\n                                                    onChange={handleChangedGender}\r\n                                                    label=\"Gender\"\r\n                                                    inputProps={{\r\n                                                        name: 'gender',\r\n                                                        id: 'outlined-gender-native-simple',\r\n                                                    }}\r\n\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\" />\r\n                                                    <option value={1}>Male</option>\r\n                                                    <option value={2}>Female</option>\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <center>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <TextField className={classes.inputFields} multiline\r\n                                                rows={2}\r\n                                                rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                            />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" />\r\n                                            <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" />\r\n                                            <Grid container>\r\n                                                <Grid item xs={12} sm={6}>\r\n                                                    <center>\r\n                                                        <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Height\" variant=\"outlined\" style={{ width: 150, float: 'right', marginRight: 5 }} />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm={6}>\r\n                                                    <center>\r\n                                                        <TextField className={classes.inputFields} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Weight\" variant=\"outlined\" style={{ width: 150, float: 'left', }} />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnCancle} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid xs={12} sm={6}>\r\n                                        <Button className={classes.btnregister} onClick={handleCloseEditmodal} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                            Edit\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n\r\n                {/* for Delete User */}\r\n\r\n                <Dialog\r\n                    open={opendeletemodal}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleCloseDeletemodal}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                            Do you want to Delete Patient's Details?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions style={{ marginTop: 20 }}>\r\n                        <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }} >\r\n                            No\r\n                        </Button>\r\n                        <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }}>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\n\r\n\r\nexport const Clinic_Doctors = async () => {\r\n    try{\r\n    const clinicdata = await axios.post(ip + 'Web_Admin_GetAllClinicDetails');\r\n    return clinicdata?.data?.ClinicData;\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Switch, Avatar, Typography, Button, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Grid, Paper, Link, Slide } from \"@material-ui/core\";\r\nimport AdminNavbar from './Admin_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nimport { Clinic_Doctors } from '../Admin_Apis/Clinic_Details/index';\r\n\r\nconst loginapi = 'http://13.233.217.107:8080/api/Login';\r\nconst searchapi = 'http://13.233.217.107:8080/api/Web_Admin_SearchDoctor';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'ClinicName',\r\n        headerName: 'Clinic Name',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nexport default function Admin_Doctor_Clinics() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [clinicData, setclinicData] = useState([]);\r\n    const [doctordetails, setdoctordetails] = useState('');\r\n    const [searchterm, setsearchterm] = useState('');\r\n\r\n    const fetchClinicData = async () => {\r\n        try {\r\n            const clinicInfo = await Clinic_Doctors();\r\n            setclinicData(clinicInfo);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleCellClick = async (id) => {\r\n        setdoctordetails(id);\r\n    }\r\n\r\n\r\n    const searchDoctor = async (searchterm) => {\r\n        try {\r\n            const DoctorInfo = await axios.post(searchapi, { Name: searchterm });\r\n            setclinicData(DoctorInfo?.data?.Doctor);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if (doctordetails) {\r\n            try {\r\n                await axios.post(loginapi, { MobileNo: doctordetails.MobileNo, Password: doctordetails.Password, Role: doctordetails.Role })\r\n                    .then(Json => {\r\n                        window.localStorage.setItem(\"userdata\", JSON.stringify(Json?.data));\r\n                        let responseData = Json.data\r\n                        if (responseData.success == '200') {\r\n                            if (responseData.Role === \"Doctor\") {\r\n                                window.open('/DoctorHome', '_blank')\r\n                            }\r\n                            else {\r\n                                window.open('/Staff_Home', '_blank')\r\n                            }\r\n                        }\r\n                    }).catch(function (error) {\r\n                        //handle error\r\n                        console.log(error.response.data.message);\r\n                        alert(error.response.data.message);\r\n                    });\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } else {\r\n            alert('Please Select Doctor from list');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchClinicData();\r\n    }, []);\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/AdminAddClinic\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <AdminNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Clinics\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: 30, paddingBottom: 10 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    placeholder=\"Search by Clinic Name\"\r\n                                    onChange={(e) => setsearchterm(e.target.value)}\r\n                                    value={searchterm}\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button onClick={() => searchDoctor(searchterm)} className={classes.btnview} size=\"small\" style={{ fontSize: 12 }}>View</Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <DataGrid\r\n                            style={{ height: 340, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                            rows={clinicData}\r\n                            rowHeight={30}\r\n                            columns={columns}\r\n                            columnWidth={10}\r\n                            pageSize={10}\r\n                            onRowClick={(newSelection) => {\r\n                                handleCellClick(newSelection.row)\r\n                            }}\r\n                        />\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={8} >\r\n                    <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                            fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins', textDecorationLine: 'underline', textUnderlineOffset: '1px', textDecorationThickness: '1px',\r\n                            fontStyle: 'normal',\r\n\r\n                        }}>\r\n                            Profile\r\n                        </Typography>\r\n                        <center>\r\n                            <div style={{ paddingBottom: 10 }}>\r\n                                {doctordetails ? doctordetails.ProfileImage ?\r\n                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={doctordetails.ProfileImage} /> :\r\n                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} /> : <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                            </div>\r\n\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 16,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 600\r\n                            }}>\r\n                                {doctordetails ? doctordetails.FirstName : \"NA\"} {doctordetails ? doctordetails.LastName : \"\"}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 14,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 400\r\n                            }}>\r\n                                UID- {doctordetails ? doctordetails.UserId : null}\r\n                            </Typography>\r\n                            <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Mobile Number\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {doctordetails ? doctordetails.MobileNo : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Email ID\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', marginLeft: 10, marginRight: 10, fontFamily: 'Poppins', }}>\r\n                                        {doctordetails ? doctordetails.Email ? doctordetails.Email : doctordetails.StfEmail : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Education\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {doctordetails ? doctordetails.Education : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Category\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {doctordetails ? doctordetails.CodeValueCategory : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12}>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Gender\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {doctordetails ? doctordetails.Gender ? doctordetails.Gender : doctordetails.StfGender : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Address\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                        {doctordetails ? doctordetails.Address ? doctordetails.Address : doctordetails.StfAddress : \"NA\"} {doctordetails ? doctordetails.City : null} {doctordetails ? doctordetails.State : null} {doctordetails ? doctordetails.Pincode : null} {doctordetails ? doctordetails.Country : null}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Role\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                        {doctordetails ? doctordetails.Role : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid xs={12} style={{ marginTop: 15 }}>\r\n                                <center>\r\n                                    <Button onClick={() => handleLogin()} className={classes.btnregister}>Login As {doctordetails.FirstName ? doctordetails.FirstName : null}</Button>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                        </center>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 160,\r\n        marginTop: 10,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AppBar, Toolbar, CssBaseline, Typography, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Avatar } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Footer from '../Footer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ip from '../../ipaddress/ip';\r\nimport axios from 'axios';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    color: '#2C7FB2'\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    backgroundColor: '#2C7FB2',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n    color: '#fff'\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n    backgroundColor: '#2C7FB2',\r\n    color: '#fff'\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  clinicname: {\r\n    // flexGrow: 1,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(0),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(0),\r\n    },\r\n    flex: 1,\r\n    textAlign: 'center',\r\n    color: '#00318B',\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis'\r\n  },\r\n  drname: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    padding: theme.spacing(1),\r\n    flex: 0.2,\r\n    alignSelf: 'right',\r\n    textAlign: 'right',\r\n    color: '#00318B',\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis'\r\n\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    color: '#78B088',\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n\r\n  services: {\r\n    color: '#78B088',\r\n    fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n  },\r\n  report: {\r\n    justifyContent: 'center',\r\n    color: '#78B088',\r\n    fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    fontWeight: 'bold'\r\n  },\r\n  grid: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  }\r\n}));\r\n\r\n\r\nexport default function DoctorNavbar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open1 = Boolean(anchorEl);\r\n  const [doctordata, setdoctordata] = useState([]);\r\n  const [ClinicDetails, setClinicDetails] = useState([]);\r\n  const [authProfile, setAuthProfile] = React.useState(true);\r\n  const [anchorElProfile, setAnchorElProfile] = React.useState(false);\r\n  const [Subscriptiondata, setSubscriptiondata] = React.useState('');\r\n  // const openprofile = Boolean(anchorElProfile);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const fetchDoctorProfile = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let userid = parsed.userid;\r\n    let Role = parsed.Role;\r\n    try {\r\n      const doctorInfo = await axios.post(ip + 'ShowUserDetailUsingId', { UserId: userid, Role: Role });\r\n      console.log(doctorInfo?.data?.NewUser);\r\n      let dato = doctorInfo?.data?.NewUser[0];\r\n      setdoctordata(dato);\r\n    }\r\n    catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const fetchClinicDetails = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n    \r\n    try {\r\n      const ClinicInfo = await axios.post(ip + 'ShowClinicDetailsUsingId', {  ClinicId: ClinicId });\r\n      console.log(ClinicInfo?.data?.NewUser);\r\n      let dato = ClinicInfo?.data?.Doctor;\r\n      setClinicDetails(dato);\r\n    }\r\n    catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const fetch_Subscription_Profile = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n    try {\r\n      const ClinicInfo = await axios.post(ip + 'GetSubscription', { ClinicId: ClinicId, });\r\n      setSubscriptiondata(ClinicInfo?.data?.Subscription);\r\n      testing(ClinicInfo?.data?.Subscription);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const testing = async (subcription) => {\r\n    const now = new Date();\r\n    const current = now.toISOString().split('T')[0];\r\n    if (subcription <= current) {\r\n      console.log('subcription expired')\r\n      try {\r\n        localStorage.removeItem('userdata');\r\n        navigate(\"/\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    else {\r\n      console.log('still have subcription')\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    fetchDoctorProfile();\r\n    fetchClinicDetails();\r\n    fetch_Subscription_Profile();\r\n  }, [])\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setAuthProfile(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorElProfile(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorElProfile(true);\r\n    navigate(\"/Staff_Profile\");\r\n  };\r\n\r\n  const handlelogout = () => {\r\n    setAnchorElProfile(true);\r\n    localStorage.removeItem('userdata');\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const menuItems = [\r\n    {\r\n      text: 'Home',\r\n      icon: HomeIcon,\r\n      onClick: () => navigate(\"/Staff_Home\"),\r\n    },\r\n    {\r\n      text: 'Dashboard',\r\n      icon: DashboardIcon,\r\n      onClick: () => navigate(\"/Staff_Dashboard\"),\r\n    },\r\n    {\r\n      text: \"Appointments On TV\",\r\n      icon: TvIcon,\r\n      onClick: () => window.open('/Staff_TV_TodaysAppointments', '_blank'),\r\n    },\r\n    {\r\n      text: 'Book Appointment',\r\n      icon: AssignmentTurnedInIcon,\r\n      onClick: () => navigate(\"/Staff_Book_Appointment\"),\r\n    },\r\n    {\r\n      text: 'Clinic Patients',\r\n      icon: PeopleOutlineIcon,\r\n      onClick: () => navigate(\"/Staff_ClinicPatients\"),\r\n    },\r\n    {\r\n      text: \"Upload Reports\",\r\n      icon: AssignmentIcon,\r\n      onClick: () => navigate(\"/Staff_Reports\"),\r\n    },\r\n    {\r\n      text: 'Home Visitor Requests',\r\n      icon: ChatIcon,\r\n      onClick: () => navigate('/Staff_Home_Visit_Request'),\r\n    },\r\n    // {\r\n    //   text: 'Clinic Staff',\r\n    //   icon: SupervisorAccountIcon,\r\n    //   onClick: () => navigate('/DoctorClinicStaff'),\r\n    // },\r\n    {\r\n      text: \"Home Visitors\",\r\n      icon: DirectionsWalkIcon,\r\n      onClick: () => navigate(\"/Staff_Home_Visitors\"),\r\n    },\r\n    // {\r\n    //   text: \"Medicines\",\r\n    //   icon: LocalHospitalIcon,\r\n    //   onClick: () => navigate(\"/DoctorAddMedicine\"),\r\n    // },\r\n    // {\r\n    //   text: \"Clinic Services\",\r\n    //   icon: SettingsIcon,\r\n    //   onClick: () => navigate(\"/DoctorClinicServices\"),\r\n    // },\r\n\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        style={{ backgroundColor: 'white' }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            open={open1}\r\n            onClose={handleClose}\r\n          >\r\n\r\n          </Menu>\r\n          <div>\r\n            <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n          </div>\r\n          <div className={classes.clinicname}>\r\n            <Typography variant=\"h5\" noWrap={true} style={{ color: '#2C7FB2' }}>\r\n              {ClinicDetails.ClinicName}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.drname}>\r\n            <Typography variant=\"h8\" noWrap={true} style={{ color: '#2C7FB2' }}   >\r\n              Dr. {doctordata.FirstName} {doctordata.LastName}\r\n            </Typography>\r\n          </div>\r\n          {auth && (\r\n            <div className={classes.profile}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"primary\"\r\n\r\n              >\r\n                {doctordata.ProfileImage ?\r\n                  <Avatar style={{ borderRadius: 50, height: 40, width: 40 }} src={doctordata.ProfileImage} /> :\r\n                  <Avatar style={{ borderRadius: 50, height: 40, width: 40 }} />}\r\n                {/* <AccountCircle style={{ height: 35, width: 35 }} /> */}\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElProfile}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={anchorElProfile}\r\n                onClick={() => setAnchorElProfile(false)}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar} style={{ color: '#fff' }}>\r\n          <IconButton onClick={handleDrawerClose} style={{ color: '#fff' }}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menuItems.map(({ text, icon: Icon, onClick }, index) => (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemIcon style={{ color: '#fff' }}>\r\n                <Icon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n\r\n      </Drawer>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const Add_Broadcast = async (obj) => {\r\n    try {\r\n        const broadcastmessage = await axios.post(ip + 'Web_AddBroadcast', obj)\r\n        return JSON.stringify(broadcastmessage?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, DialogActions, DialogTitle, DialogContentText, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { Add_Broadcast } from '../../../../Apis/Staff/Broadcast_Message/index';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const BroadcastMessage = ({ show, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [title, settitle] = React.useState('');\r\n    const [description, setdescription] = React.useState('');\r\n\r\n    const addBroadcastMessage = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        let userid = parsed.userid;\r\n\r\n        const obj = {\r\n            DoctorId: userid,\r\n            ClinicId: clinicid,\r\n            Title: title,\r\n            Discription: description\r\n        }\r\n        const request = await Add_Broadcast(obj);\r\n        let parse = JSON.parse(request);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            handlemodal();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                onClose={handlemodal}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Broadcast Message\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <center>\r\n                                    <TextField className={classes.inputFields} onChange={(e) => settitle(e.target.value)} id=\"outlined-basic\" label=\"Title\" variant=\"outlined\" />\r\n                                    <TextField className={classes.inputFields} onChange={(e) => setdescription(e.target.value)} multiline rows={3} rowsMax={6} id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" />\r\n                                    <Alert severity=\"warning\" style={{fontsize:15, position:'relative',bottom:14,width:400}}>Note : This message broadcasted to all the clinic patients</Alert>\r\n                                    <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={() => handlemodal(false)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                        </Grid>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={() => addBroadcastMessage()} style={{ float: 'left', marginLeft: 20 }}>Send</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </center>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        width: 400,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport { BroadcastMessage } from './components/Broadcast_Messages/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Staff_Home() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n\r\n    const handleDashboard = () => {\r\n        navigate(\"/Staff_Dashboard\");\r\n    };\r\n\r\n    const handleTodaysAppointment = () => {\r\n        navigate(\"/Staff_Todays_Appointment\");\r\n    };\r\n\r\n    const handleAppointmentsOnTV = () => {\r\n        navigate(\"/Staff_TV_TodaysAppointments\");\r\n    };\r\n\r\n    const handleBookAppointment = () => {\r\n        navigate(\"/Staff_Book_Appointment\");\r\n    };\r\n\r\n    const handleClinicPatients = () => {\r\n        navigate(\"/Staff_ClinicPatients\");\r\n    };\r\n\r\n    const handleUploadReports = () => {\r\n            navigate(\"/Staff_Reports\");\r\n    };\r\n\r\n    const handlePaymentReport = () => {\r\n        navigate(\"/DoctorPaymentReports\");\r\n    };\r\n\r\n    const handleClinicStaff = () => {\r\n        navigate(\"/DoctorClinicStaff\");\r\n    };\r\n\r\n    const handleAddMedicines = () => {\r\n        navigate(\"/DoctorAddMedicine\");\r\n    };\r\n\r\n    const handleHomeVisitor = () => {\r\n        navigate(\"/Staff_Home_Visitors\");\r\n    };\r\n\r\n    const handleFacilities = () => {\r\n        navigate(\"/DoctorClinicServices\");\r\n    };\r\n\r\n    const handleAddServices = () => {\r\n        navigate(\"/DoctorClinicServices\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                            marginLeft: 10,\r\n\r\n                        }}>\r\n                        Home\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} onClick={handleDashboard} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"Dashboard-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Dashboard <br /><br />\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} onClick={handleTodaysAppointment} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"today's Appointment-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Today's <br />Appointments\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} onClick={() => window.open('/Staff_TV_TodaysAppointments', '_blank')} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"todays appointment for tv-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Appointments <br />On TV\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} onClick={handleBookAppointment} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"Book Appointment-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Book <br />Appointments\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} onClick={handleClinicPatients} >\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"clinic patients-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Clinic <br /> Patients\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} onClick={handleUploadReports}>\r\n                    <Paper elevation={6} className={classes.paper} >\r\n                        <center>\r\n                            <img src=\"reports-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Patient <br /> Reports\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} onClick={handleHomeVisitor}>\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <center>  <img src=\"homevisitoricon.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Home <br /> Visitors\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {/* <Grid item xs={12} sm={2} onClick={handleClinicStaff} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"Clinic Staff-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Clinic <br /> Staff\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid> */}\r\n\r\n                {/* <Grid item xs={12} sm={2} onClick={handleAddMedicines} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"medicines-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Medicines <br />Inventory\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid> */}\r\n\r\n                {/* <Grid item xs={12} sm={2} onClick={handleAddServices}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"services-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Clinic <br /> Services\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid> */}\r\n\r\n                <Grid item xs={12} sm={3} onClick={() => setOpenmodal(true)}>\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <center>\r\n                            <img src=\"broadcast-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Broadcast <br /> Messages\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            \r\n                {/* <Grid item xs={12} sm={2} onClick={handlePaymentReport}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginTop: 20 }}>\r\n                        <center>\r\n                            <img src=\"Dashboard-01.png\" style={{ height: 60, width: 60 }}></img>\r\n                            <Typography variant=\"h5\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: 10,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                Reports <br /> Analysis\r\n                            </Typography>\r\n                        </center>\r\n                    </Paper>\r\n                </Grid> */}\r\n\r\n                {openmodal ? <BroadcastMessage show={openmodal} handlemodal={() => setOpenmodal(false)} /> : null}\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        borderRadius: 10,\r\n        paddingTop: 40,\r\n        paddingBottom: 40,\r\n        cursor: 'pointer'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 5,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n}));\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\n\r\nexport const PatientInQueue = async () => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n    try {\r\n        const res = await axios.post(ip + 'Web_Staff_ShowPatientInQueue', { ClinicId: ClinicId });\r\n        return res?.data?.Appointment;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n\r\nexport const BookedAppointments = async () => {\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let ClinicId = parsed.ClinicId;\r\n    try {\r\n        const res = await axios.post(ip + 'Web_Staff_BookedAppointments', { ClinicId: ClinicId });\r\n        return res?.data?.Appointment;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n\r\nexport const SendIn = async (id, UserId, FirstName) => {\r\n\r\n    try {\r\n        const res = await axios.patch(ip + 'Web_SendIn', {\r\n            id: id,\r\n            AppointmentStatus: 'Send In',\r\n            UserId: UserId,\r\n            FirstName: FirstName\r\n        });\r\n        return { id, UserId, FirstName };\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n\r\nexport const PatientIn = async (id, FirstName) => {\r\n\r\n    try {\r\n        const res = await axios.patch(ip + 'Web_PatientIn', {\r\n            id: id,\r\n            AppointmentStatus: 'Patient In',\r\n            FirstName: FirstName\r\n        });\r\n        return { id, FirstName };\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, Avatar, Grid, Paper, } from \"@material-ui/core\";\r\nimport { PatientIn, SendIn } from '../../../../../Apis/PatientInQueue/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport function PatientInueue_List({ data }) {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const [sendIn, setsendIn] = useState([]);\r\n    const [patientIn, setpatientIn] = useState([]);\r\n    console.log(data)\r\n    const fetchSendIn = async (id, UserId, FirstName) => {\r\n        try {\r\n            const data = await SendIn(id, UserId, FirstName);\r\n            setsendIn(data);\r\n            window.location.reload();\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    const fetchTreatNow = async (item) => {\r\n        navigate('/Staff_Patient_Details_SendIn', { state: { details: item } })\r\n    }\r\n\r\n    if (data.length > 0) {\r\n        return (\r\n            <>\r\n                {data.map((item) => {\r\n\r\n                    if (item.AppointmentStatus == 'Patient In') {\r\n                        return (\r\n                            <>\r\n                                {item.ShortNote == 'Emergency' ? <>\r\n                                    <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                        <div>\r\n                                            <center>\r\n                                                {item.ProfileImage ?\r\n                                                    <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} src={item.ProfileImage} /> :\r\n                                                    <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />}\r\n                                            </center>\r\n                                        </div>\r\n                                        <Paper className={classes.paper2} elevation={4} style={{ marginRight: 25, marginLeft: 25, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, }}>\r\n                                            <Grid item xs={12} style={{\r\n                                                color: '#707070', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '13px', overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis', width: 120,\r\n                                                marginTop: '-5px'\r\n                                            }}>\r\n                                                {item.FirstName} {item.LastName}\r\n                                            </Grid>\r\n                                            <Grid item xs={12} style={{ textAlign: 'center', color: '#707070' }}>\r\n                                                {item.AppointmentTime}\r\n                                            </Grid>\r\n                                            <Grid item xs={12} style={{ textAlign: 'center', color: '#707070', paddingBottom: 10 }}>\r\n                                                {item.AppointmentStatus}\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                        <div>\r\n                                            <center>\r\n                                                <Button size='small' onClick={() => fetchSendIn(item.id, item.UserId, item.FirstName)}\r\n                                                    style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#e50000', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Send In</Button>\r\n                                            </center>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </> :\r\n                                    <>\r\n                                        <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                            <div>\r\n                                                <center>\r\n                                                    {item.ProfileImage ?\r\n                                                        <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} src={item.ProfileImage} /> :\r\n                                                        <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />}\r\n                                                </center>\r\n                                            </div>\r\n                                            <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, }}>\r\n                                                <Grid item xs={12} style={{\r\n                                                    color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '13px', overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis', width: 120,\r\n                                                    marginTop: '-5px'\r\n                                                }}>\r\n                                                    {item.FirstName} {item.LastName}\r\n                                                </Grid>\r\n                                                <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n                                                    {item.AppointmentTime}\r\n                                                </Grid>\r\n                                                <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2', paddingBottom: 10 }}>\r\n                                                    {item.AppointmentStatus}\r\n                                                </Grid>\r\n                                            </Paper>\r\n                                            <div>\r\n                                                <center>\r\n                                                    <Button size='small' onClick={() => fetchSendIn(item.id, item.UserId, item.FirstName)}\r\n                                                        style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#78B088', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Send In</Button>\r\n                                                </center>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </>}\r\n                            </>\r\n                        ); //return close\r\n\r\n                    } //if close\r\n                    else if (item.AppointmentStatus == 'Send In') {\r\n                        return (\r\n                            <>\r\n                                <Grid item xs={2} style={{ marginTop: 5, marginLeft: '-30px', cursor: 'pointer', marginBottom: 0, paddingBottom: 0 }} onClick={() => fetchTreatNow(item)}>\r\n                                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                        <center> {item.ProfileImage ?\r\n                                            <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} src={item.ProfileImage} /> :\r\n                                            <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />} </center>\r\n                                    </Grid>\r\n                                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#78B088' }}>\r\n                                        <Grid item xs={12} style={{\r\n                                            color: '#fff', textAlign: 'center', paddingTop: 40, overflow: 'hidden', fontSize: '13px',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis', width: 120,\r\n                                            marginTop: '-5px'\r\n                                        }}>\r\n                                            {item.FirstName} {item.LastName}\r\n                                        </Grid>\r\n                                        <Grid item xs={12} style={{ textAlign: 'center', color: '#fff' }}>\r\n                                            {item.AppointmentTime}\r\n                                        </Grid>\r\n                                        <Grid item xs={12} style={{ textAlign: 'center', color: '#fff', paddingBottom: 10 }}>\r\n                                            {item.AppointmentStatus}\r\n                                        </Grid>\r\n                                        {/* <Grid item xs={12} style={{ marginTop: 5 }}>\r\n                                            <Typography style={{ textAlign: 'center', color: '#fff', fontWeight: 600, fontSize: 18 }}> Treat Now </Typography>\r\n                                        </Grid> */}\r\n\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </>\r\n                        ); //return close\r\n                    }\r\n                    // else if (item.ShortNote == 'Emergency') {\r\n                    //     return (\r\n                    //         <>\r\n\r\n                    //         </>\r\n                    //     );\r\n                    // }\r\n                    else {\r\n                        return (\r\n                            <>\r\n                                <Grid item xs={2} style={{ paddingTop: 30, marginLeft: '-30px' }}>\r\n                                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                        <center>\r\n                                            <Avatar style={{ borderRadius: 50, height: 60, width: 60 }} /> </center>\r\n                                    </Grid>\r\n                                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                                        <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                                            No Patients\r\n                                        </Grid>\r\n\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </>\r\n                        );\r\n                    }\r\n                }\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                        <center>\r\n                            <Avatar style={{ borderRadius: 50, height: 60, width: 60 }} /> </center>\r\n                    </Grid>\r\n                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                        <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                            No Patients\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    paper2: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        backgroundColor: '#fff'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 30,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, FormControl, Select, DialogTitle, DialogContentText, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { Time, Note_for_Doctor, Edit_App_for_Dashboard } from '../../../../../Apis/Dashboard/Edit_Appointment_From_PatientIn/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const Edit_Appointment_From_PatientIn_Queue = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [time, settime] = useState([]);\r\n    const [doctorsNote, setdoctorsNote] = useState([]);\r\n    const [reason, setReason] = useState(data.AppointmentReason ? data.AppointmentReason : '');\r\n    const [notefordoctor, setnotefordoctor] = useState(data.ShortNote ? data.ShortNote : '');\r\n    const [bp, setBp] = useState(data.Patient_BP ? data.Patient_BP : '');\r\n    const [temp, setTemp] = useState(data.Patient_Temp ? data.Patient_Temp : '');\r\n    const [height, setHeight] = useState(data.Patient_Height ? data.Patient_Height : '');\r\n    const [weight, setWeight] = useState(data.Patient_Weight ? data.Patient_Weight : '');\r\n    const [plus, setPlus] = useState(data.Patient_Plus ? data.Patient_Plus : '');\r\n    const [spo2, setSpo2] = useState(data.Patient_SPO2 ? data.Patient_SPO2 : '');\r\n    const [appDate, setappDate] = useState(data.AppointmentDate ? data.AppointmentDate : '');\r\n    const [appTime, setappTime] = useState(data.AppointmentTime ? data.AppointmentTime : '');\r\n\r\n    useEffect(() => {\r\n        fetchtimings();\r\n        fetchNotefordoctor();\r\n    }, [])\r\n\r\n    const fetchtimings = async () => {\r\n        const timingInfo = await Time()\r\n        settime(timingInfo);\r\n    }\r\n\r\n    const fetchNotefordoctor = async () => {\r\n        const doctorsNoteInfo = await Note_for_Doctor()\r\n        setdoctorsNote(doctorsNoteInfo);\r\n    }\r\n\r\n    const EditAppointmentDetails = async () => {\r\n        const currentTime = new Date();\r\n        let systemTime = currentTime.toTimeString();\r\n        let tdate = currentTime.toISOString().split('T')[0];\r\n        if (appTime < systemTime) {\r\n            alert(`You can't not set Appointment at ${appTime}`);\r\n            return\r\n        }\r\n        else if (appDate < tdate) {\r\n            alert(`You cannot set appointment for ${appDate}`);\r\n            return\r\n        }\r\n        const obj = {\r\n            AppointmentStatus: 'Patient In',\r\n            AppointmentTime: appTime,\r\n            AppointmentDate: appDate,\r\n            Patient_BP: bp,\r\n            Patient_Weight: weight,\r\n            Patient_Height: height,\r\n            Patient_SPO2: spo2,\r\n            Patient_Plus: plus,\r\n            Patient_Temp: temp,\r\n            ShortNote: notefordoctor,\r\n            AppointmentReason: reason,\r\n            id: data.id\r\n        }\r\n        const editrequest = await Edit_App_for_Dashboard(obj);\r\n        let parse = JSON.parse(editrequest);\r\n        if (parse.success === \"200\") {\r\n            alert(parse.message);\r\n            handlemodal();\r\n            window.location.reload()\r\n        }\r\n        else{\r\n            alert(parse.message);\r\n        }\r\n\r\n    }\r\n    console.log(data)\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                // BackdropProps={{ invisible: true }}\r\n                // PaperProps={{\r\n                //     style: {\r\n                //       backgroundColor: 'transparent',\r\n                //       boxShadow: 'none',\r\n                //     },\r\n                //   }}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Appointment Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        {data.FirstName} {data.LastName}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        PID:- {data.PatientId}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Time\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Date\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                        <Select\r\n                                            className={classes.textField}\r\n                                            native\r\n                                            value={appTime}\r\n                                            onChange={(e) => setappTime(e.target.value)}\r\n                                            label=\"time\"\r\n                                            inputProps={{\r\n                                                name: 'time',\r\n                                                id: 'outlined-appointment-native-simple',\r\n                                            }}\r\n                                            style={{ width: '100%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                            {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                                        <TextField\r\n                                            InputProps={{\r\n                                                className: classes.input\r\n                                            }}\r\n                                            InputLabelProps={{\r\n                                                shrink: true\r\n                                            }}\r\n                                            variant=\"outlined\"\r\n                                            value={appDate}\r\n                                            onChange={(e) => setappDate(e.target.value)}\r\n                                            id=\"date\"\r\n                                            label=\"\"\r\n                                            type=\"date\"\r\n                                            size=\"small\"\r\n                                            style={{ width: '100%', fontSize: 14 }}\r\n                                        />\r\n                                    </FormControl>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} style={{ marginTop: 10 }}>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#2C7FB2',\r\n                                            fontSize: 18,\r\n                                        }}>\r\n                                        Vital Information\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 10 }}>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"BP\"\r\n                                        value={bp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setBp(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Temp\"\r\n                                        value={temp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setTemp(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Height\"\r\n                                        value={height}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setHeight(e.target.value)}}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 15 }}>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Weight\"\r\n                                        value={weight}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setWeight(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"SPO2\"\r\n                                        value={spo2}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setSpo2(e.target.value)}}}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Pulse Rate\"\r\n                                        value={plus}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setPlus(e.target.value)}}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 17 }}>\r\n                                <TextField className={classes.inputFields} size='small' value={reason} onChange={(e) => setReason(e.target.value)} id=\"outlined-basic\" label=\"Reason\" variant=\"outlined\" />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 12 }}>\r\n                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                    <Select\r\n                                        className={classes.textField}\r\n                                        native\r\n                                        value={notefordoctor}\r\n                                        onChange={(e) => setnotefordoctor(e.target.value)}\r\n                                        label=\"time\"\r\n                                        inputProps={{\r\n                                            name: 'time',\r\n                                            id: 'outlined-appointment-native-simple',\r\n                                        }}\r\n\r\n                                        style={{ width: '150%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" >Note For Doctor</option>\r\n                                        {doctorsNote.map(v => (<option value={v.NoteForDoctor}>{v.NoteForDoctor}</option>))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handlemodal} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button onClick={() => EditAppointmentDetails()} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, Avatar, Grid, Paper, } from \"@material-ui/core\";\r\nimport { PatientIn, SendIn } from '../../../../../Apis/PatientInQueue/index';\r\nimport { Edit_Appointment_From_PatientIn_Queue } from './Edit_appointment_from_patient_in';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport function BookedAppointment_List({ data }) {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const [patientIn, setpatientIn] = useState([]);\r\n    const [openmodal, setopenmodal] = useState(false);\r\n    const [patientdetails, setpatientdetails] = useState([]);\r\n\r\n    const fetchPatientIn = async (item) => {\r\n        // const data = await PatientIn(id, FirstName);\r\n        // setpatientIn(data);\r\n        setpatientIn(item)\r\n        setopenmodal(true);\r\n    }\r\n\r\n\r\n    if (data.length !== 0) {\r\n        return (\r\n            <>\r\n                {data.map((item) => {\r\n                  \r\n                    return (\r\n                        <>\r\n                            <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                <div>\r\n                                    <center>\r\n                                        {item.ProfileImage ?\r\n                                            <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} src={item.ProfileImage} /> :\r\n                                            <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />}\r\n                                    </center>\r\n                                </div>\r\n                                <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, }}>\r\n                                    <Grid item xs={12} style={{\r\n                                        color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '13px', overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis', width: 120,\r\n                                        marginTop: '-5px'\r\n                                    }}>\r\n                                        {item.FirstName} {item.LastName}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n                                        {item.AppointmentTime}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2', paddingBottom: 10 }}>\r\n                                        {item.AppointmentStatus}\r\n                                    </Grid>\r\n                                </Paper>\r\n                                <div>\r\n                                    <center>\r\n                                        <Button size='small' onClick={() => fetchPatientIn(item)}\r\n                                            style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#2C7FB2', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Patient In</Button>\r\n                                    </center>\r\n                                </div>\r\n                            </Grid>\r\n\r\n                        </>\r\n                    ); //return close\r\n\r\n                    //     } //if close\r\n                    //     else {\r\n                    //         return (\r\n                    //             <>\r\n                    //                 <Grid item xs={2} style={{ marginTop: 10, marginLeft: '-30px' }}>\r\n                    //                     <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                    //                         <center>\r\n                    //                             <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} /> </center>\r\n                    //                     </Grid>\r\n                    //                     <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                    //                         <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                    //                             No Patients\r\n                    //                         </Grid>\r\n\r\n                    //                     </Paper>\r\n                    //                 </Grid>\r\n                    //             </>\r\n                    //         );\r\n                    //     }\r\n                }\r\n\r\n                )}\r\n                {openmodal ? <Edit_Appointment_From_PatientIn_Queue show={openmodal} data={patientIn} handlemodal={() => setopenmodal(false)} /> : null}\r\n\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                        <center>\r\n                            <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} /> </center>\r\n                    </Grid>\r\n                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                        <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                            No Patients\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 30,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Typography, Button, Grid, Paper, } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\nimport { PatientInQueue, BookedAppointments, SendIn } from '../../Apis/PatientInQueue/Staff_Apis/index';\r\nimport { PatientInueue_List } from './components/Dasboard_Component/Staff/PatientInQueue';\r\nimport { BookedAppointment_List } from './components/Dasboard_Component/Staff/BookedAppointment';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Staff_Dashboard() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [todaysregistration, settodaysregistration] = useState([]);\r\n    const [appointments, setappointments] = useState('');\r\n    const [patientInQueue, setPatientInQueue] = useState([]);\r\n    const [bookedAppointments, setbookedAppointments] = useState([]);\r\n    const [sendIn, setsendIn] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            fetchPatientInQueue();\r\n            fetchBookedAppointments();\r\n            fetchRegistrationData();\r\n            fetchDailyAppointments();\r\n        }, 10000);\r\n        fetchPatientInQueue();\r\n        fetchBookedAppointments();\r\n        fetchRegistrationData();\r\n        fetchDailyAppointments();\r\n        return () => clearInterval(interval);\r\n    }, [])\r\n\r\n    const fetchRegistrationData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const todayregistrationInfo = await axios.post(ip + 'Web_NewRegistrationReport', { ClinicId: clinicid })\r\n            settodaysregistration(todayregistrationInfo?.data);\r\n            // window.location.reload(10000);\r\n            setInterval(settodaysregistration(todayregistrationInfo?.data), 1)\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const fetchDailyAppointments = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const appInfo = await axios.post(ip + 'Web_Staff_AppointmentReport', { ClinicId: clinicid })\r\n            setappointments(appInfo?.data);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    const fetchPatientInQueue = async () => {\r\n        try {\r\n            const data = await PatientInQueue();\r\n            setPatientInQueue(data);\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const fetchBookedAppointments = async () => {\r\n        try {\r\n            const data = await BookedAppointments();\r\n            setbookedAppointments(data);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleRegisterClick = () => {\r\n        navigate(\"/Staff_ClinicPatients\");\r\n    };\r\n\r\n    const handleBookAppointmentClick = () => {\r\n        navigate(\"/Staff_Book_Appointment\");\r\n    };\r\n\r\n    const handleTodaysAppointmentClick = () => {\r\n        navigate(\"/Staff_Todays_Appointment\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n\r\n                {/* Reports Grid Start */}\r\n                <Grid item className={classes.griditem} xs={12} sm={3} style={{ borderRight: '1px solid gray' }}>\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n\r\n                                }}\r\n                            >\r\n                                TODAY'S APPOINTMENTS\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            {\r\n                                <Typography variant=\"h5\" noWrap={true}>\r\n                                    {(appointments.DailyAppointment !== null || appointments.DailyAppointment != 0) ? appointments.DailyAppointment : 0}\r\n                                </Typography>\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.griditem} xs={12} sm={3} style={{ borderRight: '1px solid gray' }}>\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n                                }}>\r\n                                PATIENT IN QUEUE\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h5\" noWrap={true}>\r\n                                {(appointments.PatientInQueueAppointments !== null || appointments.PatientInQueueAppointments != 0) ? (appointments.PatientInQueueAppointments) : (0)}\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.griditem} xs={12} sm={3} style={{ borderRight: '1px solid gray' }}>\r\n                    <Paper className={classes.paper} elevation={0} style={{}}>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088', }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n                                }}\r\n                            >\r\n                                TODAY'S REGISTRATION\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h5\" noWrap={true}>\r\n                                {todaysregistration.DailyRecord ? todaysregistration.DailyRecord[0].DailyReport : 0}\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item className={classes.griditem} xs={12} sm={3} >\r\n                    <Paper className={classes.paper} elevation={0} >\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#78B088' }}>\r\n                            <Typography variant=\"h7\" noWrap={true}\r\n                                style={{\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 500,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    color: '#78B088',\r\n\r\n                                }}>\r\n                                MONTHLY APPOINTMENTS\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"row\" style={{ padding: theme.spacing(0), color: '#00318B' }}>\r\n                            <Typography variant=\"h5\" noWrap={true}>\r\n                                {(appointments.MonthlyAppintments !== null || appointments.MonthlyAppintments != 0) ? (appointments.MonthlyAppintments) : (0)}\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Reports grid end */}\r\n\r\n\r\n                <Grid item xs={12} sm={4} onClick={handleRegisterClick} style={{ cursor: 'pointer' }}>\r\n                    {/* <Button className={classes.btn} size=\"small\" style={{ fontSize: 20 }}>Register Patients</Button> */}\r\n\r\n                    <Paper className={classes.paperServices} elevation={4} style={{ borderRadius: '25px' }}>\r\n                        <Typography variant=\"h7\" noWrap={true} style={{ color: '#2C7FB2', fontSize: 15 }}>\r\n                            REGISTER PATIENTS\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} onClick={handleBookAppointmentClick} style={{ cursor: 'pointer' }}>\r\n                    <Paper className={classes.paperServices} elevation={4} style={{ borderRadius: '25px' }} >\r\n                        <Typography variant=\"h7\" noWrap={true} style={{ color: '#2C7FB2', fontSize: 15 }}>\r\n                            BOOK APPOINTMENT\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} onClick={handleTodaysAppointmentClick} style={{ cursor: 'pointer' }}>\r\n                    <Paper className={classes.paperServices} elevation={4} style={{ borderRadius: '25px' }}>\r\n                        <Typography variant=\"h7\" noWrap={true} style={{ color: '#2C7FB2', fontSize: 15 }}>\r\n                            TODAY'S APPOINTMENTS\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* service grid end */}\r\n\r\n\r\n                {/* Booked Appointments queue grid start */}\r\n                <Grid container direction=\"row\" >\r\n                    <Grid item xs={12}>\r\n                        <Paper elevation={0}>\r\n                            <div className=\"row\" >\r\n                                <Typography variant=\"h5\" noWrap={true}\r\n                                    style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 500,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#78B088',\r\n                                        fontSize: 19,\r\n\r\n                                    }}>\r\n                                    Booked Appointments\r\n                                </Typography>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Container style={{ paddingBottom: 20, }}>\r\n                        <Grid container spacing={2} direction=\"row\" wrap=\"nowrap\" style={{ overflowX: 'scroll' }}>\r\n                            {bookedAppointments ? <BookedAppointment_List data={bookedAppointments} /> :\r\n                                <>\r\n                                    <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                        <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                            <center>\r\n                                                <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} /> </center>\r\n                                        </Grid>\r\n                                        <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                                            <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                                                No Patients\r\n                                            </Grid>\r\n\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Container>\r\n                </Grid>\r\n\r\n                {/* Patient In queue grid start */}\r\n                <Grid container direction=\"row\" >\r\n                    <Grid item xs={12}>\r\n                        <Paper elevation={0}>\r\n                            <div className=\"row\" >\r\n                                <Typography variant=\"h5\" noWrap={true}\r\n                                    style={{\r\n                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 500,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: '#78B088',\r\n                                        fontSize: 19,\r\n                                    }}>\r\n                                    Patient In Queue\r\n                                </Typography>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Container style={{ paddingBottom: 50, }}>\r\n                        <Grid container spacing={2} direction=\"row\" wrap=\"nowrap\" style={{ overflowX: 'scroll' }}>\r\n                            {patientInQueue ? <PatientInueue_List data={patientInQueue} /> :\r\n                                <>\r\n                                    <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                        <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                            <center>\r\n                                                <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} /> </center>\r\n                                        </Grid>\r\n                                        <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                                            <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                                                No Patients\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Container>\r\n\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 30,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    btn: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n\r\n        fontSize: '10px'\r\n    },\r\n}));\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const Register_Patient = async (clinicid, firstnm, lastnm, mobile, password, email, dob, gender, address, city, pincode, state, country, height, weight, now) => {\r\n    const body = {\r\n        ClinicId:clinicid, \r\n        FirstName:firstnm, \r\n        LastName:lastnm, \r\n        MobileNo:mobile, \r\n        Password:password, \r\n        Email:email, \r\n        DOB:dob, \r\n        Gender:gender, \r\n        Address:address, \r\n        City:city, \r\n        Pincode:pincode, \r\n        State:state, \r\n        Country:country, \r\n        Height:height, \r\n        Weight:weight, \r\n        createdDate:now\r\n    }\r\n    try {\r\n        const registerPatient = await axios.post(ip + 'Web_AddPatient',body)\r\n        return JSON.stringify(registerPatient?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const EditPatient = async (obj) => {\r\n    try {\r\n        const registerPatient = await axios.patch(ip + 'Web_EditPatient', obj)\r\n        return JSON.stringify(registerPatient?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { EditPatient } from '../../../../../Apis/Staff/Clinic_Patients/Edit_Patient';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function Edit_Patient({ show, data, handleCloseEditmodal }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    let obj = {};\r\n    obj = data;\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [firstnm, setfirstnm] = useState(obj ? obj.FirstName : '');\r\n    const [lastnm, setlastnm] = useState(obj ? obj.LastName : '');\r\n    const [mobile, setmobile] = useState(obj ? obj.MobileNo : '');\r\n    const [email, setemail] = useState(obj ? obj.Email : '');\r\n    const [dob, setdob] = useState(obj ? obj.DOB : '');\r\n    const [gender, setgender] = useState(obj ? obj?.Gender : '');\r\n    const [address, setaddress] = useState(obj ? obj?.Address : '');\r\n    const [city, setcity] = useState(obj ? obj?.City : '');\r\n    const [pincode, setpincode] = useState(obj ? obj?.Pincode : '');\r\n    const [state, setstate] = useState(obj ? obj?.State : '');\r\n    const [country, setcountry] = useState(obj ? obj?.Country : '');\r\n    const [height, setheight] = useState(obj ? obj?.Height : '');\r\n    const [weight, setweight] = useState(obj ? obj?.Weight : '');\r\n\r\n    const EditDetails = async () => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n        let clinicid = parsed.ClinicId;\r\n\r\n        const object = {\r\n            ClinicId: clinicid,\r\n            UserId: obj.UserId,\r\n            FirstName: firstnm,\r\n            LastName: lastnm,\r\n            MobileNo: mobile,\r\n            Email: email,\r\n            DOB: dob,\r\n            Gender: gender,\r\n            Address: address,\r\n            City: city,\r\n            Pincode: pincode,\r\n            State: state,\r\n            Country: country,\r\n            Height: height,\r\n            Weight: weight\r\n        }\r\n        try {\r\n            const editPatientRequest = await EditPatient(object);\r\n            const parse = JSON.parse(editPatientRequest);\r\n            alert(parse.message);\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {/* Edit Patient Details */}\r\n\r\n            <Dialog\r\n                open={show}\r\n                onClose={handleCloseEditmodal}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                <center>\r\n                                    <div style={{ paddingTop: 10 }}>\r\n                                        <TextField className={classes.inputFields} value={firstnm} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setfirstnm(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={lastnm} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setlastnm(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"Last Name\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={mobile} onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setmobile(e.target.value)\r\n                                            }\r\n                                        }} onInput={(e) => {\r\n                                            e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                        }} id=\"outlined-basic\" type=\"number\" size=\"small\" label=\"Mobile Number\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={email} onChange={(e) => setemail(e.target.value)} id=\"outlined-basic\" type=\"email\" size=\"small\" label=\"Email Id\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={dob} onChange={(e) => setdob(e.target.value)} id=\"outlined-basic\" type=\"date\" size=\"small\" label=\"DOB\" variant=\"outlined\" />\r\n                                        <FormControl variant=\"outlined\" size='small' className={classes.formControl}  >\r\n                                            <Select\r\n                                                className={classes.inputFields}\r\n                                                native\r\n                                                size='small'\r\n                                                value={gender}\r\n                                                onChange={(e) => setgender(e.target.value)}\r\n                                                label=\"Gender\"\r\n                                                inputProps={{\r\n                                                    name: 'gender',\r\n                                                    id: 'outlined-gender-native-simple',\r\n                                                }}\r\n\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Gender</option>\r\n                                                <option value='Male'>Male</option>\r\n                                                <option value='Female'>Female</option>\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <div style={{ paddingTop: 10 }}>\r\n                                        <TextField className={classes.inputFields} multiline value={address} onChange={(e) => setaddress(e.target.value)}\r\n                                            rows={2}\r\n                                            rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                        />\r\n                                        <TextField className={classes.inputFields} value={city} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setcity(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"City\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={pincode} onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setpincode(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={state} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setstate(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"State\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={country} onChange={(e) => {\r\n                                            const re = /^[A-Za-z]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setcountry(e.target.value)\r\n                                            }\r\n                                        }} id=\"outlined-basic\" size=\"small\" label=\"Country\" variant=\"outlined\" />\r\n                                        <Grid container>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <center>\r\n                                                    <TextField className={classes.inputFields} value={height} onChange={(e) => setheight(e.target.value)} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Height\" variant=\"outlined\" style={{ width: 150, float: 'right', marginRight: 5 }} />\r\n                                                </center>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <center>\r\n                                                    <TextField className={classes.inputFields} value={weight} onChange={(e) => setweight(e.target.value)} id=\"outlined-basic\" size=\"small\" type=\"number\" label=\"Weight\" variant=\"outlined\" style={{ width: 150, float: 'left', }} />\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={EditDetails} style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Update\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\n\r\nexport const Delete_Patient_Details = async (UserId) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'DeletePatient', { UserId: UserId });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Delete_Patient_Details } from '../../../../../Apis/Staff/Clinic_Patients/Delete_Patient';\r\n\r\nconst Delete_Patient = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (PatientId) => {\r\n\r\n        const request = await Delete_Patient_Details(PatientId);\r\n        let response=JSON.parse(request);\r\n        if(response.success=='200'){\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else{\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Patient's Details?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data.UserId)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Patient\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Avatar, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, InputLabel, Typography, Button, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Register_Patient } from '../../../../../Apis/Staff/Clinic_Patients/Patient_Registration';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Add_Patinet = ({ show, handleclose }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n\r\n    const [firstnm, setfirstnm] = useState('');\r\n    const [lastnm, setlastnm] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [dob, setdob] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [gender, setgender] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [city, setcity] = useState('');\r\n    const [pincode, setpincode] = useState('');\r\n    const [state, setstate] = useState('');\r\n    const [country, setcountry] = useState('');\r\n    const [height, setheight] = useState('');\r\n    const [weight, setweight] = useState('');\r\n\r\n    const PatientRegistration = async (firstnm, lastnm, mobile, password, email, dob, gender, address, city, pincode, state, country, height, weight) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const date = new Date();\r\n        const now = date.toISOString().split('T')[0];\r\n        try {\r\n            const registration = await Register_Patient(clinicid, firstnm, lastnm, mobile, password, email, dob, gender, address, city, pincode, state, country, height, weight, now);\r\n            let parse = JSON.parse(registration);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                handleclose();\r\n                window.location.reload()\r\n            }\r\n            else {\r\n                alert(parse.message);\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Register New Patient\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                <center>\r\n                                    <div>\r\n                                        <TextField className={classes.inputFields} value={firstnm}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setfirstnm(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            id=\"outlined-basic\" size=\"small\" placeholder=\"First Name*\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={lastnm}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setlastnm(e.target.value)\r\n                                                }\r\n                                            }} id=\"outlined-basic\" size=\"small\" placeholder=\"Last Name*\" variant=\"outlined\" />\r\n                                        <TextField\r\n                                            className={classes.inputFields}\r\n                                            value={mobile}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setmobile(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            id=\"outlined-basic\"\r\n                                            type=\"number\"\r\n                                            size=\"small\"\r\n                                            placeholder=\"Mobile Number*\"\r\n                                            variant=\"outlined\"\r\n                                            onInput={(e) => {\r\n                                                e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                            }}\r\n                                        />\r\n                                        <TextField className={classes.inputFields} value={password} onChange={(e) => setpassword(e.target.value)} id=\"outlined-basic\" type=\"password\" size=\"small\" placeholder=\"Password*\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={email} onChange={(e) => setemail(e.target.value)} id=\"outlined-basic\" type=\"email\" size=\"small\" placeholder=\"Email Id\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={dob} onChange={(e) => setdob(e.target.value)} id=\"outlined-basic\" type=\"date\" size=\"small\" placeholder=\"DOB*\" variant=\"outlined\" />\r\n                                        <FormControl variant=\"outlined\" size='small' className={classes.formControl}  >\r\n                                            <Select\r\n                                                className={classes.inputFields}\r\n                                                native\r\n                                                size='small'\r\n                                                value={gender}\r\n                                                label=\"Gender\"\r\n                                                onChange={(e) => setgender(e.target.value)}\r\n                                                inputProps={{\r\n                                                    name: 'gender',\r\n                                                    id: 'outlined-gender-native-simple',\r\n                                                }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Gender</option>\r\n                                                <option value='Male'>Male</option>\r\n                                                <option value='Female'>Female</option>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <div>\r\n                                        <TextField className={classes.inputFields} multiline\r\n                                            onChange={(e) => {\r\n                                                setaddress(e.target.value)\r\n                                            }}\r\n                                            rows={2}\r\n                                            rowsMax={6} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            className={classes.inputFields}\r\n                                            value={city}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setcity(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            id=\"outlined-basic\"\r\n                                            size=\"small\"\r\n                                            placeholder=\"City\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField className={classes.inputFields} value={pincode} onChange={(e) => setpincode(e.target.value)} id=\"outlined-basic\" size=\"small\" placeholder=\"Pincode\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={state}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setstate(e.target.value)\r\n                                                }\r\n                                            }}\r\n                                            id=\"outlined-basic\" size=\"small\" placeholder=\"State\" variant=\"outlined\" />\r\n                                        <TextField className={classes.inputFields} value={country}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setcountry(e.target.value)\r\n                                                }\r\n                                            }} id=\"outlined-basic\" size=\"small\" placeholder=\"Country\" variant=\"outlined\" />\r\n                                        <TextField\r\n                                            className={classes.inputFields}\r\n                                            value={height}\r\n                                            onChange={(e) => setheight(e.target.value)}\r\n                                            id=\"outlined-basic\"\r\n                                            size=\"small\"\r\n                                            placeholder=\"Height\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField className={classes.inputFields} value={weight} onChange={(e) => setweight(e.target.value)} id=\"outlined-basic\" size=\"small\" placeholder=\"Weight\" variant=\"outlined\" />\r\n\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={handleclose} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={() => PatientRegistration(firstnm, lastnm, mobile, password, email, dob, gender, address, city, pincode, state, country, height, weight)} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Register\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}))\r\n\r\nexport default Add_Patinet\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Avatar, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Slide, Select, FormControl, InputLabel, Typography, Button, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { FixedSizeList } from 'react-window';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Register_Patient } from '../../Apis/Staff/Clinic_Patients/Patient_Registration';\r\nimport Edit_Patient from './components/Clinic_Patients/Edit_Patient/index';\r\nimport Delete_Patient from './components/Clinic_Patients/Delete_Patient/index';\r\nimport Add_Patinet from './components/Clinic_Patients/Add_Patient/index';\r\n\r\nconst getPatientDataApi = 'http://13.233.217.107:8080/api/Web_GetPatients';\r\nconst getPatientDetailsApi = 'http://13.233.217.107:8080/api/ShowPatientDetailUsingId';\r\nconst getPatientSearchApi = 'http://13.233.217.107:8080/api/Web_SearchPatients';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        // <List>\r\n        <ListItem button style={style} key={index} >\r\n            <ListItem >\r\n                <ListItemText\r\n                    style={{ borderBottom: '1px solid #F0F0F0' }}\r\n                    primary={`Title : Regular Checkup`}\r\n                    secondary={\r\n                        <React.Fragment>\r\n                            <Typography\r\n                                component={'span'}\r\n                                variant={\"body2\"}\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {`Date : 2021-09-11`}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n            <Divider />\r\n        </ListItem>\r\n        // </List>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Staff_ClinicPatients() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(9);\r\n    const [counterbtn, setCounterBtn] = React.useState(0);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n    const [patientData, setpatientData] = useState([]);\r\n    const [patientDetails, setpatientDetails] = useState([]);\r\n    const [firstnm, setfirstnm] = useState('');\r\n    const [lastnm, setlastnm] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [dob, setdob] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [gender, setgender] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [city, setcity] = useState('');\r\n    const [pincode, setpincode] = useState('');\r\n    const [state, setstate] = useState('');\r\n    const [country, setcountry] = useState('');\r\n    const [height, setheight] = useState('');\r\n    const [weight, setweight] = useState('');\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n    const [opendeletemodal, setOpenDeletemodal] = React.useState(false);\r\n    const [patientsearch, setpatientsearch] = useState([]);\r\n\r\n    const PatientRegistration = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const date = new Date();\r\n        const now = date.toISOString().split('T')[0];\r\n        if (firstnm.trim() == '' || lastnm.trim() == '' || mobile.trim() == '' || password.trim() == '' || dob.trim() == '' || gender.trim() == '') {\r\n            alert('Please Enter Mandatory fields')\r\n            return;\r\n        }\r\n        const obj = {\r\n            ClinicId: clinicid,\r\n            FirstName: firstnm,\r\n            LastName: lastnm,\r\n            MobileNo: mobile,\r\n            Password: password,\r\n            Email: email,\r\n            DOB: dob,\r\n            Gender: gender,\r\n            Address: address,\r\n            City: city,\r\n            Pincode: pincode,\r\n            State: state,\r\n            Country: country,\r\n            Height: height,\r\n            Weight: weight,\r\n            createdDate: now\r\n        }\r\n\r\n        try {\r\n            const registration = await Register_Patient(obj);\r\n            let parse = JSON.parse(registration);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                setOpenmodal(false);\r\n                window.location.reload()\r\n            } else {\r\n                alert(parse.message);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const fetchPatientData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const patientInfo = await axios.post(getPatientDataApi, { ClinicId: clinicid });\r\n        setpatientData(patientInfo?.data?.Patients);\r\n    }\r\n\r\n    const searchPatient = async (patientsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const patientsInfo = await axios.post(getPatientSearchApi, { ClinicId: clinicid, Name: patientsearch });\r\n            setpatientData(patientsInfo?.data?.Patients);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPatientData();\r\n    }, [])\r\n\r\n    const handleCellClick = async (userid) => {\r\n        const patientDetailedInfo = await axios.post(getPatientDetailsApi, { UserId: userid });\r\n        setpatientDetails(patientDetailedInfo?.data?.PatientDetails);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Clinic Patients\r\n                        <Button className={classes.btnregister} onClick={() => setOpenmodal(true)} style={{ float: 'right', marginRight: 20, width: '150px', fontFamily: 'Poppins', fontSize: 12.5, fontWeight: 400 }}>New Registration</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ padding: theme.spacing(2) }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <InputBase\r\n                                    placeholder=\"Search by Name\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n\r\n                                    }}\r\n                                    value={patientsearch}\r\n                                    onChange={(e) => setpatientsearch(e.target.value)}\r\n                                    variant='outlined'\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    style={{ borderRadius: 15 }}\r\n                                > </InputBase>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button className={classes.btnview} onClick={() => searchPatient(patientsearch)} size=\"small\" style={{ fontSize: 12 }}>View</Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <DataGrid\r\n                            style={{ height: 370, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                            rows={patientData}\r\n                            rowHeight={30}\r\n                            columns={columns}\r\n                            columnWidth={10}\r\n                            pageSize={10}\r\n                            onRowClick={(newSelection) => {\r\n                                handleCellClick(newSelection.row.UserId);\r\n                            }}\r\n                        />\r\n\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={8} >\r\n                    <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20, padding: theme.spacing(2) }}>\r\n                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                            fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins', textDecorationLine: 'underline', textUnderlineOffset: '1px', textDecorationThickness: '1px',\r\n                            fontStyle: 'normal',\r\n\r\n                        }}>\r\n                            Profile\r\n                        </Typography>\r\n                        <center>\r\n                            <div style={{ paddingBottom: 10 }}>\r\n                                {patientDetails.ProfileImage ?\r\n                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={patientDetails.ProfileImage} /> :\r\n                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                                {/* <img src=\"Pallavi Kale.jpg\" style={{ borderRadius: 50, height: 100 }}></img> */}\r\n                            </div>\r\n\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 16,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 600\r\n                            }}>\r\n                                {patientDetails.FirstName ? patientDetails.FirstName : \"NA\"}   {patientDetails.LastName ? patientDetails.LastName : \"\"}\r\n\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 14,\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                color: '#707070',\r\n                                fontWeight: 400\r\n                            }}>\r\n                                PID- {patientDetails.PatientId}\r\n                            </Typography>\r\n                            <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Mobile Number\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.MobileNo ? patientDetails.MobileNo : \"NA\"}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Email ID\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', marginLeft: 10, marginRight: 10, fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.Email ? patientDetails.Email : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Date Of Birth\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.DOB ? patientDetails.DOB : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Age\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.Age ? patientDetails.Age : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12}>\r\n                                <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Gender\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', }}>\r\n                                        {patientDetails.Gender ? patientDetails.Gender : 'NA'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Address\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                        {patientDetails.Address ? patientDetails.Address : 'NA'} {patientDetails.City} {patientDetails.State} {patientDetails.Country} {patientDetails.Pincode} \r\n                                    </Typography>\r\n                                </Grid>\r\n                                {/* <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins', }}>\r\n                                        Medical History\r\n                                    </Typography>\r\n                                    <a onClick={() => navigate('/DoctorPatientMedicalHistory', {\r\n                                        state: { Details: patientDetails }\r\n                                    })} style={{ fontSize: 12, color: '#2C7FB2', fontFamily: 'Poppins', cursor: 'pointer', textDecoration: 'underline' }}>Patient History</a>\r\n                                </Grid> */}\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 15 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={() => setOpenDeletemodal(true)} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={() => setOpenEditmodal(true)} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </center>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                {/* Add new Patient Dialog */}\r\n                {openmodal ? <Add_Patinet show={openmodal} handleclose={() => setOpenmodal(false)} /> : null}\r\n\r\n\r\n                {openeditmodal ? <Edit_Patient show={openeditmodal} data={patientDetails} handleCloseEditmodal={() => setOpenEditmodal(false)} /> : null}\r\n\r\n\r\n                {/* for Delete User */}\r\n\r\n                {opendeletemodal ? <Delete_Patient show={opendeletemodal} data={patientDetails} handleclose={() => setOpenDeletemodal(false)} /> : null}\r\n\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const App_Channels = async () => {\r\n    const appchannelInfo = await axios.post(ip + 'GetAppointmentChannels');\r\n    return appchannelInfo?.data?.AppointmentChannel;\r\n}\r\n\r\nexport const App_Types = async () => {\r\n    const apptypeInfo = await axios.post(ip + 'GetAppointmentTypes');\r\n    return apptypeInfo?.data?.AppointmentType;\r\n}\r\n\r\nexport const Time = async () => {\r\n    const timingInfo = await axios.post(ip + 'GetSlots');\r\n    return timingInfo?.data?.Slots;\r\n}\r\n\r\n\r\nexport const Doctors = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    const doctorInfo = await axios.post(ip + 'GetAllDoctorsUsingIdForWeb', { ClinicId: clinicid })\r\n    return doctorInfo?.data?.Data;\r\n}\r\n\r\n\r\nexport const Book_Appointment = async (obj) => {\r\n    try {\r\n        const addAppointment = await axios.post(ip + 'Web_BookAppointment', obj);\r\n        return JSON.stringify(addAppointment?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Note_for_Doctor = async () => {\r\n    try {\r\n        const notefordoctor = await axios.post(ip + 'GetNoteForDoctor');\r\n        return notefordoctor?.data?.NoteForDoctor;\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FormControl, FormControlLabel, Switch, Select, TextField, Typography, Button, Avatar, InputBase, Divider, ListItem, ListItemText, Grid, Paper } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Time, App_Channels, App_Types, Doctors, Book_Appointment, Note_for_Doctor } from '../../Apis/Staff/Book_Appointment/index';\r\n\r\nconst getClinicPatients = 'http://13.233.217.107:8080/api/Web_GetPatients';\r\nconst getPatientDetails = 'http://13.233.217.107:8080/api/ShowPatientDetailUsingId';\r\nconst getDoctor = 'http://13.233.217.107:8080/api/GetAllDoctorsUsingIdForWeb';\r\nconst getMedicalHistory = 'http://13.233.217.107:8080/api/MedicalHistoryforDoctor';\r\nconst bookAppointment = 'http://13.233.217.107:8080/api/AddAppointment';\r\nconst getPatientSearchApi = 'http://13.233.217.107:8080/api/Web_SearchPatients';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nexport default function Staff_Book_Appointment() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [patientData, setpatientData] = useState([]);\r\n    const [patientDetails, setpatientDetails] = useState('');\r\n    const [doctorData, setdoctorData] = useState([]);\r\n    const [appChannel, setappChannel] = useState([]);\r\n    const [doctor, setDoctor] = React.useState('');\r\n    const [appselected, setAppSelected] = React.useState(\"\");\r\n    const [time, settime] = useState([]);\r\n    const [appType, setappType] = useState([]);\r\n    const [timeselected, setTimeSelected] = React.useState(\"\");\r\n    const [apptypeselected, setapptypeSelected] = useState('');\r\n    const [appchannelselected, setappchannelSelected] = useState('');\r\n    const [walkIn, setwalkIn] = useState(false);\r\n    const [medicalHistory, setmedicalHistory] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [reason, setReason] = useState('');\r\n    const [doctorNote, setdoctorNote] = useState('');\r\n    const [bp, setBp] = useState('');\r\n    const [temp, setTemp] = useState('');\r\n    const [height, setHeight] = useState('');\r\n    const [weight, setWeight] = useState('');\r\n    const [plus, setPlus] = useState('');\r\n    const [spo2, setSpo2] = useState('');\r\n    const [appDate, setappDate] = useState('');\r\n    const [notefordoctor, setnotefordoctor] = useState([]);\r\n    const [patientsearch, setpatientsearch] = useState([]);\r\n\r\n    const fetchclinicpatientsdata = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const clinicpatientInfo = await axios.post(getClinicPatients, { ClinicId: clinicid })\r\n        setpatientData(clinicpatientInfo?.data?.Patients);\r\n    }\r\n\r\n    const fetchdoctorsdata = async () => {\r\n        const doctorInfo = await Doctors()\r\n        setdoctorData(doctorInfo);\r\n    }\r\n\r\n    const fetchappchannels = async () => {\r\n        const appchannelInfo = await App_Channels()\r\n        setappChannel(appchannelInfo);\r\n    }\r\n\r\n    const fetchapptypes = async () => {\r\n        const apptypeInfo = await App_Types()\r\n        setappType(apptypeInfo);\r\n    }\r\n\r\n    const fetchtimings = async () => {\r\n        const timingInfo = await Time()\r\n        settime(timingInfo);\r\n    }\r\n\r\n    const fetchNotefordoctor = async () => {\r\n        const doctorsNoteInfo = await Note_for_Doctor()\r\n        setnotefordoctor(doctorsNoteInfo);\r\n    }\r\n\r\n    const searchPatient = async (patientsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const patientsInfo = await axios.post(getPatientSearchApi, { ClinicId: clinicid, Name: patientsearch });\r\n            setpatientData(patientsInfo?.data?.Patients);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    const fetchmedicalhistory = async (UserId) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const medicalhistoryInfo = await axios.post(getMedicalHistory, { ClinicId: clinicid, UserId: UserId })\r\n        setmedicalHistory(medicalhistoryInfo?.data?.Appointment);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchclinicpatientsdata();\r\n        fetchdoctorsdata();\r\n        fetchappchannels();\r\n        fetchapptypes();\r\n        fetchtimings();\r\n        fetchNotefordoctor();\r\n\r\n    }, [])\r\n\r\n    const handleRowClick = async (UserId) => {\r\n        const patientDetailedInfo = await axios.post(getPatientDetails, { UserId: UserId });\r\n        setpatientDetails(patientDetailedInfo?.data?.PatientDetails);\r\n        fetchmedicalhistory(UserId);\r\n    }\r\n\r\n    const handleBookAppointment = async () => {\r\n        const currentTime = new Date();\r\n        let systemTime = currentTime.toTimeString();\r\n        let tdate = currentTime.toISOString().split('T')[0];\r\n\r\n        if (patientDetails == '') {\r\n            alert(\"Please select patient from list\")\r\n            return;\r\n        }\r\n        else if (doctor.trim() == '') {\r\n            alert(\"Please select Doctor\")\r\n            return;\r\n        }\r\n        else if (doctor.trim() == '') {\r\n            alert(\"Please select Doctor\")\r\n            return;\r\n        }\r\n        else if (appchannelselected.trim() == '') {\r\n            alert(\"Please select appointment Channel\")\r\n            return;\r\n        }\r\n        else if (title.trim() == '') {\r\n            alert(\"Please enter title\")\r\n            return;\r\n        }\r\n        else if (appDate < tdate) {\r\n            alert(\"You cannot set appointment for previous date\");\r\n            return\r\n        }\r\n        else if (appDate <= tdate) {\r\n            if (timeselected < systemTime) {\r\n                alert(`You can't not set Appointment at ${timeselected}`);\r\n                return\r\n            }\r\n        }\r\n        else if (apptypeselected.trim() == '') {\r\n            alert(\"Please select appointment type\");\r\n            return\r\n        }\r\n\r\n        var data = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n        const now = new Date();\r\n        const date = now.toISOString().split('T')[0];\r\n\r\n        const obj = {\r\n            Title: title,\r\n            UserId: patientDetails.UserId,\r\n            FirstName: patientDetails.FirstName,\r\n            LastName: patientDetails.LastName,\r\n            DoctorId: doctor,\r\n            ClinicId: clinicid,\r\n            AppointmentDate: appDate,\r\n            BookedDate: date,\r\n            AppointmentTime: timeselected,\r\n            AppointmentType: apptypeselected,\r\n            AppointmentChannel: appchannelselected,\r\n            AppointmentStatus: 'Booked',\r\n            Patient_BP: bp,\r\n            Patient_Weight: weight,\r\n            Patient_Height: height,\r\n            Patient_SPO2: spo2,\r\n            Patient_Plus: plus,\r\n            Patient_Temp: temp,\r\n            ShortNote: doctorNote,\r\n            AppointmentReason: reason,\r\n            createdBy: doctorid,\r\n            updatedBy: doctorid,\r\n        }\r\n        try {\r\n            const addAppointment = await Book_Appointment(obj);\r\n            let parse = JSON.parse(addAppointment);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                window.location.reload()\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // function disableBtn() {\r\n    //     document.getElementById(\"mybtn\").hidden = true;\r\n    // }\r\n    // function enableBtn() {\r\n    //     document.getElementById(\"mybtn\").hidden = false;\r\n    // }\r\n\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    function renderRow(props) {\r\n        const { index, style } = props;\r\n\r\n        return (\r\n            // <List>\r\n            <ListItem button style={style} key={index} >\r\n                <ListItem >\r\n                    <ListItemText\r\n                        style={{ borderBottom: '1px solid #F0F0F0' }}\r\n                        primary={`Title : Regular Checkup`}\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component={'span'}\r\n                                    variant={\"body2\"}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    {`Date : 2021-09-11`}\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Divider />\r\n            </ListItem>\r\n            // </List>\r\n        );\r\n    }\r\n\r\n    renderRow.propTypes = {\r\n        index: PropTypes.number.isRequired,\r\n        style: PropTypes.object.isRequired,\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Book Appointment\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: '-10px' }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            placeholder=\"Search by Name\"\r\n\r\n                                            onChange={(e) => setpatientsearch(e.target.value)}\r\n                                            value={patientsearch}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15, }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} onClick={() => searchPatient(patientsearch)} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>View Profile</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <DataGrid\r\n                                style={{ height: 250, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                                rows={patientData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={5}\r\n                                onRowClick={(newSelection) => {\r\n                                    handleRowClick(newSelection.row.UserId);\r\n                                }}\r\n                            />\r\n\r\n                            <Divider style={{ padding: '5px', borderTop: '1px solid #F0F0F0', backgroundColor: '#fff', paddingBottom: 10 }} />\r\n\r\n                            <Typography variant=\"h7\" noWrap={true} style={{\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 600,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                color: '#2C7FB2',\r\n                                textDecoration: 'underline',\r\n                                textUnderlineOffset: '1px',\r\n                                textDecorationThickness: '1px',\r\n                                marginLeft: 4\r\n\r\n                            }} >\r\n                                Profile Details\r\n                            </Typography>\r\n\r\n                            <Grid container spacing={3} style={{ paddingTop: theme.spacing(2) }}>\r\n                                <Grid container item xs={12} sm={4} >\r\n                                    <Grid itexm xs={12} >\r\n                                        <center>\r\n                                            {patientDetails.ProfileImage ?\r\n                                                <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} src={patientDetails.ProfileImage} /> :\r\n                                                <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} />}\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Divider style={{ paddingTop: '15px', backgroundColor: '#fff' }} />\r\n                                    <Grid itexm xs={12} style={{ paddingTop: 10 }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h7\" noWrap={true} style={{\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 400,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: 'gray',\r\n                                            }}\r\n                                            >\r\n                                                {patientDetails.FirstName} {patientDetails.LastName}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={8}>\r\n                                    <Paper elevation={0} style={{\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 400,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        color: 'gray',\r\n                                    }}>\r\n                                        Location: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            {patientDetails.Address !== null ? patientDetails.Address : 'Not Provided'} {patientDetails.City} {patientDetails.State} {patientDetails.Pincode} {patientDetails.Country}\r\n                                        </Typography>\r\n                                        <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                        Contact: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            {patientDetails.MobileNo !== null ? patientDetails.MobileNo : 'Not Provided'}\r\n                                        </Typography>\r\n                                        <Divider style={{ paddingTop: '10px', backgroundColor: '#fff' }} />\r\n                                        Email Id: <Typography variant=\"h7\" noWrap={true} style={{\r\n                                            fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 400,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            padding: theme.spacing(2),\r\n                                            color: 'gray',\r\n                                            fontSize: 12,\r\n                                        }}\r\n                                        >\r\n                                            {patientDetails.Email != '' ? patientDetails.Email : 'Not Provided'}\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20, padding: theme.spacing(2.5) }}>\r\n                            <Grid container spacing={3} style={{ backgroundColor: '#fff', borderBlockEnd: '1px solid #F0F0F0' }}>\r\n                                <Grid item xs={12} sm={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                    <Typography variant=\"h7\" noWrap={true} style={{\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        padding: theme.spacing(2),\r\n                                        color: '#2C7FB2',\r\n                                        textDecoration: 'underline',\r\n                                        textUnderlineOffset: '1px',\r\n                                        textDecorationThickness: '1px'\r\n                                    }}\r\n                                    >\r\n                                        Details\r\n                                    </Typography>\r\n\r\n                                    <div style={{ paddingTop: 10 }}>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                                            <Select\r\n                                                className={classes.textField}\r\n                                                native\r\n                                                value={doctor}\r\n                                                onChange={(e) => setDoctor(e.target.value)}\r\n                                                label=\"doctor\"\r\n                                                inputProps={{\r\n                                                    name: 'doctor',\r\n                                                    id: 'outlined-doctor-native-simple',\r\n                                                }}\r\n                                                style={{ width: '148%', position: 'relative', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Select Doctor</option>\r\n                                                {doctorData.map(v => (<option value={v.DoctorId}>Dr. {v.FirstName} {v.LastName}</option>))}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                        <Divider style={{ opacity: 0 }} />\r\n                                        {!walkIn ? <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                                            <Select\r\n                                                className={classes.textField}\r\n                                                native\r\n                                                value={appchannelselected}\r\n                                                onChange={(e) => setappchannelSelected(e.target.value)}\r\n                                                label=\"appointment\"\r\n                                                inputProps={{\r\n                                                    name: 'appointmentchannel',\r\n                                                    id: 'outlined-appointment-native-simple',\r\n                                                }}\r\n                                                style={{ width: '130%', color: '#707070', fontSize: 14, position: 'relative', top: 4, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\">Select Appointment Channel</option>\r\n                                                {appChannel.map(v => (<option value={v.AppointmentChannel}>{v.AppointmentChannel}</option>))}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                            :\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} disabled>\r\n                                                <Select\r\n                                                    className={classes.textField}\r\n                                                    native\r\n                                                    value={appchannelselected}\r\n                                                    onChange={(e) => setappchannelSelected(e.target.value)}\r\n                                                    label=\"appointment\"\r\n                                                    inputProps={{\r\n                                                        name: 'appointmentchannel',\r\n                                                        id: 'outlined-appointment-native-simple',\r\n                                                    }}\r\n                                                    style={{ width: '130%', color: '#707070', fontSize: 14, position: 'relative', top: 4, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\">Select Appointment Channel</option>\r\n                                                    {appChannel.map(v => (<option value={v.AppointmentChannel}>{v.AppointmentChannel}</option>))}\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        }\r\n                                        <Divider style={{ opacity: 0 }} />\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} >\r\n                                            <TextField\r\n\r\n                                                id=\"outlined-basic\" size=\"small\" label=\"Appointment Title\" variant=\"outlined\" onChange={(e) => setTitle(e.target.value)} style={{ width: '146%', color: '#707070', position: 'relative', top: 8, fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={6} >\r\n                                    <Typography variant=\"h7\" noWrap={true} style={{\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: 600,\r\n                                        overflow: 'hidden',\r\n                                        whiteSpace: 'nowrap',\r\n                                        textOverflow: 'ellipsis',\r\n                                        padding: theme.spacing(1),\r\n                                        color: '#2C7FB2',\r\n                                        textDecoration: 'underline',\r\n                                        textUnderlineOffset: '1px',\r\n                                        textDecorationThickness: '1px'\r\n\r\n                                    }}\r\n                                    >\r\n                                        Appointment Details\r\n                                    </Typography>\r\n                                    <Grid container style={{ paddingTop: 10 }}>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 400,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                marginLeft: 9\r\n                                            }}>\r\n                                                {patientDetails.FirstName ? patientDetails.FirstName : 'NA'} {patientDetails.LastName}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} >\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                float: 'right', fontSize: 14, fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 400,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                float: 'left'\r\n\r\n                                            }}>\r\n                                                PID- {patientDetails.PatientId ? patientDetails.PatientId : \"NA\"}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container style={{ paddingTop: 10 }}>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 15, fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 400,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#707070',\r\n                                                marginLeft: 8\r\n                                            }}>\r\n                                                Walk-In Appointment\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={walkIn}\r\n                                                        // onClick= {disableBtn}\r\n                                                        onChange={(e) => setwalkIn(e.target.checked)}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ position: 'relative', right: 90, color: '#2C7FB2', float: 'right', marginTop: '-10px', paddingRight: 20 }}\r\n                                            />\r\n                                            {/* <FormControlLabel\r\n                                                control={\r\n                                                    <Switch \r\n                                                        checked={walkIn.checkedB } onClick= {enableBtn}\r\n                                                        onChange={(e) => setwalkIn({ ...state, [e.target.name]: e.target.checked })}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ position:'relative', right:8, color: '#2C7FB2', float: 'right', marginTop: '-10px', paddingRight: 20 }}\r\n                                            /> */}\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ paddingTop: 2 }}>\r\n                                        <Grid item xs={12} sm={6} id='mybtn' >\r\n                                            {!walkIn ? <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                                <Select\r\n                                                    className={classes.textField}\r\n                                                    native\r\n                                                    value={timeselected}\r\n                                                    onChange={(e) => setTimeSelected(e.target.value)}\r\n                                                    label=\"time\"\r\n                                                    inputProps={{\r\n                                                        name: 'time',\r\n                                                        id: 'outlined-appointment-native-simple',\r\n                                                    }}\r\n\r\n                                                    style={{ width: '70%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                                >\r\n                                                    <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                                    {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n\r\n                                                :\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} disabled>\r\n                                                    <Select\r\n                                                        className={classes.textField}\r\n                                                        native\r\n                                                        value={timeselected}\r\n                                                        onChange={(e) => setTimeSelected(e.target.value)}\r\n                                                        label=\"time\"\r\n                                                        inputProps={{\r\n                                                            name: 'time',\r\n                                                            id: 'outlined-appointment-native-simple',\r\n                                                        }}\r\n\r\n                                                        style={{ width: '70%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                                        {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                                    </Select>\r\n\r\n                                                </FormControl>\r\n                                            }\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} >\r\n                                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ paddingRight: 20, position: 'relative', bottom: 3 }}>\r\n                                                <TextField\r\n                                                    variant=\"outlined\"\r\n                                                    onChange={(e) => setappDate(e.target.value)}\r\n                                                    id=\"date\"\r\n                                                    label=\"\"\r\n                                                    type=\"date\"\r\n                                                    size=\"small\"\r\n                                                    style={{ width: '85%', fontSize: 12 }}\r\n                                                />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} >\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n\r\n                                            <Select\r\n                                                className={classes.textField}\r\n                                                native\r\n                                                value={apptypeselected}\r\n                                                onChange={(e) => setapptypeSelected(e.target.value)}\r\n                                                label=\"appointment type\"\r\n                                                inputProps={{\r\n                                                    name: 'appointmenttype',\r\n                                                    id: 'outlined-appointment-type-native-simple',\r\n                                                }}\r\n                                                style={{ width: '158%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                            >\r\n                                                <option aria-label=\"None\" >Select Appointment Type</option>\r\n                                                {appType.map(v => (<option value={v.AppointmentType}>{v.AppointmentType}</option>))}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    {/* <Grid item xs={12}>\r\n                                        <div>\r\n                                            <FixedSizeList height={90} width={300} itemSize={60} itemCount={6} style={{ color: '#00318B' }} >\r\n                                                {renderRow}\r\n                                            </FixedSizeList>\r\n                                        </div>\r\n                                    </Grid> */}\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={12} sm={8} style={{ paddingTop: 25, }}>\r\n                                <Typography variant=\"h7\" noWrap={true} style={{\r\n\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    fontWeight: 600,\r\n                                    overflow: 'hidden',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textOverflow: 'ellipsis',\r\n                                    padding: theme.spacing(2),\r\n                                    color: '#2C7FB2',\r\n                                    textDecoration: 'underline',\r\n                                    textUnderlineOffset: '1px',\r\n                                    textDecorationThickness: '1px'\r\n                                }}\r\n                                >\r\n                                    Vital Information\r\n                                </Typography>\r\n\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={2} style={{ padding: 10 }}>\r\n                                <Grid item xs={12} style={{ justifyContent: 'center' }}>\r\n                                    <Grid container spacing={2} style={{ padding: 10 }}>\r\n                                        <Grid item xs={2} style={{ marginLeft: -10 }}>\r\n                                            <TextField\r\n                                                label=\"BP\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={bp}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setBp(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -4 }} >\r\n                                            <TextField\r\n                                                label=\"Temp\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={temp}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setTemp(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -10 }}>\r\n                                            <TextField\r\n                                                label=\"Height\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={height}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setHeight(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -15 }} >\r\n\r\n                                            <TextField\r\n                                                label=\"Weight\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={weight}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setWeight(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -18 }}>\r\n                                            <TextField\r\n\r\n                                                label=\"SPO2\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={spo2}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setSpo2(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={2} style={{ position: 'relative', right: -22 }} >\r\n                                            <TextField\r\n                                                label=\"Pulse Rate\"\r\n                                                id=\"outlined-size-small\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                value={plus}\r\n                                                onChange={(e) => {\r\n                                                    const re = /^[0-9\\b]+$/;\r\n                                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                        setPlus(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={6} style={{ marginTop: 5 }}>\r\n                                        <TextField size='small' onChange={(e) => setReason(e.target.value)} id=\"outlined-basic\" label=\"Reason\" variant=\"outlined\" style={{ marginLeft: 8, width: '98%' }} />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} sm={6} >\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                            <Select\r\n                                                className={classes.textField}\r\n                                                native\r\n                                                value={doctorNote}\r\n                                                onChange={(e) => setdoctorNote(e.target.value)}\r\n                                                label=\"time\"\r\n                                                inputProps={{\r\n                                                    name: 'time',\r\n                                                    id: 'outlined-appointment-native-simple',\r\n                                                }}\r\n                                                style={{ width: '161%', height: 42, marginTop: -4, color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value=\"\" >Note For Doctor</option>\r\n                                                {notefordoctor.map(v => (<option value={v.NoteForDoctor}>{v.NoteForDoctor}</option>))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Button className={classes.btnregister} href={'/DoctorBookAppointment'} style={{ float: 'right', marginRight: 20 }}>Reset</Button>\r\n                                        </center>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <center>\r\n                                            <Button onClick={handleBookAppointment} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                        </center>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n            </Grid > {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    input: {\r\n        height: 35\r\n    },\r\n    vitalinputs: {\r\n        height: 10\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '32ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        color: '#707070',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11\r\n    },\r\n\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 220,\r\n\r\n    },\r\n    groupreports: {\r\n        height: 120,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 20\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 10\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        // padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    vitaltextField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        // padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    btnbookappointment: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        fontSize: 11\r\n\r\n    },\r\n    btnreset: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        width: 130,\r\n        fontSize: 11\r\n\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginBottom: -5,\r\n        fontSize: 12\r\n    },\r\n\r\n}));\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\n// export const GetMorningSlots = async () => {\r\n//     try {\r\n//         const getSlotInfo = await axios.post(ip + 'Web_GetTimingForTodaysApp1');\r\n//         return getSlotInfo?.data?.Slots\r\n//     }\r\n//     catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\n// export const GetEveningSlots = async () => {\r\n//     try {\r\n//         const getSlotInfo = await axios.post(ip + 'Web_GetTimingForTodaysApp2');\r\n//         return getSlotInfo?.data?.Slots\r\n//     }\r\n//     catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\n\r\nexport const GetMorningSlots = async (doctorid) => {\r\n    // var data = localStorage.getItem(\"userdata\");\r\n    // let parsed = JSON.parse(data);\r\n    // let doctorid = parsed.userid;\r\n    let now = new Date();\r\n    let date = now.toISOString().split('T')[0];\r\n    try {\r\n        const getAppInfo = await axios.post(ip + 'Web_GetTimingForTodaysApp1', { AppointmentDate: date, DoctorId: doctorid });\r\n        return getAppInfo?.data?.Appointment\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const GetEveningSlots = async (doctorid) => {\r\n    // var data = localStorage.getItem(\"userdata\");\r\n    // let parsed = JSON.parse(data);\r\n    // let doctorid = parsed.userid;\r\n    let now = new Date();\r\n    let date = now.toISOString().split('T')[0];\r\n\r\n    try {\r\n        const getAppInfo = await axios.post(ip + 'Web_GetTimingForTodaysApp2', { AppointmentDate: date, DoctorId: doctorid });\r\n        return getAppInfo?.data?.Appointment\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const Todays_Appointment = async (doctorid) => {\r\n    try {\r\n        const res = await axios.post(ip + 'Web_ShowAppointmentsforTodaysApp', { DoctorId: doctorid });\r\n        return res?.data?.Appointment;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const Todays_Appointment_By_Date = async (clinicid, startdate, enddate) => {\r\n    try {\r\n        const res = await axios.post(ip + 'Web_SearchAppointmentByDate', { ClinicId: clinicid, StartDate: startdate, EndDate: enddate });\r\n        return res?.data?.Appointment;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../../ipaddress/ip';\r\n\r\nexport const Time = async () => {\r\n    const timingInfo = await axios.post(ip + 'GetSlots');\r\n    return timingInfo?.data?.Slots;\r\n}\r\n\r\nexport const Note_for_Doctor = async () => {\r\n    try {\r\n        const notefordoctor = await axios.post(ip + 'GetNoteForDoctor');\r\n        return notefordoctor?.data?.NoteForDoctor;\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Edit_App_for_Dashboard = async (obj) => {\r\n    try {\r\n        const edit = await axios.patch(ip + 'Web_EditAppointmentForDashboard', obj)\r\n        return JSON.stringify(edit?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, FormControl, Select, DialogTitle, DialogContentText, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { Time, Note_for_Doctor, Edit_App_for_Dashboard } from '../../../../../../Apis/Staff/Dashboard/Edit_Appointment_From_PatientIn/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const Edit_Appointment_From_TodaysApp = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [time, settime] = useState([]);\r\n    const [doctorsNote, setdoctorsNote] = useState([]);\r\n    const [reason, setReason] = useState(data.AppointmentReason ? data.AppointmentReason : '');\r\n    const [notefordoctor, setnotefordoctor] = useState(data.ShortNote ? data.ShortNote : '');\r\n    const [bp, setBp] = useState(data.Patient_BP ? data.Patient_BP : '');\r\n    const [temp, setTemp] = useState(data.Patient_Temp ? data.Patient_Temp : '');\r\n    const [height, setHeight] = useState(data.Patient_Height ? data.Patient_Height : '');\r\n    const [weight, setWeight] = useState(data.Patient_Weight ? data.Patient_Weight : '');\r\n    const [plus, setPlus] = useState(data.Patient_Plus ? data.Patient_Plus : '');\r\n    const [spo2, setSpo2] = useState(data.Patient_SPO2 ? data.Patient_SPO2 : '');\r\n    const [appDate, setappDate] = useState(data.AppointmentDate ? data.AppointmentDate : '');\r\n    const [appTime, setappTime] = useState(data.AppointmentTime ? data.AppointmentTime : '');\r\n\r\n    const fetchtimings = async () => {\r\n        try {\r\n            const timingInfo = await Time()\r\n            settime(timingInfo);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const fetchNotefordoctor = async () => {\r\n        try {\r\n            const doctorsNoteInfo = await Note_for_Doctor()\r\n            setdoctorsNote(doctorsNoteInfo);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const EditAppointmentDetails = async () => {\r\n\r\n        const obj = {\r\n            AppointmentTime: appTime,\r\n            AppointmentDate: appDate,\r\n            Patient_BP: bp,\r\n            Patient_Weight: weight,\r\n            Patient_Height: height,\r\n            Patient_SPO2: spo2,\r\n            Patient_Plus: plus,\r\n            Patient_Temp: temp,\r\n            ShortNote: notefordoctor,\r\n            AppointmentReason: reason,\r\n            id: data.id\r\n        }\r\n        try {\r\n            const editrequest = await Edit_App_for_Dashboard(obj);\r\n            let parse = JSON.parse(editrequest);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                handlemodal();\r\n                window.location.reload()\r\n            }\r\n            else {\r\n                alert(parse.message)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchtimings();\r\n        fetchNotefordoctor();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                onClose={handlemodal}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Appointment Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        {data.FirstName} {data.LastName}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        PID:- {data.UserId}\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Time\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 10 }}>\r\n                                <center>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#707070',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                        Appointment Date\r\n                                    </Typography>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                        <Select\r\n                                            className={classes.textField}\r\n                                            native\r\n                                            value={appTime}\r\n                                            onChange={(e) => setappTime(e.target.value)}\r\n                                            label=\"time\"\r\n                                            inputProps={{\r\n                                                name: 'time',\r\n                                                id: 'outlined-appointment-native-simple',\r\n                                            }}\r\n                                            style={{ width: '100%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                            {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <center>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                                        <TextField\r\n                                            InputProps={{\r\n                                                className: classes.input\r\n                                            }}\r\n                                            InputLabelProps={{\r\n                                                shrink: true\r\n                                            }}\r\n                                            variant=\"outlined\"\r\n                                            value={appDate}\r\n                                            onChange={(e) => setappDate(e.target.value)}\r\n                                            id=\"date\"\r\n                                            label=\"\"\r\n                                            type=\"date\"\r\n                                            size=\"small\"\r\n                                            style={{ width: '100%', fontSize: 14 }}\r\n                                        />\r\n                                    </FormControl>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} style={{ marginTop: 10 }}>\r\n                                    <Typography variant=\"h5\" noWrap={true}\r\n                                        style={{\r\n                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 500,\r\n                                            overflow: 'hidden',\r\n                                            whiteSpace: 'nowrap',\r\n                                            textOverflow: 'ellipsis',\r\n                                            color: '#2C7FB2',\r\n                                            fontSize: 18,\r\n                                        }}>\r\n                                        Vital Information\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 10 }}>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"BP\"\r\n                                        value={bp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setBp(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Temp\"\r\n                                        value={temp}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setTemp(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"Height\"\r\n                                        value={height}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setHeight(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: 15 }}>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Weight\"\r\n                                        value={weight}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setWeight(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n                                        label=\"SPO2\"\r\n                                        value={spo2}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setSpo2(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                        style={{ marginRight: 10 }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4} >\r\n                                    <TextField\r\n                                        InputProps={{\r\n                                            className: classes.vitalinputs,\r\n                                            className: classes.vitaltextField\r\n                                        }}\r\n\r\n                                        label=\"Pulse Rate\"\r\n                                        value={plus}\r\n                                        id=\"outlined-size-small\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onChange={(e) => {\r\n                                            const re = /^[0-9\\b]+$/;\r\n                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                setPlus(e.target.value)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 17 }}>\r\n                                <TextField className={classes.inputFields} size='small' value={reason} onChange={(e) => setReason(e.target.value)} id=\"outlined-basic\" label=\"Reason\" variant=\"outlined\" />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ marginTop: 12 }}>\r\n                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                    <Select\r\n                                        className={classes.textField}\r\n                                        native\r\n                                        value={notefordoctor}\r\n                                        onChange={(e) => setnotefordoctor(e.target.value)}\r\n                                        label=\"time\"\r\n                                        inputProps={{\r\n                                            name: 'time',\r\n                                            id: 'outlined-appointment-native-simple',\r\n                                        }}\r\n\r\n                                        style={{ width: '150%', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" >Note For Doctor</option>\r\n                                        {doctorsNote.map(v => (<option value={v.NoteForDoctor}>{v.NoteForDoctor}</option>))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={() => handlemodal(false)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button onClick={() => EditAppointmentDetails()} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../../ipaddress/ip';\r\n\r\n\r\nexport const Cancel_Appointment_Details = async (id) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'CancelAppointment', { \"id\": id,});\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, Slide, Button } from \"@material-ui/core\";\r\nimport { Cancel_Appointment_Details } from '../../../../../../Apis/Staff/Dashboard/Cancel_Appointment/index';\r\n\r\nconst Delete_Appointment = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (id) => {\r\n        try {\r\n            const request = await Cancel_Appointment_Details(id);\r\n            let response = JSON.parse(request);\r\n            if (response.success == '200') {\r\n                alert(response.message);\r\n                window.location.reload();\r\n            }\r\n            else {\r\n                alert(response.message);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Appointment?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Appointment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, IconButton, Grid, Paper, FormControl, Select } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { GetMorningSlots, GetEveningSlots, Todays_Appointment, Todays_Appointment_By_Date } from '../../Apis/Staff/Todays_Appointments/index';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Edit_Appointment_From_TodaysApp } from './components/Todays_Appointments/Slots/Edit_Appointment/index';\r\nimport Delete_Appointment from './components/Todays_Appointments/Slots/Delete_Appointment/index';\r\nimport { Time, App_Channels, App_Types, Doctors, Book_Appointment, Note_for_Doctor } from '../../Apis/Staff/Book_Appointment/index';\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    // {\r\n    //     field: 'MobileNo',\r\n    //     headerName: 'Contact No',\r\n    //     width: 160,\r\n    //     editable: true,\r\n    // },\r\n    {\r\n        field: 'AppointmentReason',\r\n        headerName: 'Appointment Reason',\r\n        width: 220,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentDate',\r\n        headerName: 'Date',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentTime',\r\n        headerName: 'Time',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentType',\r\n        headerName: 'Type',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentChannel',\r\n        headerName: 'Channel',\r\n        width: 180,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'AppointmentTime',\r\n        headerName: 'Time',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: \"Action\",\r\n        width: 130,\r\n        sortable: false,\r\n\r\n        RenderCell: (params) => {\r\n            const onClickDelete = async () => {\r\n                return alert(\"Are you Sure!! Do you want to delete medicine\");\r\n            };\r\n            const onClickEdit = async () => {\r\n                return alert(JSON.stringify(params.row, null, 4));\r\n            };\r\n            const [openeditmodal, setopeneditmodal] = useState(false);\r\n            const [opendeletemodal, setOpenDeletemodal] = useState(false);\r\n            let currentDate = new Date();\r\n            let t_date = currentDate.toISOString().split('T')[0];\r\n            return (\r\n                <>\r\n                    {openeditmodal ? <Edit_Appointment_From_TodaysApp show={openeditmodal} data={params.row} handlemodal={() => setopeneditmodal(false)} /> : null}\r\n                    {params.row.AppointmentDate >= t_date ? <IconButton onClick={() => setopeneditmodal(true)} style={{ color: '#2C7FB2' }}>\r\n                        <EditIcon />\r\n                    </IconButton> : null}\r\n                    {opendeletemodal ? <Delete_Appointment show={opendeletemodal} data={params.row.id} handleclose={() => setOpenDeletemodal(false)} /> : null}\r\n                    {params.row.AppointmentDate >= t_date ?<IconButton color=\"secondary\" onClick={() => setOpenDeletemodal(true)} style={{ color: '#BBB' }}>\r\n                        <DeleteIcon />\r\n                    </IconButton>:null}\r\n\r\n                </>\r\n            );\r\n        }\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginLeft: 50\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 400,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 220,\r\n\r\n    },\r\n\r\n    groupreports: {\r\n        height: 120,\r\n        width: 100,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        marginLeft: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        // padding: 8,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        height: 20\r\n    },\r\n    btn: {\r\n        color: '#78B088',\r\n        backgroundColor: '#ffffff',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport default function Staff_Todays_Appointment() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [times, settimes] = useState([]);\r\n    const [eveningtimes, seteveningtimes] = useState([]);\r\n    const [appointmentlist, setappointmentlist] = useState([]);\r\n    const [startdate, setstartdate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [morningcount, setmorningcount] = useState([]);\r\n    const [eveningcount, seteveningcount] = useState([]);\r\n\r\n    const [doctorData, setdoctorData] = useState([]);\r\n    const [doctor, setDoctor] = React.useState('');\r\n\r\n    const fetchdoctorsdata = async () => {\r\n        try {\r\n            const doctorInfo = await Doctors();\r\n            setdoctorData(doctorInfo);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    const callbackfunction = async (doctorid, startdate, endDate) => {\r\n        await fetchAppointments(doctorid);\r\n        await fetchMorningCount(doctorid);\r\n        await fetchEveningCount(doctorid);\r\n    }\r\n    const fetchAppointments = async (doctorid,) => {\r\n        const appointments = await Todays_Appointment(doctorid);\r\n        setappointmentlist(appointments);\r\n    }\r\n\r\n    const fetchMorningCount = async (doctorid) => {\r\n        try {\r\n            const count = await GetMorningSlots(doctorid);\r\n            setmorningcount(count);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const fetchEveningCount = async (doctorid) => {\r\n        try {\r\n            const count = await GetEveningSlots(doctorid);\r\n            seteveningcount(count);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchdoctorsdata();\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const Appointmentbydate = async (startdate, endDate) => {\r\n        var data = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let Clinicid = parsed.ClinicId;\r\n        try {\r\n            let request = await Todays_Appointment_By_Date(Clinicid, startdate, endDate)\r\n            setappointmentlist(request)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} style={{ paddingTop: 15 }}>\r\n                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} >\r\n                        <Select\r\n                            className={classes.textField}\r\n                            native\r\n                            value={doctor}\r\n                            onChange={(e) => setDoctor(e.target.value)}\r\n                            label=\"doctor\"\r\n                            inputProps={{\r\n                                name: 'doctor',\r\n                                id: 'outlined-doctor-native-simple',\r\n                            }}\r\n                            style={{ width: '100%', position: 'relative', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n                        >\r\n                            <option aria-label=\"None\" value=\"\" >Select Doctor</option>\r\n                            {doctorData.map(v => (<option value={v.DoctorId}>Dr. {v.FirstName} {v.LastName}</option>))}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <Button className={classes.btnview} onClick={() => callbackfunction(doctor)} >View</Button>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        Morning Slots\r\n                    </Typography>\r\n\r\n                    {morningcount.map((item) => {\r\n                        return (<>\r\n                            <IconButton size='small'  >\r\n                                <div className='row' style={{ marginLeft: '-30px', marginRight: '-30px' }}>\r\n                                    <div style={{ marginTop: '-5px', color: '#2C7FB2' }} >\r\n                                        {item.Count}\r\n                                    </div>\r\n                                    <div>\r\n                                        {item.Count == '0' ? <Button variant=\"contained\" className={classes.btn} style={{ marginTop: '-8px' }}>\r\n                                            {item.ActualTime}\r\n                                        </Button> :\r\n                                            <Button variant=\"contained\" className={classes.btn} style={{ marginTop: '-8px', backgroundColor: '#2C7FB2', color: '#fff' }}>\r\n                                                {item.ActualTime}\r\n                                            </Button>}\r\n                                    </div>\r\n                                </div>\r\n                            </IconButton>\r\n                        </>);\r\n                    })}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                            paddingTop: 20\r\n                        }}>\r\n                        Evening Slots\r\n                    </Typography>\r\n\r\n                    {eveningcount.map((item) => {\r\n                        return (<>\r\n                            <IconButton size='small'  >\r\n                                <div className='row' style={{ marginLeft: '-30px', marginRight: '-30px' }}>\r\n                                    <div style={{ marginTop: '-5px', color: '#2C7FB2' }} >\r\n                                        {item.Count}\r\n                                    </div>\r\n                                    <div>\r\n                                        {item.Count == '0' ? <Button variant=\"contained\" className={classes.btn} style={{ marginTop: '-8px' }}>\r\n                                            {item.ActualTime}\r\n                                        </Button> :\r\n                                            <Button variant=\"contained\" className={classes.btn} style={{ marginTop: '-8px', backgroundColor: '#2C7FB2', color: '#fff' }}>\r\n                                                {item.ActualTime}\r\n                                            </Button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </IconButton>\r\n\r\n                        </>);\r\n\r\n                    })}\r\n                </Grid>\r\n                <Grid item xs={12} style={{ paddingTop: 15 }}>\r\n                    <Typography variant=\"h8\" noWrap={true} style={{ paddingLeft: 5, paddingRight: 20 }}>\r\n                        From\r\n                    </Typography>\r\n\r\n                    <input id=\"fromdate\" type=\"date\" value={startdate} onChange={(e) => {\r\n                        setstartdate(e.target.value)\r\n                    }} style={{ border: '1px solid #F0F0F0', height: 35 }} />\r\n\r\n                    <Typography variant=\"h8\" noWrap={true} style={{ paddingLeft: 40, paddingRight: 20 }}>\r\n                        To\r\n                    </Typography>\r\n                    <input id=\"fromdate\" type=\"date\" value={endDate} onChange={(e) => {\r\n                        setendDate(e.target.value)\r\n                    }} style={{ border: '1px solid #F0F0F0', height: 35 }} />\r\n\r\n                    <Button className={classes.btnview} onClick={() => Appointmentbydate(startdate, endDate)} >View</Button>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n\r\n                    <DataGrid\r\n                        style={{ height: 300, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}\r\n                        rows={appointmentlist}\r\n                        rowHeight={30}\r\n                        columns={columns}\r\n                        columnWidth={5}\r\n                        pageSize={10}\r\n\r\n                    />\r\n\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\n\r\nexport const get_advertisments = async (category) => {\r\n    try {\r\n        const getadvertisements = await axios.post(ip + 'GetAllAdvertisements', { Category: category });\r\n        return (getadvertisements?.data?.Advetisements);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const get_patientinqueue = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const getpatientinqueue = await axios.post(ip + 'Web_ShowPatientInQueueForTV', { ClinicId: clinicid });\r\n        return (getpatientinqueue?.data?.Appointment);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport { get_advertisments } from '../../../../Apis/Staff/TV_Advertisements/index';\r\n\r\n\r\nconst images = [\r\n    {\r\n        id: 1,\r\n        src:\r\n            \"https://images.unsplash.com/photo-1627745193246-1fa1c9404b21?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\",\r\n        alt: \"The world\"\r\n    },\r\n    {\r\n        id: 2,\r\n        src:\r\n            \"https://images.unsplash.com/photo-1631116617822-e100bd7e6e06?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\",\r\n        alt: \"Train\"\r\n    },\r\n    {\r\n        id: 3,\r\n        src:\r\n            \"https://images.unsplash.com/photo-1496181133206-80ce9b88a853?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=751&q=80\",\r\n        alt: \"Laptop\"\r\n    }\r\n];\r\n\r\nconst TV_Slider_Component = () => {\r\n    const [advertisement, setAdvertisement] = useState([]);\r\n\r\n    const fetchAdvertisements = async () => {\r\n        let Category = 'Dashboard';\r\n        const getrequest = await get_advertisments(Category);\r\n        setAdvertisement(getrequest);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAdvertisements();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"TV_Slider_Component\">\r\n            <Slider dots={true} autoplay={true}>\r\n                {advertisement.length != 0 ?\r\n                advertisement.map((item) => (\r\n                    <div key={item.id}>\r\n                        <img src={item.Image} style={{height: '500px', width: '100%'}}/>\r\n                    </div>\r\n                ))\r\n                :\r\n                <>\r\n                <img src='default-image.png' style={{height: '500px', width: '100%'}}></img>\r\n                </>\r\n                }\r\n                </Slider>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TV_Slider_Component;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Avatar, Grid, Paper, } from \"@material-ui/core\";\r\nimport { get_patientinqueue } from '../../../../Apis/Staff/TV_Advertisements/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Patient_In_Queue_TV_Component({data}) {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  \r\n  console.log(data);\r\n\r\n \r\n  // if (patientIn.length !== 0) {\r\n\r\n  return (\r\n    <>\r\n      {data.map((item) => {\r\n        return(<>\r\n       \r\n        <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-40px' }}>\r\n          <div>\r\n            <center>\r\n              <Avatar style={{ borderRadius: 50, height: 55, width: 55 }} />\r\n            </center>\r\n          </div>\r\n          <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, }}>\r\n            <Grid item xs={12} style={{\r\n              color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '13px', overflow: 'hidden',\r\n              whiteSpace: 'nowrap',\r\n              textOverflow: 'ellipsis', width: 120,\r\n              marginTop: '-5px'\r\n            }}>\r\n             {item.FirstName} {item.LastName}\r\n            </Grid>\r\n            <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n              {item.AppointmentTime}\r\n            </Grid>\r\n            <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2', paddingBottom: 10 }}>\r\n              {item.AppointmentStatus}\r\n            </Grid>\r\n          </Paper>\r\n\r\n        </Grid>\r\n        </>);\r\n      } \r\n      ) }\r\n    </>\r\n  ); //return close\r\n\r\n\r\n\r\n\r\n  // }\r\n  // else {\r\n  //   return (\r\n  //     <>\r\n  //       <Grid item xs={2} style={{ paddingTop: 30, marginLeft: '-30px' }}>\r\n  //         <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n  //           <center>\r\n  //             <Avatar style={{ borderRadius: 50, height: 60, width: 60 }} /> </center>\r\n  //         </Grid>\r\n  //         <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n  //           <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n  //             No Patients\r\n  //           </Grid>\r\n\r\n  //         </Paper>\r\n  //       </Grid>\r\n  //     </>\r\n  //   );\r\n  // }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    color: '#78B088',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  grid: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    marginTop: 70,\r\n    marginLeft: 30,\r\n    marginRight: 1\r\n  },\r\n  gridShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  griditem: {\r\n    color: '#2C7FB2',\r\n  },\r\n  paperServices: {\r\n    padding: theme.spacing(1),\r\n    color: '#00318B',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    textAlign: 'center',\r\n\r\n  },\r\n  gridServices: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: '\"Poppins\", san-serif;',\r\n    fontStyle: 'normal',\r\n    fontWeight: 800,\r\n    textAlign: 'center',\r\n\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Avatar, CssBaseline, AppBar, Toolbar, IconButton, Typography, Menu, MenuItem, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport ip from '../../ipaddress/ip';\r\nimport axios from 'axios';\r\nimport Slider from 'react-slick';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport TV_Slider_Component from './components/TV_Slider/SliderComponent';\r\nimport Patient_In_Queue_TV_Component from './components/TV_Slider/Patient_In_Queue_Component';\r\nimport { get_patientinqueue } from '../../Apis/Staff/TV_Advertisements/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        color: '#2C7FB2'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#2C7FB2',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        color: '#fff'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        backgroundColor: '#2C7FB2',\r\n        color: '#fff'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    clinicname: {\r\n        // flexGrow: 1,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(0),\r\n        },\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    drname: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        padding: theme.spacing(1),\r\n        flex: 0.2,\r\n        alignSelf: 'right',\r\n        textAlign: 'right',\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    services: {\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n    },\r\n    report: {\r\n        justifyContent: 'center',\r\n        color: '#78B088',\r\n        fontFamily: '\"San Francisco\", Helvetica, Arial, san-serif;',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    }\r\n}));\r\n\r\nexport default function Staff_TV_TodaysAppointments() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open1 = Boolean(anchorEl);\r\n    const [doctordata, setdoctordata] = useState({});\r\n    const [authProfile, setAuthProfile] = React.useState(true);\r\n    const [anchorElProfile, setAnchorElProfile] = React.useState(false);\r\n    const [patientIn, setpatientIn] = useState([]);\r\n    const [ClinicDetails, setClinicDetails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            fetchClinicDetails();\r\n            fetchPatientIn();\r\n        }, 10000);\r\n        fetchClinicDetails();\r\n        fetchPatientIn();\r\n        return () => clearInterval(interval);\r\n\r\n    }, [])\r\n\r\n    const fetchPatientIn = async () => {\r\n        try {\r\n            const data = await get_patientinqueue();\r\n            setpatientIn(data);\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const fetchClinicDetails = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let ClinicId = parsed.ClinicId;\r\n\r\n        try {\r\n            const ClinicInfo = await axios.post(ip + 'ShowClinicDetailsUsingId', { ClinicId: ClinicId });\r\n            let dato = ClinicInfo?.data?.Doctor;\r\n            setClinicDetails(dato);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setAuthProfile(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElProfile(true);\r\n        navigate(\"/DoctorProfile\");\r\n    };\r\n\r\n    const handlelogout = () => {\r\n        setAnchorElProfile(true);\r\n        localStorage.clear();\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHome\");\r\n    };\r\n\r\n    const handlenewregistration = () => {\r\n        navigate(\"/DoctorPatientRegistration\");\r\n    };\r\n\r\n\r\n    var settings = {\r\n        dots: true,\r\n        // infinite: true,\r\n        // speed: 500,\r\n        // slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        // autoplaySpeed: 2000,\r\n        // slickNext: true,\r\n        // slickPrevious: true,\r\n        swipe: true\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: 'white' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        className={classes.menuButton}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <div>\r\n                        <img src=\"h97 logo horizontal-01.png\" alt=\"logo\" className={classes.logo} height='40px' style={{ flex: 1 }} />\r\n                    </div>\r\n\r\n                    <div className={classes.clinicname}>\r\n                        <Typography variant=\"h5\" noWrap={true} style={{ color: '#2C7FB2' }}>\r\n                            {ClinicDetails.ClinicName}\r\n                        </Typography>\r\n                    </div>\r\n                    {/* <div className={classes.drname}>\r\n                        <Typography variant=\"h8\" noWrap={true} style={{ color: '#2C7FB2' }} >\r\n                            Dr. {doctordata.FirstName} {doctordata.LastName}\r\n                        </Typography>\r\n                    </div> */}\r\n                    {auth && (\r\n                        <div className={classes.profile}>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"primary\"\r\n\r\n                            >\r\n                                {ClinicDetails.Logo ?\r\n                                   <img style={{ borderRadius: 50, height: 60, width: 140 }} src={ClinicDetails.Logo} /> :\r\n                                   <img style={{ borderRadius: 50, height: 60, width: 140 }} src='default-image.png' />}\r\n\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElProfile}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={anchorElProfile}\r\n                                onClick={() => setAnchorElProfile(false)}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2} style={{ marginTop: 50 }}>\r\n\r\n                <Grid item xs={12}>\r\n                    <TV_Slider_Component />\r\n                </Grid>\r\n\r\n                <Container>\r\n                    <Grid container spacing={2}>\r\n                        {patientIn.length > 0 ? <Patient_In_Queue_TV_Component data={patientIn} /> :\r\n                            <>\r\n                                <Grid item xs={2} style={{ paddingTop: 10, marginLeft: '-30px' }}>\r\n                                    <Grid item xs={6} sm={12} style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\r\n                                        <center>\r\n                                            <Avatar style={{ borderRadius: 50, height: 50, width: 50 }} /> </center>\r\n                                    </Grid>\r\n                                    <Paper className={classes.paper} elevation={4} style={{ marginRight: 25, marginLeft: 25, flex: 1, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, backgroundColor: '#fff' }}>\r\n                                        <Grid item xs={12} style={{ textAlign: 'center', paddingTop: 40, paddingBottom: 40, fontSize: 14, fontFamily: 'Poppins', color: '#000' }}>\r\n                                            No Patients\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Container>\r\n\r\n                {/* <Container>\r\n                    <Grid container spacing={2} direction=\"row\" wrap=\"nowrap\">\r\n                        <Grid item xs={2} style={{ marginLeft: '-90px', paddingRight: 0 }}>\r\n                            <div>\r\n                                <center>\r\n                                    <img src=\"Pallavi Kale.jpg\" style={{ height: '60px', borderRadius: 30 }}></img>\r\n                                </center>\r\n                            </div>\r\n                            <Paper className={classes.paper} elevation={4} style={{ marginRight: 30, marginLeft: 30, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, }}>\r\n                                <Grid item xs={12} style={{ color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '14px' }}>\r\n                                    Pallavi Kale\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n                                    09:00\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2', paddingBottom: 10 }}>\r\n                                    Patient In\r\n                                </Grid>\r\n\r\n                            </Paper> */}\r\n                {/* <div>\r\n                                <center>\r\n                                    <Button size='small' style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#78B088', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Send In</Button>\r\n                                </center>\r\n                            </div> */}\r\n                {/* </Grid>\r\n                        <Grid item xs={2} style={{ marginLeft: '-40px' }}>\r\n                            <div>\r\n                                <center> <Avatar justify=\"center\" style={{ height: 60, width: 60 }} >RT</Avatar> </center>\r\n                            </div>\r\n                            <Paper className={classes.paper} elevation={4} style={{ marginRight: 30, marginLeft: 30, justifyContent: 'center', alignItems: 'center', marginTop: '-40px', borderRadius: 20, fontFamily: '\"Poppins\", san-serif;', fontStyle: 'normal', fontWeight: 400, }}>\r\n                                <Grid item xs={12} style={{ color: '#2C7FB2', textAlign: 'center', paddingTop: 40, fontWeight: 600, fontSize: '14px' }}>\r\n                                    Rudrayani Tidke\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2' }}>\r\n                                    09:00\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ textAlign: 'center', color: '#2C7FB2', paddingBottom: 10 }}>\r\n                                    Patient In\r\n                                </Grid>\r\n\r\n                            </Paper> */}\r\n                {/* <div>\r\n                                <center>\r\n                                    <Button size='small' style={{ fontSize: '10px', color: 'white', marginTop: '-15px', backgroundColor: '#78B088', borderRadius: 5, paddingLeft: 20, paddingRight: 20, }}>Send In</Button>\r\n                                </center>\r\n                            </div> */}\r\n                {/* </Grid>\r\n                    </Grid>\r\n                </Container> */}\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const change_password = async (obj) => {\r\n    try {\r\n        const changepass = await axios.patch(ip + 'Web_Resetpassword', obj);\r\n        return JSON.stringify(changepass?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const forgot_password = async (obj) => {\r\n    try {\r\n        const forgotpass = await axios.post(ip + 'Web_Forgotpassword', obj);\r\n        return JSON.stringify(forgotpass?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const EditDoctordata = async (DoctorId,clinicid,FirstName,LastName,MobileNo,Email,Address,Category,City,Pincode,State,Country,Education,DOB,MorningStartTime,MorningEndTime,EveningStartTime,EveningEndTime,Experience,Gender) => {\r\n    const body = {\r\n        UserId: DoctorId,\r\n        ClinicId: clinicid,\r\n        FirstName: FirstName,\r\n        LastName: LastName,\r\n        MobileNo: MobileNo,\r\n        Email: Email,\r\n        Address: Address,\r\n        Category: Category,\r\n        City: City,\r\n        Pincode: Pincode,\r\n        State: State,\r\n        Country: Country,\r\n        Education: Education,\r\n        DOB: DOB,\r\n        MorningStartTime: MorningStartTime,\r\n        MorningEndTime: MorningEndTime,\r\n        EveningStartTime: EveningStartTime,\r\n        EveningEndTime: EveningEndTime,\r\n        Experience: Experience,\r\n        Gender: Gender,\r\n    }\r\n    try {\r\n        const editdoctorsrequest = await axios.patch(ip + 'EditUser', body)\r\n        return JSON.stringify(editdoctorsrequest?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, DialogTitle, DialogContentText, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport { change_password } from '../../../../../Apis/Staff/Profile/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const Change_Password = ({ show, data, handlemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = useState(true);\r\n    const [showPassword, setshowPassword] = useState(false);\r\n    const [showConfirmPassword, setshowConfirmPassword] = useState(false);\r\n\r\n    const [currentpass, setcurrentpass] = useState('');\r\n    const [newpass, setnewpass] = useState('');\r\n    const [confirmpass, setconfirmpass] = useState('');\r\n    console.log(data)\r\n    const handleClickShowPassword = () => {\r\n        setshowPassword(!showPassword);\r\n    };\r\n\r\n    const handleClickShowConfirmPassword = () => {\r\n        setshowConfirmPassword(!showConfirmPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    const handleMouseDownConfirmPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    const changePassword = async () => {\r\n\r\n        if (newpass == confirmpass) {\r\n            const obj = {\r\n                UserId: data.UserId,\r\n                CurrentPassword: currentpass,\r\n                NewPassword: newpass,\r\n                ConfirmPassword: confirmpass\r\n            }\r\n            const changepass = await change_password(obj);\r\n            let parse = JSON.parse(changepass);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                handlemodal()\r\n            }\r\n        } else {\r\n            alert('New Password & Confirm Password does not Match');\r\n        }\r\n\r\n}\r\n\r\nreturn (\r\n    <>\r\n        <Dialog\r\n            fullWidth={fullWidth}\r\n            maxWidth={maxWidth}\r\n            open={show}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Change Password\"}\r\n                <IconButton edge=\"start\" color=\"inherit\" onClick={() => handlemodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <center>\r\n                                <TextField size='small' className={classes.inputFields} onChange={(e) => setcurrentpass(e.target.value)} id=\"outlined-basic\" label=\"Current Password\" variant=\"outlined\" />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    className={classes.inputFields}\r\n                                    id=\"password\"\r\n                                    required\r\n                                    label=\"Password\"\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    size='small'\r\n                                    onChange={(e) => setnewpass(e.target.value)}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                >\r\n                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    className={classes.inputFields}\r\n                                    id=\"password\"\r\n                                    required\r\n                                    label=\"Password\"\r\n                                    type={showConfirmPassword ? 'text' : 'password'}\r\n                                    size='small'\r\n                                    onChange={(e) => setconfirmpass(e.target.value)}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowConfirmPassword}\r\n                                                    onMouseDown={handleMouseDownConfirmPassword}\r\n                                                >\r\n                                                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <Grid container xs={12} style={{ marginTop: 5 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={() => handlemodal(false)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button onClick={() => changePassword()} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </center>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n\r\n    </>\r\n);\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        width: 400,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, TextField, Avatar, Typography, IconButton, Button, Grid, Paper, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\nimport { Change_Password } from './components/Profile/Change_Password/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Staff_Profile() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [openChangePassDialog, setOpenChangePassDialog] = React.useState(false);\r\n    const [doctordata, setdoctordata] = useState({});\r\n    const [Clinicdetails, setClinicdetails] = useState([]);\r\n    const [openchangepassmodal, setopenchangepassmodal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchDoctorProfile();\r\n        fetchClinicDetails();\r\n    }, [])\r\n\r\n    const fetchDoctorProfile = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let userid = parsed.userid;\r\n        let Role = parsed.Role;\r\n        try {\r\n            const doctorInfo = await axios.post(ip + 'ShowUserDetailUsingId', { UserId: userid, Role: Role });\r\n            let dato = doctorInfo?.data?.NewUser[0];\r\n            setdoctordata(dato);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    const fetchClinicDetails = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let ClinicId = parsed.ClinicId;\r\n        try {\r\n            const doctorInfo = await axios.post(ip + 'ShowClinicDetailsUsingId', { ClinicId: ClinicId });\r\n            setClinicdetails(doctorInfo?.data?.Doctor);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n            {openchangepassmodal ? <Change_Password show={openchangepassmodal} data={doctordata} handlemodal={() => setopenchangepassmodal(false)} /> : null}\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        Profile\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} style={{ marginTop: 5 }}>\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginLeft: 10, marginRight: 25, marginBottom: 10, borderRadius: 20 }}>\r\n                        <Grid container style={{ marginTop: 10 }}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <center>\r\n                                    <div>\r\n                                        <Button onClick={() => navigate(\"/Staff_EditProfile\", {\r\n                                            state: { details: doctordata }\r\n                                        })} style={{ textTransform: 'capitalize', textDecoration: \"underline\", float: 'left', fontSize: '14px', fontWeight: 400, color: '#2C7FB2' }}>Edit Profile</Button>\r\n                                        <Button onClick={() => setopenchangepassmodal(true)} style={{ textTransform: 'capitalize', textDecoration: \"underline\", float: 'right', fontSize: '14px', fontWeight: 400, color: '#2C7FB2', marginRight: 10 }}>Change Password</Button>\r\n                                    </div>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12} style={{ marginTop: '-20px' }}>\r\n                                            <center>\r\n                                                {doctordata.ProfileImage ?\r\n                                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={doctordata.ProfileImage} /> :\r\n                                                    <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <div style={{ paddingBottom: 20 }}>\r\n                                    </div>\r\n\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n                                    }}>\r\n                                        {doctordata.FirstName} {doctordata.LastName}\r\n                                    </Typography>\r\n\r\n                                    <Grid item xs={12} >\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                            }}>\r\n                                                SID - {doctordata.UserId}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n\r\n                                    <Grid container style={{ marginTop: 10, borderTop: '1px solid lightgray' }}>\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600,\r\n                                                marginTop: 10,\r\n                                            }}>\r\n                                                Category\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 10\r\n                                            }}>\r\n                                                Education\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5\r\n                                            }}>\r\n                                                {doctordata.Category}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5\r\n                                            }}>\r\n                                                {doctordata.Education}\r\n                                            </Typography>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 15,\r\n                                            }}>\r\n                                                Email\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 15\r\n                                            }}>\r\n                                                Date Of Birth\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5\r\n                                            }}>\r\n                                                {doctordata.Email ? doctordata.Email : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5\r\n                                            }}>\r\n                                                {doctordata.DOB ? doctordata.DOB : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 15,\r\n                                            }}>\r\n                                                Mobile No\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600, marginTop: 15,\r\n                                            }}>\r\n                                                Experience\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ borderRight: '1px solid lightgray', }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5, paddingBottom: 5\r\n                                            }}>\r\n                                                {doctordata.MobileNo}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 400, marginTop: 5, paddingBottom: 5\r\n                                            }}>\r\n                                                {doctordata.Experience ? doctordata.Experience : 'Not Provided'} years\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </center>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} style={{ borderLeft: '1px solid lightgray' }}>\r\n                                <center>\r\n                                    {/* <div>\r\n                                        <Button\r\n                                            onClick={() => navigate(\"/DoctorEditClinicDetails\", {\r\n                                                state: { details: Clinicdetails }\r\n                                            })}\r\n                                            style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                textTransform: 'capitalize',\r\n                                                textDecoration: 'underline',\r\n                                                color: '#2C7FB2',\r\n                                                float: 'right'\r\n                                            }}>Edit Clinic Details</Button>\r\n                                    </div> */}\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}  >\r\n                                            <center>\r\n                                                <LocalHospitalIcon style={{ fontSize: 40, color: '#2C7FB2' }} />\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 18,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n\r\n                                    }}>\r\n                                        {Clinicdetails.ClinicName}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 14,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n\r\n                                    }}>\r\n                                        REGNO:- {Clinicdetails.ClinicRegistrationNumber ? Clinicdetails.ClinicRegistrationNumber : 'Not Provided'}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 14,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070',\r\n                                        fontWeight: 600\r\n\r\n                                    }}>\r\n                                        GSTIN:- {Clinicdetails.ClinicGstNumber ? Clinicdetails.ClinicGstNumber : 'Not Provided'}\r\n                                    </Typography>\r\n\r\n                                    <Grid container>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n\r\n                                            }}>\r\n                                                Email\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n\r\n                                            }}>\r\n                                                Mobile\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 400\r\n\r\n                                            }}>\r\n                                                {Clinicdetails.ClinicEmail ? Clinicdetails.ClinicEmail : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 400\r\n\r\n                                            }}>\r\n                                                {Clinicdetails.ClinicMobileNo ? Clinicdetails.ClinicMobileNo : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} style={{ marginTop: 15 }}>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 400,\r\n                                                marginLeft: 20,\r\n                                                marginRight: 20\r\n                                            }}>\r\n                                                {doctordata.ClinicAddress != '' ? doctordata.ClinicAddress : 'Not Provided'} <br /> {doctordata.ClinicCity != '' ? doctordata.ClinicCity : 'Not Provided'} {doctordata.ClinicState != '' ? doctordata.ClinicState : 'Not Provided'} {doctordata.ClinicCountry != '' ? doctordata.ClinicCountry : 'Not Provided'} {doctordata.ClinicPincode}\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Grid>\r\n\r\n                                    <Grid container style={{ marginTop: 30 }}>\r\n                                        <Grid item xs={6}>\r\n                                            <DateRangeIcon style={{ fontSize: 30, color: '#2C7FB2' }} />\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <DateRangeIcon style={{ fontSize: 30, color: '#2C7FB2' }} />\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                Morning Shift\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 16,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                Evening Shift\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                {doctordata.MorningStartTime != null ? doctordata.MorningStartTime : 'Not Provided'} - {doctordata.MorningEndTime != null ? doctordata.MorningEndTime : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} style={{ marginTop: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 14,\r\n                                                fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal',\r\n                                                color: '#707070',\r\n                                                fontWeight: 600\r\n                                            }}>\r\n                                                {doctordata.EveningStartTime != null ? doctordata.EveningStartTime : 'Not Provided'} - {doctordata.EveningEndTime != null ? doctordata.EveningEndTime : 'Not Provided'}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </center>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid xs={12} style={{ borderTop: '1px solid lightgray' }}>\r\n                            <center>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal', fontSize: 14, color: '#707070', fontWeight: 400, marginTop: 15, paddingBottom: 0, marginBottom: '-10px'\r\n                                }}>\r\n                                    Help : In the case of any issues please mail us at info@Health97.com\r\n                                </Typography>\r\n                            </center>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    changepass: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 160,\r\n        marginTop: 30,\r\n        fontSize: '12px'\r\n\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 30,\r\n        fontSize: '12px'\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginTop: 15\r\n    },\r\n    btnSubmit: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n}));","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\nexport const Times = async () => {\r\n    const times = await axios.post(ip + 'GetSlots');\r\n    return times?.data?.Slots;\r\n}\r\n\r\nexport const Doctor_Category = async () => {\r\n    const category = await axios.post(ip + 'GetDoctorsCategory');\r\n    return category?.data?.DoctorsCategory;\r\n}\r\n\r\nexport const Add_HomeVisitor = async (obj) => {\r\n    try {\r\n        const registerHomeVisitor = await axios.post(ip + 'AddHomeVisitorDoctors', obj);\r\n        return JSON.stringify(registerHomeVisitor?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}\r\n\r\nexport const Delete_home_visitor_Details_by_id = async (UserId, Role) => {\r\n    try {\r\n        const deletereports = await axios.patch(ip + 'Web_DeleteStaff', { UserId: UserId, Role: 'Home Visitor' });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const Edit_HomeVisitor = async (obje) => {\r\n    try {\r\n        const editHomeVisitor = await axios.patch(ip + 'Web_EditHomeVisitorDoctor', obje)\r\n        return JSON.stringify(editHomeVisitor?.data);\r\n    } catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, Form, View, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, InputLabel, Radio, Typography, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ip from '../../../../../ipaddress/ip';\r\nimport Axios from 'axios';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function EditImage({ show,  handleCloseEditmodal }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [file, setFile] = useState({});\r\n        \r\n    const fetchDoctorImage = async () => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n        let clinicid = parsed.ClinicId;\r\n        let DoctorId = parsed.userid;\r\n\r\n        const data =  new FormData();\r\n        data.append(\"file\", file);\r\n        data.append(\"UserId\", DoctorId);\r\n        data.append(\"ClinicId\", clinicid);\r\n        Axios.patch(ip + 'UploadDoctorProfileImageUsingS3', data )\r\n        .then(res => {\r\n            handleCloseEditmodal();\r\n            navigate(-1)\r\n        })\r\n        .catch(err => console.log(err));\r\n     }\r\n    return (\r\n        <>\r\n            {/* Edit Patient Details */}\r\n\r\n            <Dialog\r\n                open={show}\r\n                onClose={handleCloseEditmodal}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 'bold',\r\n                                    textAlign: 'center',\r\n                                    alignItems: 'center',\r\n                                    marginTop: '20px',\r\n                                    marginLeft: '-60px'\r\n                                }}>\r\n                                    Logo:\r\n                                </Typography>\r\n                                <center>\r\n\r\n                                    {/* <input type='file' />  */}\r\n\r\n                                     <FormControl variant=\"outlined\"   >\r\n\r\n                                        <TextField id=\"outlined-basic\" enctype=\"multipart/form-data\" onChange={(e)=>{const file= e.target.files[0];setFile(file); }} type=\"file\" size=\"small\" label=\"\"   variant=\"outlined\" style={{ width: '100%', position: 'relative', marginLeft: '200px', marginTop: '-30px', border: '1px solid #F0F0F0' }} />\r\n                                        {/* const file = event.target.files[0];\r\n                                        setfile (file);  */}\r\n                                    </FormControl> \r\n\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid container>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20, marginTop: 40 }}>\r\n                                        Cancle\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnregister} onClick={fetchDoctorImage} autoFocus style={{ float: 'left', marginLeft: 20, marginTop: 40 }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Select, InputLabel, FormControl, TextField, Typography, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { EditDoctordata } from '../../Apis/Staff/Profile/index';\r\nimport axios from 'axios';\r\nimport ip from '../../ipaddress/ip';\r\nimport { connect } from 'react-redux';\r\nimport { Times, Doctor_Category } from '../../Apis/Staff/Home_Visitors/index';\r\nimport EditImage from './components/Profile/Edit_Profile/Doctor_EditProfileImage';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst getDoctorsdata = 'http://13.233.217.107:8080/api/Web_AddStaff'\r\n\r\nconst drawerWidth = 220;\r\n\r\nexport default function Staff_EditProfile() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [doctordata, setdoctordata] = useState([location.state.details]);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [editmodal, seteditmodal] = useState(false);\r\n    const [openChangePassDialog, setOpenChangePassDialog] = React.useState(false);\r\n    const [FirstName, setFirstName] = useState(doctordata[0].FirstName);\r\n    const [LastName, setLastName] = useState(doctordata[0].LastName);\r\n    const [MobileNo, setMobileNo] = useState(doctordata[0].MobileNo);\r\n    const [Email, setEmail] = useState(doctordata[0].Email);\r\n    const [Education, setEducation] = useState(doctordata[0].Education);\r\n    const [DOB, setDOB] = useState(doctordata[0].DOB);\r\n    const [Category, setCategory] = useState(doctordata[0].Category);\r\n    const [Address, setAddress] = useState(doctordata[0].Address);\r\n    const [City, setCity] = useState(doctordata[0].City);\r\n    const [Pincode, setPincode] = useState(doctordata[0].Pincode);\r\n    const [State, setState] = useState(doctordata[0].State);\r\n    const [Country, setCountry] = useState(doctordata[0].Country);\r\n    const [MorningStartTime, setMorningStartTime] = useState(doctordata[0].MorningStartTime);\r\n    const [MorningEndTime, setMorningEndTime] = useState(doctordata[0].MorningEndTime);\r\n    const [EveningStartTime, setEveningStartTime] = useState(doctordata[0].EveningStartTime);\r\n    const [EveningEndTime, setEveningEndTime] = useState(doctordata[0].EveningEndTime);\r\n    const [Experience, setExperience] = useState(doctordata[0].Experience);\r\n    const [Gender, setGender] = useState(doctordata[0].Gender);\r\n    const [times, setTimes] = useState([]);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n\r\n    const Edit_DoctorData = async (FirstName, LastName, MobileNo, Email, Address, Category, City, Pincode, State, Country, Education, DOB, MorningStartTime, MorningEndTime, EveningStartTime, EveningEndTime, Experience, Gender) => {\r\n        var cdata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(cdata);\r\n        let DoctorId = parsed.userid;\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const editDoctorRequest = await EditDoctordata(DoctorId, clinicid, FirstName, LastName, MobileNo, Email, Address, Category, City, Pincode, State, Country, Education, DOB, MorningStartTime, MorningEndTime, EveningStartTime, EveningEndTime, Experience, Gender);\r\n            let response = JSON.parse(editDoctorRequest);\r\n            if (response.success == '200') {\r\n                alert(response.message);\r\n                navigate(-1)\r\n            }\r\n            else {\r\n                alert(response.message);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        setTimes(times);\r\n    }\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n    useEffect(() => {\r\n        fetchTimes();\r\n        fetchDoctorCategory();\r\n    }, []);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenChangePassDialog(true);\r\n    };\r\n\r\n    const handleclickOpenEditmodal = () => {\r\n        seteditmodal(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenChangePassDialog(false);\r\n    };\r\n\r\n    const handleClickOpenEditmodal = () => {\r\n        seteditmodal(true);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleChangePass = () => {\r\n        navigate(\"/DoctorTreatPatient\");\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button> Profile\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ marginLeft: 5, marginRight: 20, borderRadius: 20, marginTop: -15 }}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#2C7FB2',\r\n                                    marginTop: '-10px',\r\n                                    textDecoration: 'underline',\r\n\r\n                                }}>\r\n                                    Profile\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                {editmodal ? <EditImage show={editmodal} data={doctordata} handleCloseEditmodal={() => seteditmodal(false)} /> : null}\r\n                                <center>\r\n                                    <div style={{ paddingBottom: 10 }}>\r\n                                        <img src={doctordata[0].ProfileImage} style={{ borderRadius: '50%', height: 80, width: 80 }}></img>\r\n                                        <div style={{ marginTop: '-15px', marginRight: '-50px' }}>\r\n                                            <CreateIcon size='small' onClick={handleclickOpenEditmodal} style={{ borderRadius: '50%', backgroundColor: '#707070', color: '#fff', padding: 2 }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                        fontSize: 16,\r\n                                        fontFamily: 'Poppins',\r\n                                        fontStyle: 'normal',\r\n                                        color: '#707070'\r\n\r\n                                    }}>\r\n                                        {doctordata[0].FirstName} {doctordata[0].LastName}\r\n                                    </Typography>\r\n                                </center>\r\n                                <Grid item xs={12} style={{ paddingTop: 5 }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" type='number' placeholder=\"Experience (Yrs)\" onChange={(e) => setExperience(e.target.value)} value={Experience ? Experience : doctordata.Experience} variant=\"outlined\" size=\"small\" />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ paddingTop: 5 }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" placeholder=\"Experience (Yrs)\" value={Education} onChange={(e) => setEducation(e.target.value)} variant=\"outlined\" size=\"small\" />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} style={{ paddingTop: 5 }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '60%' }} >\r\n                                            <InputLabel htmlFor=\"outlined-age-native-simple\" value={Category ? Category : doctordata.Category} onChange={(e) => setCategory(e.target.value)} ></InputLabel>\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='medium'\r\n                                                native\r\n                                                value={Category}\r\n                                                onChange={(e) => setCategory(e.target.value)}\r\n                                                placeholder=\"Category\"\r\n                                                inputProps={{\r\n                                                    name: 'category',\r\n                                                    id: 'outlined-category-native-simple',\r\n                                                }}\r\n                                                style={{ width: '100%', fontSize: 14 }}\r\n                                            >\r\n                                                {doctorCategory.map((item) => {\r\n                                                    return (\r\n                                                        <option value={item.Category}>{item.Category}</option>\r\n                                                    )\r\n                                                })}\r\n\r\n                                                {/* <option aria-label=\"None\" value=\"\" /> */}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={4}>\r\n                                <center>\r\n                                    <div style={{ paddingTop: 5 }}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" size=\"small\" value={FirstName} label=\"First Name\" onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setFirstName(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" label=\"Last Name\" value={LastName} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setLastName(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='number' label=\"Mobile No\" value={MobileNo} onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setMobileNo(e.target.value)\r\n                                                }\r\n                                            }} onInput={(e) => {\r\n                                                e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='email' label=\"Email ID\" value={Email} onChange={(e) => setEmail(e.target.value)} variant=\"outlined\" size=\"small\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" type=\"text\" label=\"Degree\" value={Education} onChange={(e) => setEducation(e.target.value)} variant=\"outlined\" size=\"small\" style={{ width: '130%' }} />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                            <TextField className={classes.textFieldForm} id=\"outlined-basic\" label=\"DOB\" value={DOB} onChange={(e) => setDOB(e.target.value)} type=\"date\" variant=\"outlined\" size=\"small\" style={{ width: '150%' }} />\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '73%' }} >\r\n                                            <InputLabel htmlFor=\"outlined-age-native-simple\" onChange={(e) => setGender(e.target.value)} value={Gender ? Gender : doctordata.Gender}  ></InputLabel>\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='medium'\r\n                                                native\r\n                                                value={Gender ? Gender : doctordata.Gender} onChange={(e) => setGender(e.target.value)}\r\n                                                // label=\"Gender\"\r\n                                                inputProps={{\r\n                                                    name: 'gender',\r\n                                                    id: 'outlined-gender-native-simple',\r\n                                                }}\r\n\r\n\r\n                                                style={{ width: '100%', fontSize: 13 }}\r\n                                            >\r\n                                                <option value={1}>Male</option>\r\n                                                <option value={2}>Female</option>\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </center>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={5}>\r\n\r\n                                <Grid item xs={12} style={{ marginTop: 1 }}>\r\n                                    <center>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                            <TextField className={classes.textField} multiline rows={2.5} rowsMax={5} id=\"outlined-basic\" size=\"small\" label=\"Address\" value={Address} onChange={(e) => setAddress(e.target.value)} variant=\"outlined\" style={{ width: '180%' }} />\r\n                                        </FormControl>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 30 }}>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} style={{ float: 'right', marginLeft: 40 }}>\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"City\" value={City} onChange={(e) => { setCity(e.target.value) }}\r\n                                                variant=\"outlined\" />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} style={{ marginRight: 40 }}>\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"Pincode\" value={Pincode} onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setPincode(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 3 }}>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} style={{ float: 'right', marginLeft: 40 }}>\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"State\" value={State} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setState(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} style={{ marginRight: 40 }}>\r\n                                            <TextField className={classes.textField} id=\"outlined-basic\" size=\"small\" label=\"Country\" value={Country} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setCountry(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container >\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={() => handleGoBack(false)} style={{ float: 'right', marginRight: 20 }}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={6}>\r\n                                    <Button className={classes.btnCancle} onClick={() => Edit_DoctorData(FirstName, LastName, MobileNo, Email, Address, Category, City, Pincode, State, Country, Education, DOB, MorningStartTime, MorningEndTime, EveningStartTime, EveningEndTime, Experience, Gender)} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n            {/* {editmodal? <EditImage show={editmodal} data={doctordata} handleCloseEditmodal ={()=>seteditmodal(false)}/>:null} */}\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n\r\n        fontFamily: 'Poppins;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(2),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: -5,\r\n        fontSize: '11px'\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginTop: 10\r\n    },\r\n    btnSubmit: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n\r\n}));\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../ipaddress/ip';\r\n\r\n\r\nexport const Patients_Data = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    const patientInfo = await axios.post(ip + 'Web_GetPatients', { ClinicId: clinicid });\r\n    return patientInfo?.data?.Patients;\r\n}\r\n\r\n\r\nexport const Reports = async (userid) => {\r\n    try {\r\n        const reports = await axios.post(ip + 'Web_GetGroupPatientReportsbyTitle', { UserId: userid });\r\n        return reports?.data?.PatientReports;\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const Upload_Reports = async (obj) => {\r\n    try {\r\n        const addReports = await axios.post(ip + 'Web_AddPatientReports', { reportsdata: obj })\r\n        return JSON.stringify(addReports?.data);\r\n    }\r\n    catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const getReportsByTitle = async (userid, reportitle) => {\r\n    let body = {\r\n        UserId: userid,\r\n        ReportTitle: reportitle\r\n    }\r\n    try {\r\n        const getPatientReports = await axios.post(ip + 'Web_GetPatientReports', body);\r\n        return getPatientReports?.data?.PatientReports\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const DeleteReportsByTitle = async (userid, reporttitle) => {\r\n    try {\r\n        const deletereports = await axios.delete(ip + 'Web_DeletePatientReportsByTitle', { data: { UserId: userid, ReportTitle: reporttitle } });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}\r\n\r\n\r\nexport const DeleteReportsById = async (id) => {\r\n    try {\r\n        const deletereports = await axios.delete(ip + 'Web_DeletePatientReportById', { data: { id: id } });\r\n        return JSON.stringify(deletereports?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, IconButton, DialogContent, DialogActions, DialogTitle, DialogContentText, Typography, List, ListItemText, ListItem, Divider, Paper, Grid } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getReportsByTitle, DeleteReportsByTitle, DeleteReportsById } from '../../../../Apis/Staff/Patient_Reports/index';\r\nimport { transparent } from 'material-ui/styles/colors';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const PatientReportImages = ({ show, data, handleClosemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [Data, setData] = useState([]);\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n\r\n    useEffect(() => {\r\n        FetchData();\r\n    }, []);\r\n\r\n    const FetchData = async () => {\r\n        const request = await getReportsByTitle(data.UserId, data.ReportTitle);\r\n        setData(request);\r\n    }\r\n\r\n\r\n    const DeleteReport = async (id) => {\r\n        const request = await DeleteReportsById(id)\r\n        if (Data.length > 0) {\r\n            FetchData();\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={show}\r\n                onClose={handleClosemodal}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n                style={{ height: 550 }}\r\n            >\r\n                <DialogContent>\r\n\r\n                    <DialogTitle id=\"alert-dialog-title\" >\r\n                        <IconButton edge=\"start\" onClick={handleClosemodal} color=\"inherit\" aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n\r\n                    {Data.length > 0 ?\r\n                        <>\r\n                            <Grid container spacing={2} style={{ height: 250, overflowY: 'auto' }}>\r\n                                {Data.map((item) => {\r\n                                    return (\r\n                                        <>\r\n                                            <Grid item sm={2} >\r\n                                                <div style={{ marginTop: 10 }}>\r\n                                                    <center>\r\n                                                        <Typography variant=\"h6\" noWrap={true}\r\n                                                            style={{\r\n                                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                                fontStyle: 'normal',\r\n                                                                fontWeight: 600,\r\n                                                                overflow: 'hidden',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                color: '#2C7FB2',\r\n                                                                fontSize: 14\r\n                                                            }}>\r\n                                                            {item.ReportTitle}\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </div>\r\n                                                <Paper spacing={2} elevation={2} className={classes.groupreports} >\r\n                                                    <center>\r\n                                                        <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n                                                            <DeleteIcon size='small' onClick={() => DeleteReport(Data[0].id)} />\r\n                                                        </IconButton>\r\n                                                        {item.ReportImage ?\r\n                                                            <img onClick={() => window.open(item.ReportImage, '_blank')} style={{ height: 120, width: '100%' }} src={item.ReportImage} onError={({ currentTarget }) => {\r\n                                                                currentTarget.onerror = null; // prevents looping\r\n                                                                currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                            }} /> :\r\n                                                            null}\r\n                                                    </center>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                        </>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Grid>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                <Grid item sm={12} >\r\n                                    <div>\r\n                                        <Typography variant=\"h6\" noWrap={true}\r\n                                            style={{\r\n                                                fontFamily: '\"Poppins\", san-serif;',\r\n                                                fontStyle: 'normal',\r\n                                                fontWeight: 600,\r\n                                                overflow: 'hidden',\r\n                                                whiteSpace: 'nowrap',\r\n                                                textOverflow: 'ellipsis',\r\n                                                color: '#2C7FB2',\r\n                                                fontSize: 14\r\n                                            }}>\r\n                                            No Records Found\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <Paper spacing={2} elevation={3} className={classes.groupreports} >\r\n                                        <center>\r\n                                            <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                        </center>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>}\r\n\r\n                    {/* <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                        {Data.length > 0 ?\r\n                            Data.map((item) => {\r\n                                return (\r\n                                    <>\r\n                                        <Grid item sm={2} >\r\n                                            <Paper elevation={3} className={classes.groupreports} >\r\n                                                <center>\r\n                                                    <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n                                                        <DeleteIcon size='small' onClick={() => DeleteReport(Data[0].id)} />\r\n                                                    </IconButton>\r\n                                                    {item.ReportImage ?\r\n                                                        <img onClick={() => window.open(item.ReportImage, '_blank')} style={{ height: 150, width: '100%' }} src={item.ReportImage} onError={({ currentTarget }) => {\r\n                                                            currentTarget.onerror = null; // prevents looping\r\n                                                            currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                        }} /> :\r\n                                                        null}\r\n                                                </center>\r\n                                            </Paper>\r\n                                        </Grid> */}\r\n\r\n                    {/* <ListItem button>\r\n                                            <ListItemText>\r\n                                                <div>\r\n                                                    <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n                                                        <DeleteIcon onClick={() => DeleteReport(Data[0].id)} size='small' />\r\n                                                    </IconButton>\r\n                                                    <ListItemText>{item.ReportTitle}</ListItemText>\r\n                                                </div>\r\n                                                {item.ReportImage ?\r\n                                                    <img onClick={() => window.open(item.ReportImage, '_blank')} style={{ height: 150, width: '100%' }} src={item.ReportImage} onError={({ currentTarget }) => {\r\n                                                        currentTarget.onerror = null; // prevents looping\r\n                                                        currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                    }} /> :\r\n                                                    null}\r\n                                            </ListItemText>\r\n                                        </ListItem> */}\r\n                    {/* <Divider style={{ border: '1px solid gray' }} /> */}\r\n                    {/* </>\r\n                                )\r\n                            })\r\n\r\n                            : <>\r\n                                <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                    <Grid item sm={2} >\r\n                                        <Paper elevation={3} className={classes.groupreports} >\r\n                                            <center>\r\n                                                <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                            </center>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true}\r\n                                                    style={{\r\n                                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                                        fontStyle: 'normal',\r\n                                                        fontWeight: 600,\r\n                                                        overflow: 'hidden',\r\n                                                        whiteSpace: 'nowrap',\r\n                                                        textOverflow: 'ellipsis',\r\n                                                        color: '#2C7FB2',\r\n                                                        fontSize: 14\r\n                                                    }}>\r\n                                                    No Records Found\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid> */}\r\n                    {/* <ListItemText>\r\n                                    <div>\r\n                                        <ListItemText style={{ fontSize: 16, fontFamily: 'Poppins', fontWeight: 400, color: '#2C7FB2' }}>No Records Found</ListItemText>\r\n                                    </div>\r\n                                    <img src=\"default-image.png\" style={{ height: 180, width: '100%' }} />\r\n                                </ListItemText> */}\r\n                    {/* </>\r\n\r\n                        }\r\n                    </Grid> */}\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n\r\n        width: 90,\r\n        borderRadius: 10,\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, AppBar, IconButton, Toolbar, DialogContent, DialogActions, DialogTitle, DialogContentText, Button, Slide } from \"@material-ui/core\";\r\nimport { DeleteReportsByTitle } from '../../../../Apis/Staff/Patient_Reports/index';\r\nimport { transparent } from 'material-ui/styles/colors';\r\n\r\nexport const DeletePatientReports = ({ show, data, handleCloseDeletemodal }) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n\r\n    const DeleteReports = async (userid, reporttitle) => {\r\n        const request = await DeleteReportsByTitle(userid, reporttitle);\r\n        let parse = JSON.parse(request);\r\n        if (parse.success === \"200\") {\r\n            handleCloseDeletemodal();\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>  <Dialog\r\n            open={show}\r\n            keepMounted\r\n            onClose={handleCloseDeletemodal}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                    Do you want to Delete Reports?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions style={{ marginTop: 20 }}>\r\n                <Button className={classes.btnregister} onClick={handleCloseDeletemodal} style={{ width: 100 }} >\r\n                    No\r\n                </Button>\r\n                <Button className={classes.btnregister} onClick={() => DeleteReports(data.UserId, data.ReportTitle)} style={{ width: 100 }}>\r\n                    Yes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: transparent\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnYes: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n}));","\r\nimport React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography, Button, InputBase, Divider, Grid, Paper, IconButton } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Patients_Data, Reports, getReportsByTitle } from '../../Apis/Staff/Patient_Reports/index';\r\nimport { PatientReportImages } from './components/Patient_Reports_Image_Comp/index';\r\nimport { DeletePatientReports } from './components/Patient_Reports_Image_Comp/DeletePatient_Report';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\n\r\nconst getPatientSearchApi = 'http://13.233.217.107:8080/api/Web_SearchPatients';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nexport default function Staff_Reports() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [patientData, setpatientData] = React.useState([]);\r\n    const [reportsData, setreportsData] = React.useState([]);\r\n    const [puserid, setpuserid] = React.useState('');\r\n    const [openmodal, setopenmodal] = React.useState(false);\r\n    const [modalData, setmodalData] = React.useState([]);\r\n    const [opendeletemodal, setopendeletemodal] = React.useState(false);\r\n    const [deletemodalData, setdeletemodalData] = React.useState([]);\r\n    const [patientsearch, setpatientsearch] = useState([]);\r\n\r\n    const fetchPatientData = async () => {\r\n        const patientInfo = await Patients_Data();\r\n        setpatientData(patientInfo);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPatientData();\r\n    }, []);\r\n\r\n    const handleRowClick = async (UserId) => {\r\n        setpuserid(UserId)\r\n        const report = await Reports(puserid);\r\n        setreportsData(report);\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        if (puserid == '') {\r\n            alert('Please Select Patient');\r\n            return;\r\n        }\r\n        navigate('/Staff_Upload_Reports', {\r\n            state: { detail: puserid }\r\n        });\r\n    }\r\n\r\n    const getImageData = async (item) => {\r\n        setmodalData(item);\r\n        setopenmodal(true);\r\n    }\r\n\r\n    const getDeleteModalData = async (item) => {\r\n        setdeletemodalData(item);\r\n        setopendeletemodal(true);\r\n    }\r\n\r\n    const searchPatient = async (patientsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const patientsInfo = await axios.post(getPatientSearchApi, { ClinicId: clinicid, Name: patientsearch });\r\n            setpatientData(patientsInfo?.data?.Patients);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Reports\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} >\r\n                    <Paper elevation={6} className={classes.paper} style={{ borderRadius: 10, paddingTop: 20, paddingBottom: 20 }}>\r\n                        <Grid container xs={12}>\r\n                            <Grid item xs={6}>\r\n                                <center>\r\n                                    <SearchIcon className={classes.searchIcon} />\r\n                                    <InputBase\r\n                                        placeholder=\"Search by Name/Email\"\r\n                                        onChange={(e) => setpatientsearch(e.target.value)}\r\n                                        value={patientsearch}\r\n                                        classes={{\r\n                                            input: classes.inputInput,\r\n                                        }}\r\n                                        variant='outlined'\r\n                                        inputProps={{ 'aria-label': 'search' }}\r\n                                        style={{ borderRadius: 15 }}\r\n                                    > </InputBase>\r\n                                </center>\r\n                            </Grid>\r\n                            <Grid item xs={6} style={{ alignSelf: 'center', }}>\r\n                                <Button className={classes.btnSearch} onClick={() => searchPatient(patientsearch)} size=\"small\" style={{ float: 'right', fontSize: 12, textAlign: 'center' }}>Search</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        <DataGrid\r\n                            style={{ height: 270, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                            rows={patientData}\r\n                            rowHeight={30}\r\n                            columns={columns}\r\n                            columnWidth={10}\r\n                            pageSize={6}\r\n                            onRowClick={(newSelection) => handleRowClick(newSelection.row.UserId)}\r\n                        />\r\n\r\n                        <Divider />\r\n                        <Grid container xs={12} style={{ paddingTop: 20 }}>\r\n                            <Grid item xs={12}>\r\n                                <center> <Button className={classes.btnUpload} onClick={handleSubmit} size=\"small\" style={{ fontSize: 12 }}>Upload</Button> </center>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={8}>\r\n                    <Paper elevation={6} style={{ borderRadius: 10, padding: 20, marginLeft: 25, marginRight: 20 }}>\r\n                        <Typography variant=\"h6\" noWrap={true}\r\n                            style={{\r\n                                fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: 600,\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis',\r\n                                color: '#2C7FB2',\r\n                                textDecoration: 'underline',\r\n                                fontSize: 18,\r\n                                textUnderlineOffset: '1px',\r\n                            }}>\r\n                            View Reports\r\n                        </Typography>\r\n\r\n                        {reportsData.length != 0 ?\r\n                            <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                {reportsData.map((item) => {\r\n                                    return (\r\n                                        <Grid item sm={2} >\r\n                                            <Paper elevation={3} className={classes.groupreports} >\r\n                                                <center>\r\n                                                    <IconButton edge=\"start\" size='small' aria-label=\"close\" style={{ marginTop: '-15px', float: 'right', color: 'gray' }}>\r\n                                                        <DeleteIcon size='small' onClick={() => getDeleteModalData(item)} />\r\n                                                    </IconButton>\r\n                                                    {item.ReportImage ? <img src={item.ReportImage} onClick={() => getImageData(item)} style={{ height: '120px', width: '100%', borderRadius: 10, cursor: 'pointer' }} onError={({ currentTarget }) => {\r\n                                                        currentTarget.onerror = null; // prevents looping\r\n                                                        currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                    }} /> : <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                                    }\r\n                                                </center>\r\n                                            </Paper>\r\n                                            <div style={{ marginTop: 10 }}>\r\n                                                <center>\r\n                                                    <Typography variant=\"h6\" noWrap={true}\r\n                                                        style={{\r\n                                                            fontFamily: '\"Poppins\", san-serif;',\r\n                                                            fontStyle: 'normal',\r\n                                                            fontWeight: 600,\r\n                                                            overflow: 'hidden',\r\n                                                            whiteSpace: 'nowrap',\r\n                                                            textOverflow: 'ellipsis',\r\n                                                            color: '#2C7FB2',\r\n                                                            fontSize: 14\r\n                                                        }}>\r\n                                                        {item.ReportTitle}\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    )\r\n                                })}\r\n                            </Grid>\r\n                            :\r\n                            <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                <Grid item sm={2} >\r\n                                    <Paper elevation={3} className={classes.groupreports} >\r\n                                        <center>\r\n                                            <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                        </center>\r\n                                        <center>\r\n                                            <Typography variant=\"h6\" noWrap={true}\r\n                                                style={{\r\n                                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    overflow: 'hidden',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    textOverflow: 'ellipsis',\r\n                                                    color: '#2C7FB2',\r\n                                                    fontSize: 14\r\n                                                }}>\r\n                                                Select Image\r\n                                            </Typography>\r\n                                        </center>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {openmodal ? <PatientReportImages show={openmodal} data={modalData} handleClosemodal={() => setopenmodal(false)} /> : null}\r\n                {opendeletemodal ? <DeletePatientReports show={opendeletemodal} data={deletemodalData} handleCloseDeletemodal={() => setopendeletemodal(false)} /> : null}\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        color: '#707070',\r\n        fontWeight: 400,\r\n        fontSize: 11\r\n    },\r\n\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnSearch: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    groupreports: {\r\n        height: 110,\r\n        width: 100,\r\n        borderRadius: 10,\r\n    },\r\n}));\r\n\r\n","\r\nimport React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Container, FormControl, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { Upload_Reports } from '../../Apis/Staff/Patient_Reports/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        fontSize: 11\r\n    },\r\n\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    headingAddMedicine: {\r\n        paddingTop: 20,\r\n        alignItems: 'center',\r\n        color: '#2C7FB2 !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n    groupreports: {\r\n        height: 110,\r\n        width: 100,\r\n        borderRadius: 10,\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 150,\r\n        fontSize: '12px'\r\n    },\r\n    textField: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    btnDelete: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 100,\r\n        marginTop: 10,\r\n        fontSize: '12px'\r\n    },\r\n\r\n}));\r\n\r\n\r\nfunction Staff_Upload_Reports() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [reportdetails, setreportdetails] = useState(location.state.detail);\r\n    const [base64, setbase64] = useState('');\r\n    const [title, settitle] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    var date = new Date();\r\n    var today = date.toISOString().split('T')[0];\r\n\r\n    let base64String = \"\";\r\n\r\n    // const handleSubmit = async () => {\r\n    //     navigate('/DoctorReports');\r\n    // }\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const handlesGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const convertToBase64 = () => {\r\n        var file = document.querySelector('input[type=file]')['files'][0];\r\n        console.log(file);\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            base64String = reader.result.replace(\"data:\", \"\")\r\n                .replace(/^.+,/, \"\");\r\n\r\n            setbase64('data:image/png;base64,' + base64String)\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    let imageData = useSelector(state => state.addPatient_Reports)\r\n\r\n    const handleAddReports = async () => {\r\n        var data = localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        let doctorid = parsed.userid;\r\n        const obj = {\r\n            'id': Math.floor(Math.random() * 100 + 20),\r\n            'UserId': reportdetails,\r\n            'ClinicId': clinicid,\r\n            'DoctorId': doctorid,\r\n            'base64image': base64,\r\n            'Date': today,\r\n            'ReportTitle': title\r\n        }\r\n        dispatch({ type: 'ADD_REPORTS', payload: obj });\r\n    }\r\n\r\n    const handleUploadReports = async () => {\r\n        try {\r\n            const requestReports = await Upload_Reports(imageData);\r\n            let parse = JSON.parse(requestReports);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                dispatch({ type: 'RESET_REPORTS_ITEM' });\r\n                navigate('/Staff_Reports')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const openImageInNewTab = async (data) => {\r\n        var image = new Image();\r\n        image.src = data;\r\n\r\n        var w = window.open(\"\");\r\n        w.document.write(image.outerHTML);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Upload Reports\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 20 }}>\r\n                    <Grid item xs={4}>\r\n                        <Paper elevation={6} className={classes.paper} style={{ marginLeft: 20, marginRight: 20 }}>\r\n                            <center>\r\n                                <Typography className={classes.headingAddMedicine} variant=\"h6\" noWrap={true} >\r\n                                    Upload Reports\r\n                                </Typography>\r\n                            </center>\r\n\r\n                            <div style={{ paddingTop: 20 }}>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                        <TextField className={classes.textField} onChange={(e) => settitle(e.target.value)} id=\"outlined-basic\" label=\"Title\" variant=\"outlined\" size=\"small\" />\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl}  >\r\n                                        <TextField className={classes.textField} onChange={convertToBase64} id=\"outlined-basic\" type='file' variant=\"outlined\" size=\"small\" />\r\n                                    </FormControl>\r\n\r\n                                </div>\r\n                                <div style={{ paddingTop: 100 }}>\r\n                                    <Divider style={{ border: ' 1px solid #F0F0F0' }} />\r\n                                    <Grid container spacing={2} style={{ paddingTop: 10, paddingBottom: 10 }}>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <center> <Button className={classes.btnCancle} onClick={handlesGoBack} >Cancel</Button> </center>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <center>\r\n                                                {imageData.length < 5 ?\r\n                                                    <Button onClick={handleAddReports} className={classes.btnAdd}>Add</Button> :\r\n                                                    alert('You cannnot Add more than 5 images')\r\n                                                }\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={8} spacing={2} >\r\n                        <Paper elevation={6} style={{ padding: 20, marginLeft: 25, marginRight: 20, height: 350 }}>\r\n\r\n                            {imageData.length != 0 ?\r\n                                <Grid container xs={12} spacing={2}>\r\n                                    {imageData.map((item) => {\r\n                                        return (\r\n                                            <Grid item sm={2} >\r\n                                                <Paper elevation={3} className={classes.groupreports} >\r\n                                                    <center>\r\n                                                        {item.base64image ? <img src={item.base64image} onClick={() => openImageInNewTab(item.base64image)} style={{ height: '120px', width: '100%', borderRadius: 10, cursor: 'pointer' }} onError={({ currentTarget }) => {\r\n                                                            currentTarget.onerror = null; // prevents looping\r\n                                                            currentTarget.src = \"default-pdf-image.jpg\";\r\n                                                        }} /> : <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                                        }\r\n                                                    </center>\r\n                                                    <center><Button className={classes.btnDelete} onClick={() => dispatch({ type: 'DELETE_REPORTS', payload: item })}>Delete</Button></center>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                        )\r\n                                    })}\r\n\r\n                                </Grid>\r\n                                :\r\n                                <Grid container spacing={2} style={{ paddingTop: 20, height: 355, overflowY: 'auto' }}>\r\n                                    <Grid item sm={2} >\r\n                                        <Paper elevation={3} className={classes.groupreports} >\r\n                                            <center>\r\n                                                <img src=\"default-image.png\" style={{ height: '120px', width: '100%' }} />\r\n                                            </center>\r\n                                            <center>\r\n                                                <Typography variant=\"h6\" noWrap={true}\r\n                                                    style={{\r\n                                                        fontFamily: '\"Poppins\", san-serif;',\r\n                                                        fontStyle: 'normal',\r\n                                                        fontWeight: 600,\r\n                                                        overflow: 'hidden',\r\n                                                        whiteSpace: 'nowrap',\r\n                                                        textOverflow: 'ellipsis',\r\n                                                        color: '#2C7FB2',\r\n                                                        fontSize: 14\r\n                                                    }}>\r\n                                                    Select Image\r\n                                                </Typography>\r\n                                            </center>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <center>  <Button className={classes.btnUpload} onClick={handleUploadReports}>Upload</Button> </center>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default connect()(Staff_Upload_Reports)","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../../ipaddress/ip';\r\n\r\nexport const ApprovedHomeVisitorRequest = async (object, hvobject) => {\r\n\r\n    const date = new Date();\r\n    const now = date.toISOString().split('T')[0];\r\n    const time = date.getHours() + \":\" + date.getMinutes() +\":\" + date.getSeconds();\r\n    var data = localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const res = await axios.post(ip + 'ApprovedHomeVisitorRequest', {\r\n            id: object.id,\r\n            ClinicId: clinicid,\r\n            FirstName: object.FirstName,\r\n            LastName: object.LastName,\r\n            Title: object.HomeVisitReason,\r\n            RequesterId: object.RequesterId,\r\n            HomeVisitorId: hvobject,\r\n            AppointmentDate: now,\r\n            BookedDate: now,\r\n            AppointmentTime: time,\r\n            AppointmentStatus: 'Booked'\r\n        })\r\n\r\n        return res?.data;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n\r\n}\r\n","import axios from 'axios';\r\nimport ip from '../../../../ipaddress/ip';\r\n\r\n\r\nexport const Delete_Home_Visitor_Request = async (id) => {\r\n    try {\r\n        const deleterequest = await axios.delete(ip + 'Web_DeleteHomeVisitorRequest', { data: { id: id } });\r\n        return JSON.stringify(deleterequest?.data);\r\n    } catch (error) {\r\n        return (error.response.data.message);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Delete_Home_Visitor_Request } from '../../../../../Apis/Staff/HomeVisitorRequest/DeleteHomeVisitorRequest/index';\r\n\r\nconst Delete_HV_Request = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (id) => {\r\n        const request = await Delete_Home_Visitor_Request(id);\r\n        let response = JSON.parse(request);\r\n        if (response.success == '200') {\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Home Visitor Request Details?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={() => Delete_Api(data.id)} className={classes.btnregister} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_HV_Request;\r\n","import axios from 'axios';\r\nimport ip from '../../../../ipaddress/ip';\r\n\r\n\r\nexport const AddHomeVisitorRequest = async (RequesterId, HomeVisitorId, ClinicId, RequestStatus, MobileNo, Address, PreferedTime, PreferedDate, HomeVisitReason) => {\r\n    const body = {\r\n        RequesterId: RequesterId,\r\n        HomeVisitorId: HomeVisitorId,\r\n        ClinicId: ClinicId,\r\n        RequestStatus: RequestStatus,\r\n        MobileNo: MobileNo,\r\n        Address: Address,\r\n        PreferedTime: PreferedTime,\r\n        PreferedDate: PreferedDate + \" \" + PreferedTime,\r\n        HomeVisitReason: HomeVisitReason,\r\n    }\r\n    try {\r\n        const res = await axios.post(ip + 'Web_AddHomeVisitorRequest', body);\r\n        return JSON.stringify(res?.data);\r\n    }\r\n    catch (error) {\r\n        return JSON.stringify(error.response.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Time } from '../../../../../Apis/Staff/Dashboard/Edit_Appointment_From_PatientIn/index';\r\nimport {AddHomeVisitorRequest} from '../../../../../Apis/Staff/HomeVisitorRequest/AddHVRequest/index';\r\n\r\nimport axios from 'axios';\r\nconst drawerWidth = 240;\r\n\r\nconst Add_HV_Request = ({ show, data, handleclose }) => {\r\n    const getClinicPatients = 'http://13.233.217.107:8080/api/Web_GetPatients';\r\n    const getHomevisitors = 'http://13.233.217.107:8080/api/GetHomeVisitorDoctorsforClinic';\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [firstnm, setfirstnm] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [slots, setslots] = useState([]);\r\n    const [requestfor, setrequestfor] = useState('');\r\n    const [MobileNo, setMobileNo] = useState('');\r\n    const [date, setdate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [Address, setAddress] = useState('');\r\n    const [text, settext] = useState('');\r\n    const [PatientUserid, setPatientUserid] = useState('')\r\n    const [hvuserid, sethvuserid] = useState('');\r\n    const [homevisitorsearch, sethomevisitorsearch] = useState([]);\r\n    var arr = [];\r\n    const [patient, setpatient] = useState(arr);\r\n    useEffect(() => {\r\n        fetchtimings();\r\n        fetchclinicpatientsdata();\r\n        fetchHomeVisitorData();\r\n    }, [])\r\n\r\n    const fetchtimings = async () => {\r\n        try {\r\n            const timingInfo = await Time()\r\n            setslots(timingInfo);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const fetchHomeVisitorData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const homevisitorInfo = await axios.post(getHomevisitors, { ClinicId: clinicid });\r\n            sethomevisitorsearch(homevisitorInfo?.data?.HomeVisitors);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    const fetchclinicpatientsdata = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const clinicpatientInfo = await axios.post(getClinicPatients, { ClinicId: clinicid })\r\n            setpatient(clinicpatientInfo?.data?.Patients);\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const addRequest = async (PatientUserid, hvuserid, MobileNo, Address, time, date, requestfor) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let ClinicId = parsed.ClinicId;\r\n        try {\r\n            const registration = await AddHomeVisitorRequest(PatientUserid, hvuserid, ClinicId, \"Pending\", MobileNo, Address, time, date, requestfor);\r\n            let parse = JSON.parse(registration);\r\n            if (parse.success === \"200\") {\r\n                alert(parse.message);\r\n                handleclose();\r\n                window.location.reload()\r\n            }\r\n            else {\r\n                alert(parse.message);\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    console.log(homevisitorsearch)\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Home Visitor Request\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleclose} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                {/* <Autocomplete\r\n                                    disablePortal\r\n                                    id=\"combo-box-demo\"\r\n                                    options={patient}\r\n                                    sx={{ width: 300 }}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Movie\" />}\r\n                                /> */}\r\n                                <Select\r\n                                    className={classes.textField}\r\n                                    onChange={(e) => setPatientUserid(e.target.value)}\r\n                                    native\r\n                                    label=\"select doctor\"\r\n                                    inputProps={{\r\n                                        name: 'select doctor',\r\n                                        id: 'outlined-appointment-native-simple',\r\n                                    }}\r\n\r\n                                    style={{ width: '400px', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                >\r\n                                    <option aria-label=\"None\" value=\"\" >Select Patient</option>\r\n                                    {patient.map(v => (<option value={v.UserId}>{v.FirstName} {v.LastName}</option>))}\r\n                                </Select>\r\n\r\n                            </FormControl>\r\n                            <TextField className={classes.inputFields}\r\n                                value={requestfor}\r\n                                onChange={(e) =>\r\n                                    setrequestfor(e.target.value)\r\n                                }\r\n                                id=\"outlined-basic\"\r\n                                size=\"small\"\r\n                                placeholder=\"Requesting For*\"\r\n                                variant=\"outlined\"\r\n                                style={{ marginTop: '20px' }}\r\n                            />\r\n\r\n                            <TextField\r\n                                className={classes.inputFields}\r\n                                value={MobileNo}\r\n                                onChange={(e) => {\r\n                                    const re = /^[0-9\\b]+$/;\r\n                                    if (e.target.value === '' || re.test(e.target.value)) {\r\n                                        setMobileNo(e.target.value)\r\n                                    }\r\n                                }}\r\n                                id=\"outlined-basic\"\r\n                                type=\"number\"\r\n                                size=\"small\"\r\n                                placeholder=\"Mobile Number*\"\r\n                                variant=\"outlined\"\r\n                                onInput={(e) => {\r\n                                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6} >\r\n\r\n                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                <Select\r\n                                    className={classes.textField}\r\n                                    native\r\n                                    label=\"select doctor\"\r\n                                    value={hvuserid}\r\n                                    onChange={(e) => sethvuserid(e.target.value)}\r\n                                    inputProps={{\r\n                                        name: 'select doctor',\r\n                                        id: 'outlined-appointment-native-simple',\r\n                                    }}\r\n\r\n                                    style={{ width: '400px', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                >\r\n                                    <option aria-label=\"None\" value=\"\" >Select Doctor</option>\r\n                                    {homevisitorsearch.map(v => (<option value={v.UserId}>{v.FirstName} {v.LastName}</option>))}\r\n                                    {/* {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))} */}\r\n                                </Select>\r\n\r\n                            </FormControl>                            <TextField\r\n                                className={classes.inputFields}\r\n                                id=\"outlined-basic\"\r\n                                size=\"small\"\r\n                                value={date}\r\n                                onChange={(e) => setdate(e.target.value)}\r\n                                type='date'\r\n                                variant=\"outlined\"\r\n                                style={{ marginTop: '20px' }}\r\n                            />\r\n                            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                                <Select\r\n                                    className={classes.textField}\r\n                                    native\r\n                                    value={time}\r\n                                    onChange={(e) => setTime(e.target.value)}\r\n                                    label=\"time\"\r\n                                    inputProps={{\r\n                                        name: 'time',\r\n                                        id: 'outlined-appointment-native-simple',\r\n                                    }}\r\n\r\n                                    style={{ width: '400px', color: '#707070', fontSize: 14, fontWeight: 400, fontFamily: 'Poppins' }}\r\n\r\n                                >\r\n                                    <option aria-label=\"None\" value=\"\" >Time</option>\r\n                                    {slots.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))}\r\n                                    {/* {time.map(v => (<option value={v.ActualTime}>{v.DisplayTime}</option>))} */}\r\n                                </Select>\r\n\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField className={classes.inputFields} multiline\r\n                                value={Address}\r\n                                onChange={(e) => {\r\n                                    setAddress(e.target.value)\r\n                                }}\r\n                                rows={2}\r\n                                rowsMax={6} id=\"outlined-basic\" size=\"small\" label=\"Address\" variant=\"outlined\"\r\n                                style={{ width: 855 }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid xs={12} sm={6}>\r\n                                <Button className={classes.btnCancle} onClick={handleclose} style={{ float: 'right', marginRight: 20 }}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid xs={12} sm={6}>\r\n                                <Button onClick={() => addRequest(PatientUserid, hvuserid, MobileNo, Address, time, date, requestfor)} className={classes.btnregister} style={{ float: 'left', marginLeft: 20 }}>\r\n                                    Add\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 400,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}))\r\n\r\nexport default Add_HV_Request;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogTitle, DialogContentText, DialogActions, DialogContent, Typography, Button, IconButton, Grid, Paper, InputBase, Avatar, TextField, FormControl, Select, Slide } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { HomeVisitorRequest } from '../../Apis/HomeVisitorRequest/GetHomeVisitorRequest/index';\r\nimport { ApprovedHomeVisitorRequest } from '../../Apis/Staff/HomeVisitorRequest/ApprovedRequest/index';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Delete_HV_Request from './components/HomeVisitor_Request/Delete_Request/index';\r\nimport Add_HV_Request from './components/HomeVisitor_Request/Add_HV_Request/index';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\n\r\nconst getHomeVisitorRequestSearchApi = 'http://13.233.217.107:8080/api/Web_SearchHomeVisitorRequest';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n    description: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 145,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n    buttonProgress: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft: 350\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Staff_Home_Visit_Request() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [requestData, setrequestData] = useState([]);\r\n    const [requestorDetails, setrequestorDetails] = useState([]);\r\n    const [openapprovedmodal, setOpenApprovedmodal] = React.useState(false);\r\n    const [approvedRequest, setapprovedRequest] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [openDeleteModal, setopenDeleteModal] = useState(false);\r\n    const [textdata, settextdata] = useState('');\r\n    const [homevisitorrequestsearch, sethomevisitorrequestsearch] = useState([]);\r\n    const [openhvmodal, setopenhvmodal] = useState(false);\r\n\r\n    const fetchRequestData = async () => {\r\n        try {\r\n            const requestInfo = await HomeVisitorRequest();\r\n            setrequestData(requestInfo);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const searchHomeVisitorsRequest = async (homevisitorrequestsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const requestInfo = await axios.post(getHomeVisitorRequestSearchApi, { ClinicId: clinicid, Name: homevisitorrequestsearch });\r\n            setrequestData(requestInfo?.data?.HomeVisitorRequest);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleRowClick = async (id) => {\r\n        setrequestorDetails(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRequestData();\r\n    }, []);\r\n\r\n\r\n    const handleClickOpenApprovedmodal = async (obj) => {\r\n        setLoading(true);\r\n        const res = await ApprovedHomeVisitorRequest(obj)\r\n\r\n        if (res) {\r\n            setapprovedRequest(obj)\r\n            setOpenApprovedmodal(true);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleContinue = () => {\r\n        if (requestorDetails == '') {\r\n            alert('Please select request from list');\r\n            return;\r\n        }\r\n        navigate('/Staff_Assign_Home_Visitor', {\r\n            state: { details: requestorDetails }\r\n        })\r\n    };\r\n\r\n    const handlesContinue = () => {\r\n        if (requestorDetails == '') {\r\n            alert('Please select request from list');\r\n            return;\r\n        }\r\n        else { (setopenDeleteModal(true)) }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    const [opendatemodal, setOpenDatemodal] = React.useState(false);\r\n\r\n    const handleClickOpenDatemodal = () => {\r\n        setOpenDatemodal(true);\r\n    };\r\n\r\n    const handleCloseDatemodal = () => {\r\n        setOpenDatemodal(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Home Visitor Requests\r\n                        <Button onClick={() => setopenhvmodal(true)} className={classes.btnregister} style={{ float: 'right', marginRight: 20, fontFamily: 'Poppins', fontSize: 12, width: 190 }}>Add Home Visitor Request</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            label=\"Search by Name\"\r\n                                            placeholder='Search by patient'\r\n                                            onChange={(e) => settextdata(e.target.value)}\r\n                                            value={textdata}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} onClick={() => searchHomeVisitorsRequest(homevisitorrequestsearch)} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>Search</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            <DataGrid\r\n                                style={{ height: 350, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                                rows={requestData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={5}\r\n                                onRowClick={(newSelection) => {\r\n                                    handleRowClick(newSelection.row);\r\n                                }}\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins', textDecorationLine: 'underline', textUnderlineOffset: '1px', textDecorationThickness: '1px',\r\n                                fontStyle: 'normal',\r\n\r\n                            }}>\r\n                                Profile\r\n                            </Typography>\r\n                            <div><Button style={{ position: 'relative', marginTop: -55, left: 700, fontWeight: 'normal', color: '#707070' }} onClick={handlesContinue}><DeleteIcon /></Button> </div>\r\n                            <center>\r\n                                <div style={{ paddingBottom: 5 }}>\r\n                                    {requestorDetails.ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} src={requestorDetails.ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {requestorDetails.FirstName ? requestorDetails.FirstName : \"NA\"} {requestorDetails.LastName ? requestorDetails.LastName : \"\"}\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 14,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 400\r\n                                }}>\r\n                                    Requester Id: {requestorDetails.RequesterId ? requestorDetails.RequesterId : \"NA\"}\r\n                                </Typography>\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: \"Poppins\" }}>\r\n                                            Mobile Number\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {requestorDetails.MobileNo ? requestorDetails.MobileNo : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Prefered Date\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {requestorDetails.PreferedTime ? `${(requestorDetails.PreferedTime).split(' ')[0]}` : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Prefered Time\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {requestorDetails.PreferedTime ? requestorDetails.PreferedTime && `${(requestorDetails.PreferedTime).split(' ')[1]}` : \"NA\"}\r\n                                        </Typography>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Email Id\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {requestorDetails.Email ? requestorDetails.Email : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12}>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Address\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {requestorDetails.address ? requestorDetails.address : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Home Visit Reason\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {requestorDetails.HomeVisitReason ? requestorDetails.HomeVisitReason : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 20 }}>\r\n                                    {!loading ? <>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={handleGoBack} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                        </Grid>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} disabled={loading} onClick={() => handleContinue(requestorDetails)} style={{ float: 'left', marginLeft: 20 }}>Continue</Button>\r\n                                            {/* <Button className={classes.btnregister} disabled={loading} onClick={() => handleClickOpenApprovedmodal(requestorDetails)} style={{ float: 'left', marginLeft: 20 }}>Continue</Button> */}\r\n                                        </Grid>\r\n                                    </> :\r\n                                        <CircularProgress size={20} className={classes.buttonProgress} />\r\n                                    }\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {openDeleteModal ? <Delete_HV_Request show={openDeleteModal} data={requestorDetails} handleclose={() => setopenDeleteModal(false)} /> : null}\r\n\r\n                {openhvmodal ? <Add_HV_Request show={openhvmodal} handleclose={() => setopenhvmodal(false)} /> : null}\r\n\r\n                {/* for Approve Request*/}\r\n\r\n                <Dialog\r\n                    open={openapprovedmodal}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#78B088' }}>\r\n                        <center>\r\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"close\" style={{ color: '#fff', backgroundColor: '#78B088' }}>\r\n                                <CheckIcon style={{ fontSize: 35, fontWeight: 600 }} />\r\n                            </IconButton>\r\n                        </center>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#78B088', fontSize: 20 }}>\r\n                            Home Visitor Request Has Been Approved!\r\n                        </DialogContentText>\r\n                        <Grid item xs={12} style={{ marginTop: 40 }}>\r\n                            <center>\r\n                                <Button className={classes.btnregister} onClick={handleContinue} style={{ width: 100, fontSize: 14, fontFamily: 'Poppins' }}>\r\n                                    OK\r\n                                </Button>\r\n                            </center>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions >\r\n\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n\r\n                {/* for Change Date Time */}\r\n\r\n                <Dialog\r\n                    open={opendatemodal}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleCloseDatemodal}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#00318B' }}>{\"Edit Date/Time\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseDatemodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#2C7FB2', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n                                        Date\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#2C7FB2', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50, marginTop: 15 }}>\r\n                                        Time\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" style={{ width: '100%', marginTop: 20 }} >\r\n                                        <Select\r\n                                            size='large'\r\n                                            native\r\n                                            inputProps={{\r\n                                                name: 'start time',\r\n                                                id: 'outlined-start-time-native-simple',\r\n                                            }}\r\n                                            style={{ width: '90%', fontSize: 12 }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\">Select Time</option>\r\n                                            <option value={1}>08:00</option>\r\n                                            <option value={2}>09:00</option>\r\n                                            <option value={3}>10:00</option>\r\n                                            <option value={4}>11:00</option>\r\n                                            <option value={5}>12:00</option>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <Grid container style={{ paddingBottom: 20 }}>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnregister} onClick={handleCloseDatemodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnregister} onClick={handleCloseDatemodal} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Dialog>\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, Slide, Button, } from \"@material-ui/core\";\r\nimport { Delete_home_visitor_Details_by_id } from '../../../../../Apis/Staff/Home_Visitors/index';\r\n\r\nconst Delete_Home_Vistor_Modal = ({ show, data, handleclose }) => {\r\n    const classes = useStyles();\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (PatientId) => {\r\n\r\n        const request = await Delete_home_visitor_Details_by_id(PatientId);\r\n        let response = JSON.parse(request);\r\n        if (response.success == '200') {\r\n            alert(response.message);\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to Delete Home Visitor's Details?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data[0].UserId)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Delete_Home_Vistor_Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, Switch, InputLabel, FormControlLabel, DialogTitle, Typography, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Edit_HomeVisitor } from '../../../../../Apis/Staff/Home_Visitors/index';\r\nimport { Times, Doctor_Category } from '../../../../../Apis/Staff/Home_Visitors/index';\r\nimport axios from 'axios';\r\nconst getHomevisitors = 'http://13.233.217.107:8080/api/GetHomeVisitorDoctorsforClinic';\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n    description: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 145,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(1.2),\r\n\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 8,\r\n    },\r\n\r\n}));\r\n\r\nexport default function EditHomeVisitors({ show, data, handleCloseEditmodal }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    let obj = JSON.stringify(data);\r\n    let parse = JSON.parse(obj);\r\n    console.log(data);\r\n    const [homevisitorData, sethomevisitorData] = useState([]);\r\n    const [homevisitorDetails, sethomevisitorDetails] = useState({});\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [firstName, setfirstName] = useState(parse[0].FirstName);\r\n    const [lastName, setlastName] = useState(parse[0].LastName);\r\n    const [mobileno, setmobileno] = useState(parse[0].MobileNo);\r\n    const [email, setemail] = useState(parse[0].Email);\r\n    const [address, setaddress] = useState(parse[0].Address);\r\n    const [education, seteducation] = useState(parse[0].Education);\r\n    const [category, setcategory] = useState(parse[0].Category);\r\n    const [From_AvailabilityTime, setFrom_AvailabilityTime] = useState(parse[0].From_AvailabilityTime);\r\n    const [To_AvailabilityTime, setTo_AvailabilityTime] = useState(parse[0].To_AvailabilityTime);\r\n    const [monday, setmonday] = useState(data[0].Monday);\r\n    const [tuesday, settuesday] = useState(data[0].Tuesday);\r\n    const [wednesday, setwednesday] = useState(data[0].Wednesday);\r\n    const [thursday, setthursday] = useState(data[0].Thursday);\r\n    const [friday, setfriday] = useState(data[0].Friday);\r\n    const [saturday, setsaturday] = useState(data[0].Saturday);\r\n    const [sunday, setsunday] = useState(data[0].Sunday);\r\n    const [password, setpassword] = useState('');\r\n    const [editstate, seteditstate] = useState('');\r\n    const [Pincode, setPincode] = useState('');\r\n    const [City, setCity] = useState('');\r\n    const [Country, setCountry] = useState('');\r\n    const [Gender, setGender] = useState('');\r\n    const [DOB, setDOB] = useState('');\r\n    const [Experience, setExperience] = useState('');\r\n    const [times, setTimes] = useState([]);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n\r\n    const handlemonday = () => {\r\n        setmonday(previousState => !previousState);\r\n    }\r\n    const handletuesday = () => {\r\n        settuesday(previousState => !previousState);\r\n    }\r\n    const handlewednesday = () => {\r\n        setwednesday(previousState => !previousState);\r\n    }\r\n    const handlethursday = () => {\r\n        setthursday(previousState => !previousState);\r\n    }\r\n    const handlefriday = () => {\r\n        setfriday(previousState => !previousState);\r\n    }\r\n    const handlesaturday = () => {\r\n        setsaturday(previousState => !previousState);\r\n    }\r\n    const handlesunday = () => {\r\n        setsunday(previousState => !previousState);\r\n    }\r\n    const handleAll = async () => {\r\n        setmonday(previousState => !previousState);\r\n        settuesday(previousState => !previousState);\r\n        setwednesday(previousState => !previousState);\r\n        setthursday(previousState => !previousState);\r\n        setfriday(previousState => !previousState);\r\n        setsaturday(previousState => !previousState);\r\n        setsunday(previousState => !previousState);\r\n    }\r\n\r\n\r\n    const EditHomeVisitor = async () => {\r\n        var sessiondata = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(sessiondata);\r\n        let clinicid = parsed.ClinicId;\r\n        console.log(data[0].UserId)\r\n        const obje = {\r\n            ClinicId: clinicid,\r\n            UserId: data[0].UserId,\r\n            FirstName: firstName,\r\n            LastName: lastName,\r\n            MobileNo: mobileno,\r\n            Password: password,\r\n            Email: email,\r\n            Address: address,\r\n            Education: education,\r\n            From_AvailabilityTime: From_AvailabilityTime,\r\n            To_AvailabilityTime: To_AvailabilityTime,\r\n            Sunday: sunday,\r\n            Monday: monday,\r\n            Tuesday: tuesday,\r\n            Wednesday: wednesday,\r\n            Thursday: thursday,\r\n            Friday: friday,\r\n            Saturday: saturday,\r\n            Pincode: Pincode,\r\n            EditState: editstate,\r\n            City: City,\r\n            Country: Country,\r\n            Gender: Gender,\r\n            DOB: DOB,\r\n            Experience: Experience,\r\n            // Role: 'Home Visitor'\r\n        }\r\n        const edithomevisitorrequest = await Edit_HomeVisitor(obje);\r\n        let parse = JSON.parse(edithomevisitorrequest);\r\n        if (parse.success === \"200\") {\r\n            alert('Home Visitor Details Edited Successfully');\r\n            handleCloseEditmodal();\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(parse.message);\r\n        }\r\n    }\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeAllDays = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/DoctorHomeVisitors\");\r\n    };\r\n\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        setTimes(times);\r\n    }\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n    useEffect(() => {\r\n        fetchTimes();\r\n        fetchDoctorCategory();\r\n    }, []);\r\n    console.log(thursday)\r\n\r\n    return (\r\n        <>\r\n\r\n            <Dialog\r\n                open={show}\r\n                maxWidth={maxWidth}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Edit Details\"}\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseEditmodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Grid container>\r\n                            <Grid item xs={5} style={{ marginLeft: 10 }}>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal', textDecorationLine: 'underline', textUnderlineOffset: '1px',\r\n                                    position: 'relative', bottom: 14\r\n\r\n                                }}>\r\n                                    Details\r\n                                </Typography>\r\n\r\n                                <div style={{ marginTop: 13 }}>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" size=\"small\" label=\"First Name\"\r\n                                            value={firstName}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setfirstName(e.target.value)\r\n                                                }\r\n                                            }\r\n                                            } variant=\"outlined\" style={{ width: '160%' }} />\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" label=\"Last Name\"\r\n                                            value={lastName} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setlastName(e.target.value)\r\n                                                }\r\n\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '160%', marginTop: 12 }} />\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm} >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" type=\"text\" label=\"Education\"\r\n                                            value={education} onChange={(e) => {\r\n                                                const re = /^[A-Za-z]+$/;\r\n\r\n                                                // if value is not blank, then test the regex\r\n\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    seteducation(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '160%', marginTop: 10 }} />\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} >\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='number' label=\"Mobile No\"\r\n                                            value={mobileno}\r\n                                            onChange={(e) => {\r\n                                                const re = /^[0-9\\b]+$/;\r\n                                                if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                    setmobileno(e.target.value)\r\n                                                }\r\n                                            }} variant=\"outlined\" size=\"small\" style={{ width: '115%', marginLeft: 98, marginTop: 40 }}\r\n                                            onInput={(e) => {\r\n                                                e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n\r\n                                            }} />\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} id=\"outlined-basic\" type='email' value={email} onChange={(e) => setemail(e.target.value)} label=\"Email ID\" variant=\"outlined\" size=\"small\" style={{ width: '115%', marginLeft: 98, marginTop: 12, }} />\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '102%', marginLeft: '64px', marginTop: 16 }} >\r\n                                    <InputLabel htmlFor=\"outlined-category-native-simple\"></InputLabel>\r\n                                    <Select\r\n                                        className={classes.textFieldForm}\r\n                                        size='large'\r\n                                        native\r\n                                        value={category}\r\n                                        onChange={(e) => setcategory(e.target.value)}\r\n                                        label=\"Category\"\r\n                                        inputProps={{\r\n                                            name: 'category',\r\n                                            id: 'outlined-category-native-simple',\r\n                                        }}\r\n                                        style={{ width: '80%', height: 40, fontSize: 14, marginTop: '-7px', marginLeft: 34 }}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" >Category</option>\r\n                                        {doctorCategory.map((item) => {\r\n                                            return (\r\n                                                <option value={item.Category}>{item.Category}</option>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                        <TextField className={classes.textFieldForm} multiline rows={2} rowsMax={4} id=\"outlined-basic\" type='text' value={address} onChange={(e) => setaddress(e.target.value)} label=\"Add\" variant=\"outlined\" size=\"small\" style={{ width: '395%', marginTop: 10, marginLeft: 10 }} />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <Grid container style={{ marginTop: 10 }}>\r\n                                    <Grid item xs={2}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: 600,\r\n                                            marginLeft: 22\r\n                                        }}>\r\n                                            From\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='medium'\r\n                                                native\r\n                                                value={From_AvailabilityTime}\r\n                                                onChange={(e) => setFrom_AvailabilityTime(e.target.value)}\r\n                                                inputProps={{\r\n                                                    name: 'fromtime',\r\n                                                    id: 'outlined-from-time-native-simple',\r\n                                                }}\r\n                                                style={{ width: '90%', fontSize: 12, marginLeft: 117 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value='' >From</option>\r\n\r\n                                                {times.map((item) => {\r\n                                                    return (\r\n                                                        <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                            fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                            fontStyle: 'normal',\r\n                                            textAlign: 'center',\r\n                                            justifyContent: 'center',\r\n                                            fontWeight: 600,\r\n                                            position: 'relative',\r\n                                            left: 250\r\n\r\n                                        }}>\r\n                                            To\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                            <Select\r\n                                                className={classes.textFieldForm}\r\n                                                size='medium'\r\n                                                native\r\n                                                value={To_AvailabilityTime}\r\n                                                onChange={(e) => setTo_AvailabilityTime(e.target.value)}\r\n                                                inputProps={{\r\n                                                    name: 'totime',\r\n                                                    id: 'outlined-to-time-native-simple',\r\n                                                }}\r\n                                                style={{ width: '90%', fontSize: 12, marginLeft: 385 }}\r\n                                            >\r\n                                                <option aria-label=\"None\" value='' >To</option>\r\n                                                {times.map((item) => {\r\n                                                    return (\r\n                                                        <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                        <Grid container style={{ marginLeft: 30 }}>\r\n\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', position: 'relative', right: 327,\r\n                                                textDecorationLine: 'underline', textUnderlineOffset: '1px',\r\n                                            }}>\r\n                                                Availability\r\n                                            </Typography>\r\n                                            <Grid container style={{ marginTop: 10 }}>\r\n                                                <Grid item xs={8}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        position: 'relative',\r\n                                                        right: 323,\r\n                                                        top: 10\r\n\r\n                                                    }}>\r\n                                                        All Days\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch\r\n                                                                onClick={(e) => handleAll(e.target.value)}\r\n                                                                name=\"checkedA\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#78B088', float: 'right', }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#78B088', float: 'right', paddingRight: 20, position: 'relative', right: 205, top: 8 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -34,\r\n                                                        position: 'relative',\r\n                                                        right: 320,\r\n                                                        top: 16\r\n                                                    }}>\r\n                                                        Monday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -34,\r\n                                                        position: 'relative',\r\n                                                        right: 356,\r\n                                                        top: 60\r\n                                                    }}>\r\n                                                        Tuesday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -64,\r\n                                                        position: 'relative',\r\n                                                        right: 106,\r\n                                                        top: -30\r\n                                                    }}>\r\n                                                        Wednesday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n\r\n                                                            <Switch checked={monday}\r\n                                                                onChange={handlemonday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', right: 149, bottom: 6 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={tuesday}\r\n                                                                onChange={handletuesday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', right: 187, top: 38 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={wednesday}\r\n                                                                onChange={handlewednesday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', right: -95, bottom: 54 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -64,\r\n                                                        position: 'relative',\r\n                                                        right: 40,\r\n                                                        top: -40\r\n                                                    }}>\r\n                                                        Thursday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -64,\r\n                                                        position: 'relative',\r\n                                                        right: 86,\r\n                                                        top: 0\r\n                                                    }}>\r\n                                                        Friday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        marginRight: -64,\r\n                                                        position: 'relative',\r\n                                                        right: -186,\r\n                                                        bottom: 92\r\n                                                    }}>\r\n                                                        Saturday\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={thursday}\r\n                                                                onChange={handlethursday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', left: 170, bottom: 65 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={friday}\r\n                                                                onChange={handlefriday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', left: 133, bottom: 22 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch checked={saturday}\r\n                                                                onChange={handlesaturday}\r\n                                                                name=\"checkedB\"\r\n                                                                color='primary'\r\n                                                                style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                            />\r\n                                                        }\r\n                                                        style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', left: 380, bottom: 118 }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container>\r\n                                                <Grid item xs={12}>\r\n                                                    <center>\r\n                                                        <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                            fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                            fontStyle: 'normal',\r\n                                                            textAlign: 'center',\r\n                                                            justifyContent: 'center',\r\n                                                            fontWeight: 600,\r\n                                                            marginRight: -64,\r\n                                                            position: 'relative',\r\n                                                            right: -216,\r\n                                                            bottom: 103\r\n                                                        }}>\r\n                                                            Sunday\r\n                                                        </Typography>\r\n                                                    </center>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={12}>\r\n                                                    <center>\r\n                                                        <FormControlLabel\r\n                                                            control={\r\n                                                                <Switch checked={sunday}\r\n                                                                    onChange={handlesunday}\r\n                                                                    name=\"checkedB\"\r\n                                                                    color='primary'\r\n                                                                    style={{\r\n                                                                        color: '#2C7FB2',\r\n                                                                    }}\r\n                                                                />\r\n                                                            }\r\n                                                            style={{ color: '#2C7FB2', float: 'center', marginLeft: 40, position: 'relative', left: 362, bottom: 129 }}\r\n                                                        />\r\n                                                    </center>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: -40 }}>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={handleCloseEditmodal} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                </Grid>\r\n                                <Grid item sm={6} >\r\n                                    <Button className={classes.btnregister} onClick={EditHomeVisitor} style={{ float: 'left', marginLeft: 20 }}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, FormControl, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide, Switch, FormControlLabel, Select, InputLabel, TextField, Typography, Button, Avatar, Table, TableContainer, TableBody, TableCell, TableHead, InputBase, TableRow, TablePagination, Drawer, Divider, MenuItem, Menu, ListItem, ListItemIcon, ListItemText, List, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Times, Doctor_Category, Add_HomeVisitor } from '../../Apis/Staff/Home_Visitors/index';\r\nimport Delete_Home_Vistor_Modal from './components/Home_Visitors/Delete_Home_Visitor/index';\r\nimport Edit_Home_Visitor from './components/Home_Visitors/Edit_Details/index'\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst getHomeVisitorSearchApi = 'http://13.233.217.107:8080/api/Web_SearchHomeVisitor';\r\nconst getHomevisitors = 'http://13.233.217.107:8080/api/GetHomeVisitorDoctorsforClinic';\r\nconst getHomeVisitorDoctorById = 'http://13.233.217.107:8080/api/GetHomeVisitorDoctorById';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Staff_Home_Visitors() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openmodal, setOpenmodal] = React.useState(false);\r\n    const [openeditmodal, setOpenEditmodal] = React.useState(false);\r\n    const [opendeletemodal, setOpendeletemodal] = React.useState(false);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [homevisitorData, sethomevisitorData] = useState([]);\r\n    const [homevisitorDetails, sethomevisitorDetails] = useState({});\r\n    const [firstName, setfirstName] = useState('');\r\n    const [lastName, setlastName] = useState('');\r\n    const [mobile, setmobile] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [education, seteducation] = useState('');\r\n    const [category, setcategory] = useState('');\r\n    const [startTime, setstartTime] = useState('');\r\n    const [endTime, setendTime] = useState('');\r\n    const [monday, setmonday] = useState(false);\r\n    const [tuesday, settuesday] = useState(false);\r\n    const [wednesday, setwednesday] = useState(false);\r\n    const [thursday, setthursday] = useState(false);\r\n    const [friday, setfriday] = useState(false);\r\n    const [saturday, setsaturday] = useState(false);\r\n    const [sunday, setsunday] = useState(false);\r\n    const [times, setTimes] = useState([]);\r\n    const [doctorCategory, setdoctorCategory] = useState([]);\r\n    const [homevisitorsearch, sethomevisitorsearch] = useState([]);\r\n    const [showPassword, setshowPassword] = useState(false)\r\n\r\n    const handlemonday = () => {\r\n        setmonday(previousState => !previousState);\r\n    }\r\n    const handletuesday = () => {\r\n        settuesday(previousState => !previousState);\r\n    }\r\n    const handlewednesday = () => {\r\n        setwednesday(previousState => !previousState);\r\n    }\r\n    const handlethursday = () => {\r\n        setthursday(previousState => !previousState);\r\n    }\r\n    const handlefriday = () => {\r\n        setfriday(previousState => !previousState);\r\n    }\r\n    const handlesaturday = () => {\r\n        setsaturday(previousState => !previousState);\r\n    }\r\n    const handlesunday = () => {\r\n        setsunday(previousState => !previousState);\r\n    }\r\n    const handleAll = async () => {\r\n        setmonday(previousState => !previousState);\r\n        settuesday(previousState => !previousState);\r\n        setwednesday(previousState => !previousState);\r\n        setthursday(previousState => !previousState);\r\n        setfriday(previousState => !previousState);\r\n        setsaturday(previousState => !previousState);\r\n        setsunday(previousState => !previousState);\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setshowPassword(!showPassword);\r\n    }\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const fetchHomeVisitorData = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const homevisitorInfo = await axios.post(getHomevisitors, { ClinicId: clinicid });\r\n        sethomevisitorData(homevisitorInfo?.data?.HomeVisitors);\r\n    }\r\n\r\n    const fetchTimes = async () => {\r\n        const times = await Times();\r\n        setTimes(times);\r\n    }\r\n\r\n    const fetchDoctorCategory = async () => {\r\n        const category = await Doctor_Category();\r\n        setdoctorCategory(category);\r\n    }\r\n\r\n\r\n    const searchHomeVisitor = async (homevisitorsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const hvDoctorInfo = await axios.post(getHomeVisitorSearchApi, { ClinicId: clinicid, Name: homevisitorsearch });\r\n            sethomevisitorData(hvDoctorInfo?.data?.HomeVisitor);\r\n            console.log(homevisitorData)\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n \r\n    const Register_HomeVisitor = async () => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        const obj = {\r\n            ClinicId: clinicid,\r\n            FirstName: firstName,\r\n            LastName: lastName,\r\n            Password: password,\r\n            MobileNo: mobile,\r\n            Email: email,\r\n            Address: address,\r\n            Category: category,\r\n            Education: education,\r\n            Monday: monday,\r\n            Tuesday: tuesday,\r\n            Wednesday: wednesday,\r\n            Thursday: thursday,\r\n            Friday: friday,\r\n            Saturday: saturday,\r\n            Sunday: sunday,\r\n            From_AvailabilityTime: startTime,\r\n            To_AvailabilityTime: endTime,\r\n            Role: 'Home Visitor'\r\n        }\r\n        try {\r\n            const registration = await Add_HomeVisitor(obj);\r\n            let parse = JSON.parse(registration);\r\n            if (parse.success === \"200\") {\r\n                alert('Home Visitor Profile Details Added Successfully');\r\n                setOpenmodal(false);\r\n                window.location.reload()\r\n            } else {\r\n                alert(parse.message);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleEditModal = async () => {\r\n        if (homevisitorDetails.length > 0) {\r\n            setOpenEditmodal(true)\r\n        }\r\n        else {\r\n            alert(\"Please Select Home Visitor from List\");\r\n        }\r\n    }\r\n\r\n    const handleContinue = async  () => {\r\n\r\n        if (homevisitorDetails.length > 0) {\r\n            setOpendeletemodal(true) \r\n         }\r\n            \r\n\r\n           else { \r\n               alert('Please select Home visitors from list'); \r\n            }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchHomeVisitorData();\r\n        fetchTimes();\r\n        fetchDoctorCategory();\r\n    }, []);\r\n\r\n\r\n    const handleRowClick = async (userid) => {\r\n        var hvDoctorInfo = await axios.post(getHomeVisitorDoctorById, { UserId: userid });\r\n        sethomevisitorDetails(hvDoctorInfo?.data?.HomeVisitor)\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const handleHomeVisitRequest = () => {\r\n        navigate(\"/Staff_Home_Visit_Request\");\r\n    };\r\n\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChangeAllDays = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Home Visitors\r\n                        <Button className={classes.btnregister} onClick={(e) => setOpenmodal(true)} style={{ float: 'right', marginRight: 20, fontFamily: 'Poppins', fontSize: 12, width: 160 }}>Add New Home Visitor</Button>\r\n                        <Button className={classes.btnregister} onClick={handleHomeVisitRequest} style={{ float: 'right', marginRight: 20, fontFamily: 'Poppins', fontSize: 12, width: 160 }}>Home Visitor Requests</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center> <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            label=\"Search by Name\"\r\n                                            placeholder='Search by Home Visitor'\r\n                                            onChange={(e) => sethomevisitorsearch(e.target.value)}\r\n                                            value={homevisitorsearch}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase> </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button className={classes.btnview} onClick={() => searchHomeVisitor(homevisitorsearch)} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>Search</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <DataGrid\r\n                                style={{ height: 350, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2', cursor: 'pointer' }}\r\n                                rows={homevisitorData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={5}\r\n                                onRowClick={(newSelection) => {\r\n                                    handleRowClick(newSelection.row.UserId);\r\n                                }}\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 18, color: '#2C7FB2', fontFamily: 'Poppins', textDecorationLine: 'underline', textUnderlineOffset: '1px', textDecorationThickness: '1px',\r\n                                fontStyle: 'normal',\r\n\r\n                            }}>\r\n                                Profile\r\n                            </Typography>\r\n                            <center>\r\n                                <div style={{ paddingBottom: 5 }}>\r\n                                    {homevisitorDetails[0] ? homevisitorDetails[0].ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} src={homevisitorDetails[0].ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} /> : <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {homevisitorDetails[0] ? homevisitorDetails[0].FirstName : \"NA\"} {homevisitorDetails[0] ? homevisitorDetails[0].LastName : null}\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 14,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 400\r\n                                }}>\r\n                                    {homevisitorDetails[0] ? homevisitorDetails[0].Education : \"NA\"}\r\n                                  <span> ({homevisitorDetails[0] ? homevisitorDetails[0].Category : \"NA\"})</span>\r\n                                </Typography>\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: \"Poppins\" }}>\r\n                                            Mobile Number\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].MobileNo : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            From\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].From_AvailabilityTime : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            To\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].To_AvailabilityTime : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Email Id\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].Email : \"NA\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12}>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Address\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {homevisitorDetails[0] ? homevisitorDetails[0].Address : \"NA\"} {homevisitorDetails[0] ? homevisitorDetails[0].City : null} {homevisitorDetails[0] ? homevisitorDetails[0].State : null} {homevisitorDetails[0] ? homevisitorDetails[0].Pincode : null} {homevisitorDetails[0] ? homevisitorDetails[0].Country : null}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Availability\r\n                                        </Typography>\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Mon\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Tue\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Wed\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Thu\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Fri\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Sat\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Sun\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Monday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Tuesday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Wednesday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Thursday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Friday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Saturday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {homevisitorDetails[0] ? homevisitorDetails[0].Sunday == '1' ? 'Yes' : 'No' : \"NA\"}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 10 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={handleContinue} style={{ float: 'right', marginRight: 20 }}>Delete</Button>\r\n\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={() => handleEditModal()} style={{ float: 'left', marginLeft: 20 }}>Edit</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                {/* For add new visitor form */}\r\n\r\n                <Dialog\r\n                    open={openmodal}\r\n                    maxWidth={maxWidth}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#2C7FB2' }}>{\"Add New Home Visitor\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={() => setOpenmodal(false)} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Grid container style={{ overflow: 'hidden', height: 585 }}>\r\n\r\n                                <Grid container style={{ overflow: 'hidden' }}>\r\n                                    <Grid container  >\r\n                                        <Grid item sm={6} style={{ marginLeft: 10 }}>\r\n                                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                fontSize: 17, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                                fontStyle: 'normal', fontWeight: 600,\r\n                                                textDecorationLine: 'underline', textUnderlineOffset: '1px',\r\n\r\n                                            }}>\r\n                                                Details\r\n                                            </Typography>\r\n\r\n                                            <div style={{ marginTop: 13 }}>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={firstName}\r\n                                                        onChange={(e) => {\r\n                                                            const re = /^[A-Za-z]+$/;\r\n\r\n                                                            // if value is not blank, then test the regex\r\n\r\n                                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                                setfirstName(e.target.value)\r\n                                                            }\r\n                                                        }\r\n                                                        } id=\"outlined-basic\" size=\"small\" label=\"First Name\" variant=\"outlined\" style={{ width: '155%', position: 'relative', top: 3 }} />\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            <div>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={lastName} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n\r\n                                                        // if value is not blank, then test the regex\r\n\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            setlastName(e.target.value)\r\n                                                        }\r\n\r\n                                                    }} id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" size=\"small\" style={{ width: '155%', position: 'relative', top: 12 }} />\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            <div>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm} >\r\n                                                    <TextField className={classes.textFieldForm} value={education} onChange={(e) => {\r\n                                                        const re = /^[A-Za-z]+$/;\r\n\r\n                                                        // if value is not blank, then test the regex\r\n\r\n                                                        if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                            seteducation(e.target.value)\r\n                                                        }\r\n                                                    }} id=\"outlined-basic\" type=\"text\" label=\"Education\" variant=\"outlined\" size=\"small\" style={{ width: '155%', position: 'relative', top: 25 }} />\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                        </Grid>\r\n                                        <div>\r\n                                            <Grid item xs={6} >\r\n\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} value={mobile}\r\n                                                        onChange={(e) => {\r\n                                                            const re = /^[0-9\\b]+$/;\r\n                                                            if (e.target.value === '' || re.test(e.target.value)) {\r\n                                                                setmobile(e.target.value)\r\n                                                            }\r\n                                                        }} id=\"outlined-basic\" type='number' label=\"Mobile No\" variant=\"outlined\" size=\"small\" style={{ width: '248%', marginLeft: 45, position: 'relative', top: 38 }}\r\n                                                        onInput={(e) => {\r\n                                                            e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n\r\n                                                        }} />\r\n                                                </FormControl>\r\n\r\n\r\n                                                <div>\r\n                                                    <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                        <TextField className={classes.textFieldForm} onChange={(e) => setemail(e.target.value)} id=\"outlined-basic\" type='email' label=\"Email ID\" variant=\"outlined\" size=\"small\" style={{ width: '250%', marginTop: 51, marginLeft: 43 }} />\r\n                                                    </FormControl>\r\n                                                </div>\r\n\r\n\r\n                                                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%', marginLeft: '-25px' }} >\r\n\r\n                                                    <Select\r\n                                                        className={classes.textFieldForm}\r\n                                                        size='large'\r\n                                                        native\r\n                                                        value={category}\r\n                                                        onChange={(e) => setcategory(e.target.value)}\r\n                                                        label=\"Category\"\r\n                                                        inputProps={{\r\n                                                            name: 'category',\r\n                                                            id: 'outlined-category-native-simple',\r\n                                                        }}\r\n                                                        style={{ width: '188%', fontSize: 14, marginTop: '5px', marginLeft: 67 }}\r\n                                                    >\r\n                                                        <option aria-label=\"None\" value=\"\">Category</option>\r\n                                                        {doctorCategory.map((item) => {\r\n                                                            return (\r\n                                                                <option value={item.Category}>{item.Category}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </div>\r\n\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <div>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField className={classes.textFieldForm} onChange={(e) => setaddress(e.target.value)} multiline rows={2} rowsMax={4} id=\"outlined-basic\" type='text' label=\"Address\" variant=\"outlined\" size=\"small\" style={{ width: '405%', position: 'relative', top: 15, left: 10 }} />\r\n                                                </FormControl>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container style={{ marginTop: 0 }}>\r\n                                        <Grid item xs={6}>\r\n\r\n                                            <div>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    fontWeight: 600,\r\n                                                    position:'relative',\r\n                                                    top:35,\r\n                                                    left:5\r\n                                                }}>\r\n                                                    From\r\n                                                    </Typography>\r\n\r\n                                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                        <Select\r\n                                                            className={classes.textFieldForm}\r\n                                                            size='medium'\r\n                                                            native\r\n                                                            value={startTime}\r\n                                                            onChange={(e) => setstartTime(e.target.value)}\r\n                                                            inputProps={{\r\n                                                                name: 'fromtime',\r\n                                                                id: 'outlined-from-time-native-simple',\r\n                                                            }}\r\n                                                            style={{ width: '50%', fontSize: 12, marginLeft: 26, marginBottom: 14, position:'relative',\r\n                                                            left:23 }}\r\n                                                        >\r\n                                                            <option aria-label=\"None\" value='' >From</option>\r\n\r\n                                                            {times.map((item) => {\r\n                                                                return (\r\n                                                                    <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                )\r\n                                                            })}\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        position: 'relative',\r\n                                                        bottom:53,\r\n                                                        right:22\r\n                                                    }}>\r\n                                                        To\r\n                                                    </Typography>\r\n\r\n                                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl} style={{ width: '55%' }} >\r\n                                                        <Select\r\n                                                            className={classes.textFieldForm}\r\n                                                            size='medium'\r\n                                                            native\r\n                                                            value={endTime}\r\n                                                            onChange={(e) => setendTime(e.target.value)}\r\n                                                            inputProps={{\r\n                                                                name: 'totime',\r\n                                                                id: 'outlined-to-time-native-simple',\r\n                                                            }}\r\n                                                            style={{ width: '50%', fontSize: 12, position: 'relative', left: 220, bottom: 88 }}\r\n                                                        >\r\n                                                            <option aria-label=\"None\" value='' >To</option>\r\n\r\n                                                            {times.map((item) => {\r\n                                                                return (\r\n                                                                    <option value={item.ActualTime}>{item.DisplayTime}</option>\r\n                                                                )\r\n                                                            })}\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                \r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <div>\r\n                                                <FormControl variant=\"outlined\" className={classes.formControlForm}  >\r\n                                                    <TextField\r\n\r\n                                                        variant=\"outlined\"\r\n\r\n                                                        margin=\"normal\"\r\n\r\n                                                        fullWidth\r\n\r\n                                                        id=\"password\"\r\n\r\n                                                        required\r\n\r\n                                                        label=\"Password\"\r\n\r\n                                                        type={showPassword ? 'text' : 'password'}\r\n\r\n                                                        size='small'\r\n                                                        style={{ width: '105%', marginLeft: 49, marginTop: 26 }}\r\n\r\n                                                        onChange={(e) => setpassword(e.target.value)}\r\n\r\n                                                        InputProps={{\r\n\r\n                                                            endAdornment: (\r\n\r\n                                                                <InputAdornment position=\"end\">\r\n\r\n                                                                    <IconButton\r\n\r\n                                                                        aria-label=\"toggle password visibility\"\r\n\r\n                                                                        onClick={handleClickShowPassword}\r\n\r\n                                                                        onMouseDown={handleMouseDownPassword}\r\n\r\n                                                                    >\r\n\r\n                                                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n\r\n                                                                    </IconButton>\r\n\r\n                                                                </InputAdornment>\r\n\r\n                                                            ),\r\n\r\n                                                        }}\r\n\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container style={{ marginLeft: 350, position: 'relative', bottom: 70 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 17, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal', position: 'relative',\r\n                                                    right: 348, fontWeight: 600,\r\n                                                    textDecorationLine: 'underline', textUnderlineOffset: '1px',\r\n                                                }}>\r\n                                                    Availability\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container style={{ marginTop: 20, position: 'relative', bottom: 70 }}>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    marginRight: 80\r\n                                                }}>\r\n                                                    All Days\r\n                                                </Typography>\r\n\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            onClick={(e) => handleAll(e.target.value)}\r\n\r\n                                                            color='primary'\r\n                                                            style={{ color: '#78B088', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#78B088', float: 'right', paddingRight: 20, position: 'relative', bottom: 25, right: -84 }}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    marginRight: -185\r\n                                                }}>\r\n                                                    Wednesday\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    position: 'relative',\r\n                                                    left: 224\r\n                                                }}>\r\n                                                    Saturday\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    marginRight: 80,\r\n                                                    position: 'relative',\r\n                                                    bottom: 90\r\n                                                }}>\r\n                                                    Monday\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    position: 'relative',\r\n                                                    bottom: 90,\r\n                                                    left: 82\r\n                                                }}>\r\n                                                    Thursday\r\n                                                </Typography>\r\n\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <center>\r\n                                                    <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                        fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                        fontStyle: 'normal',\r\n                                                        textAlign: 'center',\r\n                                                        justifyContent: 'center',\r\n                                                        fontWeight: 600,\r\n                                                        position: 'relative',\r\n                                                        bottom: 90,\r\n                                                        left: 220\r\n                                                    }}>\r\n                                                        Sunday\r\n                                                    </Typography>\r\n                                                </center>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    marginRight: 80,\r\n                                                    position: 'relative',\r\n                                                    bottom: 70\r\n                                                }}>\r\n                                                    Tuesday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                                    fontSize: 14, color: '#707070', fontFamily: 'Poppins',\r\n                                                    fontStyle: 'normal',\r\n                                                    textAlign: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontWeight: 600,\r\n                                                    position: 'relative',\r\n                                                    bottom: 70,\r\n                                                    right: 5\r\n                                                }}>\r\n                                                    Friday\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch checked={monday}\r\n                                                            onChange={handlemonday}\r\n                                                            // name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 134, right: 68 }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch checked={tuesday}\r\n                                                            onChange={handletuesday}\r\n                                                            // name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 94, right: 372 }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={wednesday}\r\n                                                            onChange={handlewednesday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 176, right: 370 }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n\r\n\r\n                                    </Grid>\r\n\r\n                                    <Grid container>\r\n                                        <Grid item xs={4}>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch checked={thursday}\r\n\r\n                                                        onChange={handlethursday}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 172, left: 238 }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch checked={friday}\r\n\r\n                                                        onChange={handlefriday}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 132, right: 64 }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch checked={saturday}\r\n\r\n                                                        onChange={handlesaturday}\r\n                                                        name=\"checkedB\"\r\n                                                        color='primary'\r\n                                                        style={{ color: '#2C7FB2', float: 'right' }}\r\n                                                    />\r\n                                                }\r\n                                                style={{ color: '#2C7FB2', float: 'right', paddingRight: 20, position: 'relative', bottom: 215, right: 83 }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container>\r\n\r\n\r\n                                        <Grid item xs={12}>\r\n                                            <center>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={sunday}\r\n                                                            onChange={handlesunday}\r\n                                                            name=\"checkedB\"\r\n                                                            color='primary'\r\n                                                            style={{\r\n                                                                color: '#2C7FB2',\r\n                                                            }}\r\n                                                        />\r\n                                                    }\r\n                                                    style={{ color: '#2C7FB2', float: 'center', marginLeft: 10, position: 'relative', bottom: 215, left: 312 }}\r\n                                                />\r\n                                            </center>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid container style={{ marginTop: -155, paddingBottom: 0, marginBottom: 0 }}>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={()=> setOpenmodal(false)} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                        </Grid>\r\n                                        <Grid item sm={6} >\r\n                                            <Button className={classes.btnregister} onClick={Register_HomeVisitor} style={{ float: 'left', marginLeft: 20 }}>Register</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n\r\n\r\n                {/* For Edit Visitor Details */}\r\n                {openeditmodal ? <Edit_Home_Visitor show={openeditmodal} data={homevisitorDetails} handleCloseEditmodal={() => setOpenEditmodal(false)} /> : null}\r\n\r\n\r\n                {/* for Delete User */}\r\n                {opendeletemodal ? <Delete_Home_Vistor_Modal show={opendeletemodal} data={homevisitorDetails} handleclose={() => setOpendeletemodal(false)} /> : null}\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    inputFields: {\r\n        [`& fieldset`]: {\r\n            borderRadius: 25,\r\n        },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    groupreports: {\r\n        height: 140,\r\n        width: 250,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#00318B',\r\n        paddingTop: 50,\r\n        borderRadius: 20,\r\n        float: 'right'\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginBottom: 10,\r\n        marginTop: 20\r\n    },\r\n    textField: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        padding: 8,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    facilitiesInput: {\r\n        fontSize: 16,\r\n        color: '#00318B !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        padding: 2\r\n    },\r\n    description: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 145,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n    formControlForm: {\r\n        paddingBottom: theme.spacing(1.2),\r\n\r\n    },\r\n    textFieldForm: {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 8,\r\n    },\r\n\r\n}));\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, TextField, Slide, Select, FormControl, Button, IconButton, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//api\r\nimport { Delete_Staff_Details_by_id } from '../../../../../Apis/Staff/Clinic_Staff/index';\r\n\r\nimport { Cancel_Appointment_Details } from '../../../../../Apis/Staff/Dashboard/Cancel_Appointment/index';\r\n\r\nconst Cancel_Appointment = ({ show, data, handleclose }) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const Delete_Api = async (id) => {\r\n        \r\n        const request = await Cancel_Appointment_Details(id);\r\n        let response = JSON.parse(request);\r\n        if (response.success == '200') {\r\n            alert(response.message);\r\n            navigator('/DoctorDashboard')\r\n        }\r\n        else {\r\n            alert(request);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, color: '#00318B' }}>{\"Are you sure ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                        Do you want to cancel this appointment?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                    <Button className={classes.btnregister} onClick={handleclose} style={{ width: 100 }} >\r\n                        No\r\n                    </Button>\r\n                    <Button className={classes.btnregister} onClick={() => Delete_Api(data.id)} style={{ width: 100 }}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    griditem: {\r\n        color: '#2C7FB2',\r\n    },\r\n    paperServices: {\r\n        padding: theme.spacing(1),\r\n        color: '#00318B',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    gridServices: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n        textAlign: 'center',\r\n\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 800,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        color: 'gray'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        float: 'right'\r\n    },\r\n    headingAddMedicine: {\r\n        color: '#00318B !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    inputFields: {\r\n        // [`& fieldset`]: {\r\n        //     borderRadius: 25,\r\n        // },\r\n        width: 300,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n        marginBottom: 20\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n}));\r\n\r\nexport default Cancel_Appointment;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { TextField, Typography, Button, Avatar, Grid, Paper, Link } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { UpdateAppointmentDetails } from '../../Apis/PatientInQueue/Generate_Prescription/Medicines_Table/index';\r\nimport Cancel_Appointment from './components/SendIn_Patient_details/Cancel_Appointment/index';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    formControl: {\r\n        paddingBottom: theme.spacing(2.5),\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    btnTreat: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 30,\r\n        fontSize: '12px'\r\n\r\n    },\r\n    textField: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 11,\r\n        textAlign: 'center',\r\n        width: '80%',\r\n        height: 30,\r\n    },\r\n    reason: {\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        height: 50,\r\n        color: 'gray',\r\n        border: '1px solid #F0F0F0',\r\n    },\r\n    btnCancle: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n        marginTop: 30,\r\n        fontSize: '12px'\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function Staff_Patient_Details_SendIn() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [details, setdetails] = useState([location.state.details]);\r\n    const obj = JSON.stringify(details);\r\n\r\n\r\n    useEffect(() => {\r\n        setdetails(location.state.details);\r\n    }, []);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleTreat = () => {\r\n        navigate('/DoctorTreatPatient', {\r\n            state: { detail: location.state.details }\r\n        })\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: '\"Poppins\", san-serif;',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Patient Details\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginRight: 20 }} >\r\n                            <center>\r\n                                <div style={{ paddingBottom: 20 }}>\r\n                                    {details.ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} src={details.ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 100, width: 100 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: '\"Poppins\", san-serif;',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {details.FirstName} {details.LastName}\r\n                                </Typography>\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 20 }}>\r\n                                    <Grid item xs={6} style={{ borderRight: '1px solid #F0F0F0' }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Status\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070' }}>\r\n                                            {details.AppointmentStatus}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', fontWeight: 600 }}>\r\n                                            Channel\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070' }}>\r\n                                            {details.AppointmentChannel}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container xs={12} style={{ paddingTop: 30 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Location :\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Contact :\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15, fontWeight: 600 }}>\r\n                                            Email Id :\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.Address} {details.City}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.MobileNo}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 14, color: '#707070', marginBottom: 15 }}>\r\n                                            {details.Email != null ? details.Email : 'Not Provided'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={8}>\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginRight: 50, marginLeft: 40 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 17, fontWeight: '600', color: '#2C7FB2', marginBottom: 15, textDecoration: 'underline', textUnderlineOffset: '1px' }}>\r\n                                Details\r\n                                {/* <Button onClick={() => navigate('/DoctorPatientMedicalHistory', {\r\n                                    state: { Details: details }\r\n                                })}\r\n                                    style={{ float: 'right', color: 'white', fontSize: '11px', fontWeight: 600, fontFamily: 'Poppins', backgroundColor: '#2C7FB2' }}  >\r\n                                    Previous Medical History\r\n                                </Button> */}\r\n                            </Typography>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 600 }}>\r\n                                        Appointment Date :\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.AppointmentDate}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 600 }}>\r\n                                        Appointment Time:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 400 }}>\r\n                                        {details.AppointmentTime}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: '10px' }}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 600 }}>\r\n                                        Appointment Reason :\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: 600 }}>\r\n                                        Note For Doctor:\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container style={{ marginTop: '10px' }}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.AppointmentReason ? details.AppointmentReason : 'NA'}\r\n                                    </Typography>\r\n                                    {/* <TextField className={classes.textField} value={appointmentreason} onChange={(e)=> setappointmentreason(e.target.value)} id=\"outlined-basic\" size=\"small\" variant=\"outlined\" label='Reason' /> */}\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.ShortNote ? details.ShortNote : 'NA'}\r\n                                    </Typography>\r\n                                    {/* <TextField className={classes.textField} value={noteforDoctor} onChange={(e) => setnoteforDoctor(e.target.value)} id=\"outlined-basic\" size=\"small\" variant=\"outlined\" label='Note For Doctor' /> */}\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* <p className={classes.reason}>Regular Checkup</p> */}\r\n\r\n                            <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 16, marginBottom: 15, color: '#2C7FB2', marginTop: 30, fontWeight: 600, textDecoration: 'underline', textUnderlineOffset: '1px' }}>\r\n                                Vitals\r\n                            </Typography>\r\n\r\n                            <Grid container xs={12} style={{ color: '#707070', marginTop: 20 }}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Blood Pressure:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_BP ? details.Patient_BP : 'NA'} mmHg\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Pulse Rate:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_Plus ? details.Patient_Plus : 'NA'} bpm\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    SpO2:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_SPO2 ? details.Patient_SPO2 : 'NA'} %\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ marginTop: 30, color: '#707070' }}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Temperature:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_Temp ? details.Patient_Temp : 'NA'} c\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Weight:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_Weight ? details.Patient_Weight : 'NA'} kg\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    Height:\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 15, color: '#707070', fontWeight: '400' }}>\r\n                                        {details.Patient_Height ? details.Patient_Height : 'NA'} cm\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={12} style={{ color: '#707070',height:65 }}>\r\n                                <Grid item xs={12} >\r\n                                    {/* <center>\r\n                                        <Button variant=\"contained\" onClick={handleGoBack} className={classes.btnCancle} style={{ marginRight: 40 }}  >\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" onClick={() => handleTreat()} className={classes.btnTreat}  >\r\n                                            Treat\r\n                                        </Button>\r\n                                    </center> */}\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n                    {deleteModal ? <Cancel_Appointment show={deleteModal} data={details} handleclose={()=>setDeleteModal(false)} /> : null}\r\n                </Grid>\r\n\r\n            </Grid > {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ip from '../../../../../ipaddress/ip';\r\n\r\nexport const GetHomeVisitorDoctors = async () => {\r\n    var data = await localStorage.getItem(\"userdata\");\r\n    let parsed = JSON.parse(data);\r\n    let clinicid = parsed.ClinicId;\r\n    try {\r\n        const res = await axios.post(ip + 'Web_GetHomeVisitorDoctorsforClinic', { ClinicId: clinicid });\r\n        return res?.data?.HomeVisitors;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Slide, Typography, FormControl, Select, TextField, Button, InputBase, Grid, Paper, Dialog, DialogContent, DialogContentText, DialogTitle, Avatar } from \"@material-ui/core\";\r\nimport DoctorNavbar from './Staff_Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { ApprovedHomeVisitorRequest } from '../../Apis/Staff/HomeVisitorRequest/ApprovedRequest/index';\r\nimport { GetHomeVisitorDoctors } from '../../Apis/Staff/HomeVisitorRequest/AssignHomeVisitor/GetHomeVisitors/index';\r\n\r\n\r\nconst getHomeVisitorSearchApi = 'http://13.233.217.107:8080/api/Web_SearchHomeVisitor';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 200,\r\n        valueGetter: (params) =>\r\n            `${params.getValue(params.id, 'FirstName') || ''} ${params.getValue(params.id, 'LastName') || ''\r\n            }`,\r\n    },\r\n    {\r\n        field: 'MobileNo',\r\n        headerName: 'Contact No',\r\n        width: 160,\r\n        editable: true,\r\n    },\r\n];\r\n\r\n\r\nfunction createData(name, mobile) {\r\n    return { name, mobile };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: '#78B088',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    grid: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginTop: 70,\r\n        marginLeft: 25,\r\n        marginRight: 1\r\n    },\r\n    gridShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n\r\n    },\r\n    searchIcon: {\r\n        paddingTop: 10,\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: \"gray\",\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 200,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '25ch',\r\n            height: '30px'\r\n        },\r\n        border: '1px solid lightgray',\r\n        borderRadius: 20,\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        color: '#707070'\r\n    },\r\n    btnview: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: 'Poppins',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 130,\r\n    },\r\n    btnregister: {\r\n        backgroundColor: '#2C7FB2 !important',\r\n        color: '#fff !important',\r\n        fontFamily: '\"Poppins\", san-serif;',\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        borderRadius: 28,\r\n        width: 120,\r\n        fontSize: '11px'\r\n    },\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Staff_Assign_Home_Visitor() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n    const [approvedRequestInfo, setapprovedRequestInfo] = useState([location.state.details]);\r\n    const [hvDoctorData, sethvDoctorData] = useState([]);\r\n    const [hvDoctorDetails, sethvDoctorDetails] = useState([]);\r\n    const [assignHomeVisitor, setassignHomeVisitor] = useState([]);\r\n    const [homevisitorsearch, sethomevisitorsearch] = useState('');\r\n\r\n    const fetchHV_Doctors_Data = async () => {\r\n        const gethvdoctorsInfo = await GetHomeVisitorDoctors();\r\n        sethvDoctorData(gethvdoctorsInfo);\r\n    }\r\n\r\n    const handleRowClick = async (id) => {\r\n        sethvDoctorDetails(id);\r\n    }\r\n    const handleAssign=()=>{\r\n        navigate('/Staff_Home_Visit_Request');\r\n    }\r\n\r\n    const handleAssignHomeVisitor = async (obj, hvid) => {\r\n        if (hvDoctorDetails == '') {\r\n            alert(\"Please select home visitor from list\");\r\n            return;\r\n        }\r\n        const res = await ApprovedHomeVisitorRequest(obj, hvid)\r\n\r\n        if (res) {\r\n            setassignHomeVisitor(obj, hvid)\r\n            alert('Home Visitor Request Approved');\r\n            navigate(\"/Staff_Home_Visit_Request\");\r\n        }\r\n    };\r\n\r\n    const searchHomeVisitor = async (homevisitorsearch) => {\r\n        var data = await localStorage.getItem(\"userdata\");\r\n        let parsed = JSON.parse(data);\r\n        let clinicid = parsed.ClinicId;\r\n        try {\r\n            const hvDoctorInfo = await axios.post(getHomeVisitorSearchApi, { ClinicId: clinicid, Name: homevisitorsearch });\r\n            sethvDoctorData(hvDoctorInfo?.data?.HomeVisitor);\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapprovedRequestInfo(location.state.details);\r\n        fetchHV_Doctors_Data();\r\n    }, []);\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/Staff_Home\");\r\n    };\r\n\r\n    const [opendatemodal, setOpenDatemodal] = React.useState(false);\r\n\r\n    const handleClickOpenDatemodal = () => {\r\n        setOpenDatemodal(true);\r\n    };\r\n\r\n    const handleCloseDatemodal = () => {\r\n        setOpenDatemodal(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: '#ffffff' }}>\r\n            <DoctorNavbar />\r\n\r\n            {/* main grid */}\r\n            <Grid container spacing={2}\r\n                className={clsx(classes.grid, {\r\n                    [classes.gridShift]: open,\r\n                })}\r\n                direction=\"row\"\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Typography variant=\"h5\" noWrap={true}\r\n                        style={{\r\n                            fontFamily: 'Poppins',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 500,\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis',\r\n                            color: '#2C7FB2',\r\n\r\n                        }}>\r\n                        <Button style={{ marginLeft: '-20px', backgroundColor: 'white', color: '#2C7FB2', borderRadius: 105, fontSize: '12px' }}> <ArrowBackIcon onClick={handleGoBack} />  </Button>\r\n                        Assign Home Visitor\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <center>\r\n                                        <SearchIcon className={classes.searchIcon} />\r\n                                        <InputBase\r\n                                            placeholder='Search by Home Visitor'\r\n                                            onChange={(e) => sethomevisitorsearch(e.target.value)}\r\n                                            value={homevisitorsearch}\r\n                                            classes={{\r\n                                                root: classes.inputRoot,\r\n                                                input: classes.inputInput,\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                            style={{ borderRadius: 15 }}\r\n                                        > </InputBase>\r\n                                    </center>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{ alignSelf: 'center' }}>\r\n                                    <Button onClick={() => searchHomeVisitor(homevisitorsearch)} className={classes.btnview} size=\"small\" style={{ float: 'right', fontSize: 11, textAlign: 'center' }}>Search</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <DataGrid\r\n                                style={{ height: 350, marginTop: 20, fontSize: 13, fontFamily: 'Poppins', fontWeight: 600, color: '#2C7FB2' }}\r\n                                rows={hvDoctorData}\r\n                                rowHeight={30}\r\n                                columns={columns}\r\n                                columnWidth={10}\r\n                                pageSize={5}\r\n                                onRowClick={(data) => {\r\n                                    handleRowClick(data.row);\r\n                                }}\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8} >\r\n                        <Paper className={classes.paper} elevation={6} style={{ marginLeft: 25, marginRight: 20 }}>\r\n                            <Typography variant=\"h6\" noWrap={true} style={{\r\n                                fontSize: 17, color: '#2C7FB2', fontFamily: 'Poppins',\r\n                                fontStyle: 'normal',\r\n                                textDecoration: 'underline',\r\n                                textUnderlineOffset: '1px',\r\n                                fontWeight: 600\r\n                            }}>\r\n                                Profile\r\n                            </Typography>\r\n                            <center>\r\n                                <div style={{ paddingBottom: 5 }}>\r\n                                    {hvDoctorDetails.ProfileImage ?\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} src={hvDoctorDetails.ProfileImage} /> :\r\n                                        <Avatar style={{ borderRadius: 50, height: 80, width: 80 }} />}\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 16,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 600\r\n                                }}>\r\n                                    {hvDoctorDetails.FirstName ? hvDoctorDetails.FirstName : 'NA'} {hvDoctorDetails.LastName ? hvDoctorDetails.LastName : ''}\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" noWrap={true} style={{\r\n                                    fontSize: 14,\r\n                                    fontFamily: 'Poppins',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#707070',\r\n                                    fontWeight: 400\r\n                                }}>\r\n                                    {hvDoctorDetails.Education} ( {hvDoctorDetails.Category ? hvDoctorDetails.Category : 'NA'} )\r\n                                </Typography>\r\n                                <Grid container xs={12} style={{ paddingTop: 15 }}>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: \"Poppins\" }}>\r\n                                            Mobile Number\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {hvDoctorDetails.MobileNo ? hvDoctorDetails.MobileNo : 'NA'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            From\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {hvDoctorDetails.From_AvailabilityTime ? hvDoctorDetails.From_AvailabilityTime : 'NA'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            To\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                            {hvDoctorDetails.To_AvailabilityTime ? hvDoctorDetails.To_AvailabilityTime : 'NA'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Email Id\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {hvDoctorDetails.Email ? hvDoctorDetails.Email : 'NA'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container xs={12}>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Address\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins', marginLeft: 10, marginRight: 10 }}>\r\n                                            {hvDoctorDetails.Address ? hvDoctorDetails.Address : 'NA'} <br /> {hvDoctorDetails.City}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{ border: '1px solid #F0F0F0', borderLeft: '0px', borderTop: '0px', paddingBottom: 20 }}>\r\n                                        <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 10, fontSize: 14, color: '#707070', fontWeight: 600, fontFamily: 'Poppins' }}>\r\n                                            Availability\r\n                                        </Typography>\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Mon\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Tue\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Wed\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Thu\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Fri\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Sat\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                Sun\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Monday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Tuesday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Wednesday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Thursday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Friday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Saturday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={1} style={{ marginLeft: 20 }}>\r\n                                                <Typography variant=\"h6\" noWrap={true} style={{ paddingTop: 5, fontSize: 14, color: '#707070', fontFamily: 'Poppins' }}>\r\n                                                    {hvDoctorDetails.Sunday == true ? 'Yes' : 'No'}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid container xs={12} style={{ marginTop: 10 }}>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={handleAssign} style={{ float: 'right', marginRight: 20 }}>Cancel</Button>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} >\r\n                                        <Button className={classes.btnregister} onClick={() => handleAssignHomeVisitor(approvedRequestInfo, hvDoctorDetails.UserId)} style={{ float: 'left', marginLeft: 20 }}>Assign</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </center>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                {/* for Change Date Time */}\r\n\r\n                <Dialog\r\n                    open={opendatemodal}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleCloseDatemodal}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{ fontFamily: 'Poppins', fontWeight: 600, fontSize: 20, color: '#00318B' }}>{\"Edit Date/Time\"}\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseDatemodal} aria-label=\"close\" style={{ float: 'right', color: '#2C7FB2', backgroundColor: '#F0F0F0' }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontFamily: 'Poppins', fontWeight: 400, color: '#707070' }}>\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#2C7FB2', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50 }}>\r\n                                        Date\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField className={classes.inputFields} id=\"outlined-basic\" type='date' variant=\"outlined\" size=\"small\" />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\" noWrap={true} style={{ fontSize: 13, color: '#2C7FB2', fontWeight: 600, fontFamily: 'Poppins', marginLeft: 50, marginTop: 15 }}>\r\n                                        Time\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl variant=\"outlined\" size=\"small\" className={classes.formControlForm} style={{ width: '100%', marginTop: 20 }} >\r\n                                        <Select\r\n                                            className={classes.textFieldForm}\r\n                                            size='large'\r\n                                            native\r\n\r\n                                            inputProps={{\r\n                                                name: 'start time',\r\n                                                id: 'outlined-start-time-native-simple',\r\n                                            }}\r\n                                            style={{ width: '90%', fontSize: 12 }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" />\r\n                                            <option value={1}>08:00</option>\r\n                                            <option value={2}>09:00</option>\r\n                                            <option value={3}>10:00</option>\r\n                                            <option value={4}>11:00</option>\r\n                                            <option value={5}>12:00</option>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <Grid container style={{ paddingBottom: 20 }}>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnregister} onClick={handleCloseDatemodal} style={{ float: 'right', marginRight: 20 }}>\r\n                                Cancle\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Button className={classes.btnregister} onClick={handleCloseDatemodal} autoFocus style={{ float: 'left', marginLeft: 20 }}>\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Dialog>\r\n\r\n\r\n            </Grid> {/* main grid */}\r\n\r\n        </div >\r\n    );\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst init = {\r\n  medicine: [],\r\n  reports: []\r\n}\r\n\r\nexport const reducer = (state = init.medicine, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_MEDICINE':\r\n      return [...state, action.payload]\r\n    case 'DELETE_MEDICINE':\r\n      return state.filter((item) => item.id !== action.payload.id)\r\n    case \"RESET_MEDICINE_ITEM\":\r\n      return init.medicine\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const addPatient_Reports = (state = init.reports, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_REPORTS':\r\n      return [...state, action.payload]\r\n    case 'DELETE_REPORTS':\r\n      return state.filter((item) => item.id !== action.payload.id)\r\n    case \"RESET_REPORTS_ITEM\":\r\n      return init.reports\r\n    default:\r\n      return state\r\n  }\r\n}\r\n// export const remove_listReducer = (state = init.medicine, action) => {\r\n//     return (action.type === 'remove_medicine') ? state.filter((item) => item.id !== action.payload.id) : state;\r\n// };\r\n\r\nconst appReducer = combineReducers({ reducer, addPatient_Reports })\r\n\r\nexport default appReducer;","import { createStore } from 'redux';\r\nimport appReducer from '../reducers/index'; \r\n\r\nconst store=createStore(appReducer);\r\n\r\nexport default store;\r\n","import React, { useEffect, useState, Fragment } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './App.css';\nimport BookAppointment from './components/Staff_BookAppointment';\nimport Footer from './components/Footer';\nimport HomeScreen from './components/HomeScreen';\nimport Login from './components/Login';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport PatientRegistration from './components/Staff_PatientRegistration';\nimport TodaysAppointment from './components/Staff_TodaysAppointment';\nimport Dashboard from './components/Staff_Dashboard';\nimport ClinicPatients from './components/Staff_ClinicPatients';\nimport ForgotPassword from './components/ForgotPassword';\nimport DoctorNavbar from './components/Doctor_Navbar';\nimport DoctorDashboard from './components/Doctor_Dashboard';\nimport DoctorHome from './components/Doctor_Home';\nimport DoctorAddMedicine from './components/Doctor_AddMedicine';\nimport DoctorReports from './components/Doctor_Reports';\nimport DoctorAddFacilities from './components/Doctor_AddFacilities';\nimport DoctorUploadReports from './components/Doctor_UploadReports';\nimport DoctorAddStaff from './components/Doctor_AddStaff';\nimport DoctorBookAppointment from './components/Doctor_BookAppointment';\nimport DoctorAddServices from './components/Doctor_AddServices';\nimport DoctorClinicServices from './components/Doctor_ClinicServices';\nimport DoctorPatientRegistration from './components/Doctor_PatientRegistration';\nimport DoctorTodaysAppointment from './components/Doctor_TodaysAppointment';\nimport DoctorPatientDetails_SendIn from './components/Doctor_PatientDetails_SendIn';\nimport DoctorTreatPatient from './components/Doctor_TreatPatient';\nimport DoctorGeneratePrescription from './components/Doctor_GeneratePrescription';\nimport DoctorClinicPatients from './components/Doctor_ClinicPatients';\nimport ClinicServices from './components/Staff_ClinicServices';\nimport PatientDetails_SendIn from './components/Staff_PatientDetails_SendIn';\nimport DoctorProfile from './components/Doctor_Profile';\nimport DoctorPatientMedicalHistory from './components/Doctor_PatientMedicalHistory';\nimport DoctorEditProfile from './components/Doctor_EditProfile';\nimport DoctorHomeVisitors from './components/Doctor_HomeVisitors';\nimport DoctorHomeVisitRequest from './components/Doctor_HomeVisitRequest';\nimport DoctorAddHomeVisitors from './components/Doctor_AddHomeVisitors';\nimport DoctorClinicStaff from './components/Doctor_ClinicStaff';\nimport DoctorAssignHomeVisitor from './components/Doctor_AssignHomeVisitor';\nimport Doctor_TV_TodaysAppointments from './components/Doctor_TV_TodaysAppointments';\nimport DoctorEditClinicDetails from './components/Doctor_EditClinicDetails';\nimport DoctorHomeVisitHistory from './components/Doctor_HomeVisitorHistory';\nimport DoctorPaymentDetails from './components/Doctor_PaymentDetails';\nimport PaymentReports from './components/Doctor_PaymentReports';\nimport Todays_appointment_Tabs from './components/Todays_appointment_tabs';\nimport SignUp from './components/SignUp';\n\nimport AdminAddClinic from './components/Admin_AddClinic';\nimport AdminHome from './components/Admin_Home';\nimport AdminDashboard from './components/Admin_Dashboard';\nimport AdminClinicDetails from './components/Admin_ClinicDetails';\nimport AdminDoctorDetails from './components/Admin_DoctorDetails';\nimport AdminClinicDoctors from './components/Admin_Doctor_Clinics';\n\n\n//staff\nimport Staff_Home from './components/Staff_Screens/Staff_Home';\nimport Staff_Dashboard from './components/Staff_Screens/Staff_Dashboard';\nimport Staff_ClinicPatients from './components/Staff_Screens/Staff_ClinicPatients';\nimport Staff_Book_Appointment from './components/Staff_Screens/Staff_Book_Appointment';\nimport Staff_Todays_Appointment from './components/Staff_Screens/Staff_Todays_Appointment';\nimport Staff_TV_TodaysAppointments from './components/Staff_Screens/Staff_TV_TodaysAppointments';\nimport Staff_Profile from './components/Staff_Screens/Staff_Profile';\nimport Staff_EditProfile from './components/Staff_Screens/Staff_EditProfile';\nimport Staff_Reports from './components/Staff_Screens/Staff_Reports';\nimport Staff_Upload_Reports from './components/Staff_Screens/Staff_UploadReports';\nimport Staff_Home_Visit_Request from './components/Staff_Screens/Staff_Home_Visit_Request';\nimport Staff_Home_Visitors from './components/Staff_Screens/Staff_Home_Visitors';\nimport Staff_Patient_Details_SendIn from './components/Staff_Screens/Staff_PatientDetails_SendIn';\nimport Staff_Assign_Home_Visitor from './components/Staff_Screens/Staff_Assign_Home_Visitor';\n\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store/index';\n\nconst App = () => {\n  const navigate = useNavigate();\n\n  const CheckUserDetails = async () => {\n    const itemStr = await localStorage.getItem('rememberme');\n    var UserStr = await localStorage.getItem(\"userdata\");\n    if (UserStr) {\n      const item = JSON.parse(itemStr)\n      const now = new Date()\n      // compare the expiry time of the item with the current time\n      if (itemStr) {\n        if (now.getTime() > item.expiry) {\n          // If the item is expired, delete the item from storage\n          // and return null\n          localStorage.removeItem('rememberme')\n          navigate('/')\n        }\n        navigate('/DoctorDashboard')\n      }\n    }\n    else {\n      navigate('/')\n    }\n  }\n  // useEffect(() => {\n  //   CheckUserDetails();\n  // }, [])\n  return (\n    <div>\n      <div>\n        <Fragment>\n          <Routes>\n            <Route exact path='/' element={<Login />} />\n            <Route exact path=\"/forgotpassword\" element={<ForgotPassword />} />\n\n            <Route exact path=\"/dashboard\" element={<Dashboard />}></Route>\n            <Route exact path=\"/DoctorNavbar\" element={<DoctorNavbar />}></Route>\n            <Route exact path=\"/DoctorDashboard\" element={<DoctorDashboard />}></Route>\n            <Route exact path=\"/DoctorHome\" element={<DoctorHome />}></Route>\n            <Route exact path=\"/home\" element={<HomeScreen />}></Route>\n            <Route exact path=\"/todaysappointment\" element={<TodaysAppointment />}> </Route>\n            <Route exact path=\"/bookappointment\" element={<BookAppointment />}></Route>\n            <Route exact path=\"/patientregistration\" element={<PatientRegistration />}></Route>\n            <Route exact path=\"/clinicpatients\" element={<ClinicPatients />}></Route>\n            <Route exact path=\"/clinicservices\" element={<ClinicServices />}></Route>\n            <Route exact path=\"/patientDetails_sendIn\" element={<PatientDetails_SendIn />}></Route>\n            <Route exact path=\"/SignUp\" element={<SignUp />}></Route>\n\n            <Route exact path=\"/DoctorAddMedicine\" element={<DoctorAddMedicine />}> </Route>\n            <Route exact path=\"/DoctorReports\" element={<DoctorReports />}></Route>\n            <Route exact path=\"/DoctorAddFacilities\" element={<DoctorAddFacilities />}></Route>\n            <Route exact path=\"/DoctorUploadReports\" element={<DoctorUploadReports />}></Route>\n            <Route exact path=\"/DoctorAddStaff\" element={<DoctorAddStaff />}> </Route>\n            <Route exact path=\"/DoctorBookAppointment\" element={<DoctorBookAppointment />}> </Route>\n            <Route exact path=\"/DoctorAddServices\" element={<DoctorAddServices />}></Route>\n            <Route exact path=\"/DoctorClinicServices\" element={<DoctorClinicServices />}></Route>\n            <Route exact path=\"/DoctorPatientRegistration\" element={<DoctorPatientRegistration />}></Route>\n            <Route exact path=\"/DoctorTodaysAppointment\" element={<DoctorTodaysAppointment />}></Route>\n            <Route exact path=\"/DoctorPatientDetails_SendIn\" element={<DoctorPatientDetails_SendIn />}></Route>\n            <Route exact path=\"/DoctorTreatPatient\" element={<DoctorTreatPatient />}> </Route>\n            <Route exact path=\"/DoctorGeneratePrescription\" element={<DoctorGeneratePrescription />}></Route>\n            <Route exact path=\"/DoctorClinicPatients\" element={<DoctorClinicPatients />}> </Route>\n            <Route exact path=\"/DoctorProfile\" element={<DoctorProfile />}> </Route>\n            <Route exact path=\"/DoctorEditProfile\" element={<DoctorEditProfile />}> </Route>\n            <Route exact path=\"/DoctorHomeVisitors\" element={<DoctorHomeVisitors />}> </Route>\n            <Route exact path=\"/DoctorHomeVisitRequest\" element={< DoctorHomeVisitRequest />}></Route>\n            <Route exact path=\"/DoctorAddHomeVisitors\" element={<DoctorAddHomeVisitors />}></Route>\n            <Route exact path=\"/DoctorPatientMedicalHistory\" element={<DoctorPatientMedicalHistory />}></Route>\n            <Route exact path=\"/DoctorClinicStaff\" element={<DoctorClinicStaff />}></Route>\n            <Route exact path=\"/DoctorAssignHomeVisitor\" element={<DoctorAssignHomeVisitor />}></Route>\n            <Route exact path=\"/Doctor_TV_TodaysAppointments\" element={<Doctor_TV_TodaysAppointments />}></Route>\n            <Route exact path=\"/DoctorEditClinicDetails\" element={<DoctorEditClinicDetails />}></Route>\n            <Route exact path=\"/DoctorPaymentDetails\" element={<DoctorPaymentDetails />}></Route>\n            <Route exact path='/DoctorPaymentReports' element={<PaymentReports />}></Route>\n            <Route exact path='/DoctorHomeVisitHistory' element={<DoctorHomeVisitHistory />}></Route>\n            <Route exact path=\"/Todays_appointment_Tabs\" element={<Todays_appointment_Tabs />}></Route>\n\n\n\n            <Route exact path=\"/AdminHome\" element={<AdminHome />}></Route>\n            <Route exact path=\"/AdminDashboard\" element={<AdminDashboard />}></Route>\n            <Route exact path=\"/AdminAddClinic\" element={<AdminAddClinic />}></Route>\n            <Route exact path=\"/AdminClinicDetails\" element={<AdminClinicDetails />}></Route>\n            <Route exact path=\"/AdminDoctorDetails\" element={<AdminDoctorDetails />}></Route>\n            <Route exact path=\"/AdminClinicDoctors\" element={<AdminClinicDoctors />}></Route>\n\n\n\n            <Route exact path=\"/Staff_Home\" element={<Staff_Home />}></Route>\n            <Route exact path=\"/Staff_Assign_Home_Visitor\" element={<Staff_Assign_Home_Visitor />}></Route>\n            <Route exact path=\"/Staff_Dashboard\" element={<Staff_Dashboard />}></Route>\n            <Route exact path=\"/Staff_ClinicPatients\" element={<Staff_ClinicPatients />}></Route>\n            <Route exact path=\"/Staff_Book_Appointment\" element={<Staff_Book_Appointment />}></Route>\n            <Route exact path=\"/Staff_Todays_Appointment\" element={<Staff_Todays_Appointment />}></Route>\n            <Route exact path=\"/Staff_TV_TodaysAppointments\" element={<Staff_TV_TodaysAppointments />}></Route>\n            <Route exact path=\"/Staff_Profile\" element={<Staff_Profile />}></Route>\n            <Route exact path=\"/Staff_EditProfile\" element={<Staff_EditProfile />}></Route>\n            <Route exact path=\"/Staff_Reports\" element={<Staff_Reports />}></Route>\n            <Route exact path=\"/Staff_Upload_Reports\" element={<Staff_Upload_Reports />}></Route>\n            <Route exact path=\"/Staff_Home_Visit_Request\" element={<Staff_Home_Visit_Request />}></Route>\n            <Route exact path=\"/Staff_Home_Visitors\" element={<Staff_Home_Visitors />}></Route>\n            <Route exact path=\"/Staff_Patient_Details_SendIn\" element={<Staff_Patient_Details_SendIn />}></Route>\n\n          </Routes>\n        </Fragment>\n      </div>\n      {/* <Route exact path=\"/forgotpassword\" component={ForgotPassword}><ForgotPassword /> </Route>\n        <Route exact path=\"/\" component={Navbar}><Navbar /> </Route>\n        <Route exact path=\"/dashboard\" component={Dashboard}><Dashboard /> </Route>\n        <Route exact path=\"/home\" component={HomeScreen}><HomeScreen /> </Route>\n        <Route exact path=\"/todaysappointment\" component={TodaysAppointment}><TodaysAppointment /> </Route>\n        <Route exact path=\"/bookappointment\" component={BookAppointment}><BookAppointment /> </Route>\n        <Route exact path=\"/patientregistration\" component={PatientRegistration}><PatientRegistration /> </Route>\n        <Route exact path=\"/clinicpatients\" component={ClinicPatients}><ClinicPatients /> </Route>\n        <Route exact path=\"/clinicservices\" component={ClinicServices}><ClinicServices /> </Route>\n        <Route exact path=\"/patientDetails_sendIn\" component={PatientDetails_SendIn}><PatientDetails_SendIn /> </Route>\n\n        <Route exact path=\"/DoctorNavbar\" component={DoctorNavbar}><DoctorNavbar /> </Route>\n        <Route exact path=\"/DoctorDashboard\" component={DoctorDashboard}><DoctorDashboard /> </Route>\n        <Route exact path=\"/DoctorHome\" component={DoctorHome}><DoctorHome /> </Route>\n        <Route exact path=\"/DoctorAddMedicine\" component={DoctorAddMedicine}><DoctorAddMedicine /> </Route>\n        <Route exact path=\"/DoctorReports\" component={DoctorReports}><DoctorReports /> </Route>\n        <Route exact path=\"/DoctorAddFacilities\" component={DoctorAddFacilities}><DoctorAddFacilities /> </Route>\n        <Route exact path=\"/DoctorUploadReports\" component={DoctorUploadReports}><DoctorUploadReports /> </Route>\n        <Route exact path=\"/DoctorAddStaff\" component={DoctorAddStaff}><DoctorAddStaff /> </Route>\n        <Route exact path=\"/DoctorBookAppointment\" component={DoctorBookAppointment}><DoctorBookAppointment /> </Route>\n        <Route exact path=\"/DoctorAddServices\" component={DoctorAddServices}><DoctorAddServices /> </Route>\n        <Route exact path=\"/DoctorClinicServices\" component={DoctorClinicServices}><DoctorClinicServices /> </Route>\n        <Route exact path=\"/DoctorPatientRegistration\" component={DoctorPatientRegistration}><DoctorPatientRegistration /> </Route>\n        <Route exact path=\"/DoctorTodaysAppointment\" component={DoctorTodaysAppointment}><DoctorTodaysAppointment /> </Route>\n        <Route exact path=\"/DoctorPatientDetails_SendIn\" component={DoctorPatientDetails_SendIn}><DoctorPatientDetails_SendIn /> </Route>\n        <Route exact path=\"/DoctorTreatPatient\" component={DoctorTreatPatient}><DoctorTreatPatient /> </Route>\n        <Route exact path=\"/DoctorGeneratePrescription\" component={DoctorGeneratePrescription}><DoctorGeneratePrescription /> </Route>\n        <Route exact path=\"/DoctorClinicPatients\" component={DoctorClinicPatients}><DoctorClinicPatients /> </Route>\n        <Route exact path=\"/DoctorProfile\" component={DoctorProfile}><DoctorProfile /> </Route>\n        <Route exact path=\"/DoctorEditProfile\" component={DoctorEditProfile}><DoctorEditProfile /> </Route>\n        <Route exact path=\"/DoctorHomeVisitors\" component={DoctorHomeVisitors}><DoctorHomeVisitors /> </Route>\n        <Route exact path=\"/DoctorHomeVisitRequest\" component={DoctorHomeVisitRequest}>< DoctorHomeVisitRequest /> </Route>\n        <Route exact path=\"/DoctorAddHomeVisitors\" component={DoctorAddHomeVisitors}>< DoctorAddHomeVisitors /> </Route>\n        <Route exact path=\"/DoctorPatientMedicalHistory\" component={DoctorPatientMedicalHistory}><DoctorPatientMedicalHistory /> </Route>\n        <Route exact path=\"/DoctorClinicStaff\" component={DoctorClinicStaff}><DoctorClinicStaff /> </Route>\n        <Route exact path=\"/DoctorAssignHomeVisitor\" component={DoctorAssignHomeVisitor}><DoctorAssignHomeVisitor /> </Route>\n        <Route exact path=\"/Doctor_TV_TodaysAppointments\" component={Doctor_TV_TodaysAppointments}><Doctor_TV_TodaysAppointments /> </Route>\n        <Route exact path=\"/DoctorEditClinicDetails\" component={DoctorEditClinicDetails}><DoctorEditClinicDetails /> </Route>\n\n\n\n        <Route exact path=\"/AdminHome\" component={AdminHome}><AdminHome /> </Route>\n        <Route exact path=\"/AdminDashboard\" component={AdminDashboard}><AdminDashboard /> </Route>\n        <Route exact path=\"/AdminAddClinic\" component={AdminAddClinic}><AdminAddClinic /> </Route>\n        <Route exact path=\"/AdminClinicDetails\" component={AdminClinicDetails}><AdminClinicDetails /> </Route>\n        <Route exact path=\"/AdminDoctorDetails\" component={AdminDoctorDetails}><AdminDoctorDetails /> </Route> */}\n\n      {/* </Routes>\n      </BrowserRouter> */}\n    </div>\n\n  );\n}\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}